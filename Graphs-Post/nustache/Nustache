D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.IsInstanceOfGenericIDictionary(System.Object value)	value != null	0.987341772151899	78	1	public static bool IsInstanceOfGenericIDictionary ( object value ) { if ( value != null ) ; if ( value == null ) { throw new ArgumentNullException ( ) ; } var objType = value . GetType ( ) ; bool isGenericIDictionaryType = ImplementsGenericIDictionary ( objType ) ; return isGenericIDictionaryType ; }	value != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.IsJValue(System.Object obj)	obj >= 0	0.642857142857143	9	5	public static bool IsJValue ( object obj ) { if ( obj >= 0 ) ; return obj . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ; }	obj >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	_name != null	1	95	0	public void Load ( IEnumerable < Part > parts ) { if ( _name != null ) ; foreach ( var part in parts ) { Add ( part ) ; } }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	template != null	1	98	0	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( template != null ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	template != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name != null	1	89	0	public override void Render ( RenderContext context ) { if ( _name != null ) ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	name != null	1	38	0	public static void Register ( string name , Helper helper ) { if ( name != null ) ; CustomHelpers . Add ( name , helper ) ; }	name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateDefinition.cs	Nustache.Core.TemplateDefinition.ToString()	ret != null	1	9	0	public override string ToString ( ) { if ( ret != null ) ; return string . Format ( "TemplateDefinition(\"{0}\")" , Name ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Parser.cs	Nustache.Core.Parser.Parse(Nustache.Core.Section section, System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	section != null	1	100	0	public void Parse ( Section section , IEnumerable < Part > parts ) { if ( section != null ) ; if ( section == null ) throw new ArgumentNullException ( "section" ) ; var sectionStack = new Stack < Section > ( ) ; sectionStack . Push ( section ) ; foreach ( var part in parts ) { section . Add ( part ) ; if ( part is Section ) { var newSection = ( Section ) part ; if ( newSection . Name == "else" ) { section . Inverse = newSection ; newSection . Inverse = section ; section = newSection ; } else { sectionStack . Push ( section ) ; section = newSection ; } } else if ( part is EndSection ) { var endSection = ( EndSection ) part ; if ( section . Name == "else" ) { section = section . Inverse ; } if ( sectionStack . Count == 1 ) { throw new NustacheException ( string . Format ( "Endsection{0}doesnotmatchanystartsection!" , endSection . Name ) ) ; } if ( endSection . Name . Split ( ) [ 0 ] . Trim ( ) != section . Name . Split ( ) [ 0 ] . Trim ( ) ) { throw new NustacheException ( string . Format ( "Endsection{0}doesnotmatchstartsection{1}!" , endSection . Name , section . Name ) ) ; } section = sectionStack . Pop ( ) ; } } }	section != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text != null	1	93	0	public static string DefaultHtmlEncode ( string text ) { if ( text != null ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContextBehaviour.cs	Nustache.Core.RenderContextBehaviour.GetDefaultRenderContextBehaviour()	ret != null	1	100	0	public static RenderContextBehaviour GetDefaultRenderContextBehaviour ( ) { if ( ret != null ) ; return new RenderContextBehaviour { RaiseExceptionOnDataContextMiss = false , RaiseExceptionOnEmptyStringValue = false } ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	name.ToString().Equals("link")	0.657894736842105	25	13	public static void Register ( string name , Helper helper ) { if ( name . ToString ( ) . Equals ( "link" ) ) ; CustomHelpers . Add ( name , helper ) ; }	name . ToString ( ) . Equals ( "link" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.IsJValue(System.Object obj)	obj != null	0.428571428571429	6	8	public static bool IsJValue ( object obj ) { if ( obj != null ) ; return obj . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ; }	obj != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateDefinition.cs	Nustache.Core.TemplateDefinition.ToString()	ret.ToString().Equals("TemplateDefinition(\"a\")")	1	9	0	public override string ToString ( ) { if ( ret . ToString ( ) . Equals ( "TemplateDefinition(\"a\")" ) ) ; return string . Format ( "TemplateDefinition(\"{0}\")" , Name ) ; }	ret . ToString ( ) . Equals ( "TemplateDefinition(\"a\")" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.IsInstanceOfGenericIDictionary(System.Object value)	value >= 0	0.113924050632911	9	70	public static bool IsInstanceOfGenericIDictionary ( object value ) { if ( value >= 0 ) ; if ( value == null ) { throw new ArgumentNullException ( ) ; } var objType = value . GetType ( ) ; bool isGenericIDictionaryType = ImplementsGenericIDictionary ( objType ) ; return isGenericIDictionaryType ; }	value >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	template.ToString().Equals("{{<t1}}One{{/t1}}{{<t2}}{{>t1}}Two{{/t2}}{{<t3}}{{>t2}}Three{{/t3}}{{>t3}}")	0.0204081632653061	2	96	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( template . ToString ( ) . Equals ( "{{<t1}}One{{/t1}}{{<t2}}{{>t1}}Two{{/t2}}{{<t3}}{{>t2}}Three{{/t3}}{{>t3}}" ) ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	template . ToString ( ) . Equals ( "{{<t1}}One{{/t1}}{{<t2}}{{>t1}}Two{{/t2}}{{<t3}}{{>t2}}Three{{/t3}}{{>t3}}" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	_name.ToString().Equals("foo")	0.0210526315789474	2	93	public void Load ( IEnumerable < Part > parts ) { if ( _name . ToString ( ) . Equals ( "foo" ) ) ; foreach ( var part in parts ) { Add ( part ) ; } }	_name . ToString ( ) . Equals ( "foo" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	_text != null	1	100	0	public override void Render ( RenderContext context ) { if ( _text != null ) ; context . WriteLiteral ( _text ) ; }	_text != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("foo")	0.0674157303370787	6	83	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "foo" ) ) ; }	_name . ToString ( ) . Equals ( "foo" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.IsJValue(System.Object obj)	ret == false	0.571428571428571	8	6	public static bool IsJValue ( object obj ) { if ( ret == false ) ; return obj . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ; }	ret == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	_text >= 0	0.03	3	97	public override void Render ( RenderContext context ) { if ( _text >= 0 ) ; context . WriteLiteral ( _text ) ; }	_text >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	template.ToString().Equals("before{{foo.bar}}after")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( template . ToString ( ) . Equals ( "before{{foo.bar}}after" ) ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	template . ToString ( ) . Equals ( "before{{foo.bar}}after" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context != null	1	92	0	public override void Render ( RenderContext context ) { if ( context != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Parser.cs	Nustache.Core.Parser.Parse(Nustache.Core.Section section, System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	section._name != null	1	100	0	public void Parse ( Section section , IEnumerable < Part > parts ) { if ( section . _name != null ) ; if ( section == null ) throw new ArgumentNullException ( "section" ) ; var sectionStack = new Stack < Section > ( ) ; sectionStack . Push ( section ) ; foreach ( var part in parts ) { section . Add ( part ) ; if ( part is Section ) { var newSection = ( Section ) part ; if ( newSection . Name == "else" ) { section . Inverse = newSection ; newSection . Inverse = section ; section = newSection ; } else { sectionStack . Push ( section ) ; section = newSection ; } } else if ( part is EndSection ) { var endSection = ( EndSection ) part ; if ( section . Name == "else" ) { section = section . Inverse ; } if ( sectionStack . Count == 1 ) { throw new NustacheException ( string . Format ( "Endsection{0}doesnotmatchanystartsection!" , endSection . Name ) ) ; } if ( endSection . Name . Split ( ) [ 0 ] . Trim ( ) != section . Name . Split ( ) [ 0 ] . Trim ( ) ) { throw new NustacheException ( string . Format ( "Endsection{0}doesnotmatchstartsection{1}!" , endSection . Name , section . Name ) ) ; } section = sectionStack . Pop ( ) ; } } }	section . _name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.GetValue(System.Object jValue)	jValue != null	1	6	0	public static object GetValue ( object jValue ) { if ( jValue != null ) ; var jValueType = jValue . GetType ( ) ; var typeOfValue = jValueType . GetProperty ( "Type" ) . GetValue ( jValue , null ) . ToString ( ) ; if ( typeOfValue == "Boolean" ) { return GetValue < bool > ( jValueType , jValue ) ; } if ( typeOfValue == "String" ) { return GetValue < string > ( jValueType , jValue ) ; } if ( typeOfValue == "Integer" ) { return GetValue < long > ( jValueType , jValue ) ; } if ( typeOfValue == "Float" ) { return GetValue < double > ( jValueType , jValue ) ; } return null ; }	jValue != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.Scan(System.String template)	template != null	1	100	0	public IEnumerable < Part > Scan ( string template ) { if ( template != null ) ; var regex = MakeRegex ( StartDelimiter , EndDelimiter ) ; var i = 0 ; var lineEnded = false ; while ( true ) { Match m ; if ( ( m = regex . Match ( template , i ) ) . Success ) { var previousLiteral = template . Substring ( i , m . Index - i ) ; var leadingWhiteSpace = m . Groups [ 1 ] ; var leadingLineEnd = m . Groups [ 2 ] ; var leadingWhiteSpaceOnly = m . Groups [ 3 ] ; var marker = m . Groups [ 4 ] . Value . Trim ( ) ; var trailingWhiteSpace = m . Groups [ 5 ] ; var trailingLineEnd = m . Groups [ 6 ] ; var isStandalone = ( leadingLineEnd . Success || ( lineEnded && m . Index == i ) ) && trailingLineEnd . Success ; Part part = null ; if ( marker [ 0 ] == '=' ) { var delimiters = DelimitersRegex . Match ( marker ) ; if ( delimiters . Success ) { var start = delimiters . Groups [ 1 ] . Value ; var end = delimiters . Groups [ 2 ] . Value ; this . StartDelimiter = start ; this . EndDelimiter = end ; regex = MakeRegex ( start , end ) ; } } else if ( marker [ 0 ] == '#' ) { part = new Block ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '^' ) { part = new InvertedBlock ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '<' ) { part = new TemplateDefinition ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '/' ) { part = new EndSection ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '>' ) { part = new TemplateInclude ( marker . Substring ( 1 ) . Trim ( ) , lineEnded || i == 0 ? leadingWhiteSpaceOnly . Value : null ) ; } else if ( marker [ 0 ] != '!' ) { if ( marker == "else" ) { part = new Block ( marker ) ; } else { part = new VariableReference ( marker ) ; isStandalone = false ; } } if ( ! isStandalone ) { previousLiteral += leadingWhiteSpace ; } else { previousLiteral += leadingLineEnd ; if ( part is TemplateInclude ) { previousLiteral += leadingWhiteSpaceOnly ; } } if ( previousLiteral != "" ) { yield return new LiteralText ( previousLiteral ) ; } if ( part != null ) { yield return part ; } i = m . Index + m . Length ; if ( ! isStandalone ) { i -= trailingWhiteSpace . Length ; } lineEnded = trailingLineEnd . Success ; } else { break ; } } if ( i < template . Length ) { var remainingLiteral = template . Substring ( i ) ; yield return new LiteralText ( remainingLiteral ) ; } }	template != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data != null	0.459183673469388	45	53	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( data != null ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	data != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContextBehaviour.cs	Nustache.Core.RenderContextBehaviour.GetDefaultRenderContextBehaviour()	ret >= 0	0.01	1	99	public static RenderContextBehaviour GetDefaultRenderContextBehaviour ( ) { if ( ret >= 0 ) ; return new RenderContextBehaviour { RaiseExceptionOnDataContextMiss = false , RaiseExceptionOnEmptyStringValue = false } ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	name.ToString().Equals("list")	0.105263157894737	4	34	public static void Register ( string name , Helper helper ) { if ( name . ToString ( ) . Equals ( "list" ) ) ; CustomHelpers . Add ( name , helper ) ; }	name . ToString ( ) . Equals ( "list" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text >= 0	0.010752688172043	1	92	public static string DefaultHtmlEncode ( string text ) { if ( text >= 0 ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _dataStack != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.IsInstanceOfGenericIDictionary(System.Object value)	ret == false	0.746835443037975	59	20	public static bool IsInstanceOfGenericIDictionary ( object value ) { if ( ret == false ) ; if ( value == null ) { throw new ArgumentNullException ( ) ; } var objType = value . GetType ( ) ; bool isGenericIDictionaryType = ImplementsGenericIDictionary ( objType ) ; return isGenericIDictionaryType ; }	ret == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("if")	0.0224719101123596	2	87	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "if" ) ) ; }	_name . ToString ( ) . Equals ( "if" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack != null	1	95	0	public object GetValue ( string path ) { if ( _dataStack != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	_name.ToString().Equals("a")	0.0105263157894737	1	94	public void Load ( IEnumerable < Part > parts ) { if ( _name . ToString ( ) . Equals ( "a" ) ) ; foreach ( var part in parts ) { Add ( part ) ; } }	_name . ToString ( ) . Equals ( "a" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	_indent != null	0.203389830508475	12	47	public override void Render ( RenderContext context ) { if ( _indent != null ) ; context . Include ( _name , _indent ) ; }	_indent != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("Data")	0.0112359550561798	1	88	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "Data" ) ) ; }	_name . ToString ( ) . Equals ( "Data" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.GetValue(System.Object jValue)	ret != null	1	6	0	public static object GetValue ( object jValue ) { if ( ret != null ) ; var jValueType = jValue . GetType ( ) ; var typeOfValue = jValueType . GetProperty ( "Type" ) . GetValue ( jValue , null ) . ToString ( ) ; if ( typeOfValue == "Boolean" ) { return GetValue < bool > ( jValueType , jValue ) ; } if ( typeOfValue == "String" ) { return GetValue < string > ( jValueType , jValue ) ; } if ( typeOfValue == "Integer" ) { return GetValue < long > ( jValueType , jValue ) ; } if ( typeOfValue == "Float" ) { return GetValue < double > ( jValueType , jValue ) ; } return null ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data == null	0.0204081632653061	2	96	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( data == null ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	data == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context != null	1	27	0	public override void Render ( RenderContext context ) { if ( context != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	_indent == null	0.525423728813559	31	28	public override void Render ( RenderContext context ) { if ( _indent == null ) ; context . Include ( _name , _indent ) ; }	_indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("noop")	0.0224719101123596	2	87	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "noop" ) ) ; }	_name . ToString ( ) . Equals ( "noop" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	_text.ToString().Equals("before")	0.06	6	94	public override void Render ( RenderContext context ) { if ( _text . ToString ( ) . Equals ( "before" ) ) ; context . WriteLiteral ( _text ) ; }	_text . ToString ( ) . Equals ( "before" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour == null	0.479591836734694	47	51	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( renderContextBehaviour == null ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	renderContextBehaviour == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.GetValue(System.Type type, System.Object obj)	type != null	1	6	0	private static T GetValue < T > ( Type type , object obj ) { if ( type != null ) ; var value = type . GetProperty ( "Value" ) . GetValue ( obj , null ) ; var valid = value is T ; return valid ? ( T ) value : default ( T ) ; }	type != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("unless")	0.0112359550561798	1	88	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "unless" ) ) ; }	_name . ToString ( ) . Equals ( "unless" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context != null	1	100	0	public override void Render ( RenderContext context ) { if ( context != null ) ; context . WriteLiteral ( _text ) ; }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	_name != null	1	59	0	public override void Render ( RenderContext context ) { if ( _name != null ) ; context . Include ( _name , _indent ) ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("Item")	0.0449438202247191	4	85	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "Item" ) ) ; }	_name . ToString ( ) . Equals ( "Item" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.GetValue(System.Type type, System.Object obj)	obj != null	1	6	0	private static T GetValue < T > ( Type type , object obj ) { if ( obj != null ) ; var value = type . GetProperty ( "Value" ) . GetValue ( obj , null ) ; var valid = value is T ; return valid ? ( T ) value : default ( T ) ; }	obj != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack >= 0	0.0108695652173913	1	91	public override void Render ( RenderContext context ) { if ( context . _dataStack >= 0 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	name.ToString().Equals("noop")	0.210526315789474	8	30	public static void Register ( string name , Helper helper ) { if ( name . ToString ( ) . Equals ( "noop" ) ) ; CustomHelpers . Add ( name , helper ) ; }	name . ToString ( ) . Equals ( "noop" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour != null	0.0102040816326531	1	97	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( renderContextBehaviour != null ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.IsInstanceOfGenericIDictionary(System.Object value)	ret == true	0.0759493670886076	6	73	public static bool IsInstanceOfGenericIDictionary ( object value ) { if ( ret == true ) ; if ( value == null ) { throw new ArgumentNullException ( ) ; } var objType = value . GetType ( ) ; bool isGenericIDictionaryType = ImplementsGenericIDictionary ( objType ) ; return isGenericIDictionaryType ; }	ret == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _dataStack != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.ImplementsGenericIDictionary(System.Type type)	type != null	1	79	0	private static bool ImplementsGenericIDictionary ( Type type ) { if ( type != null ) ; return ( type . FindInterfaces ( IsGenericIDictionary , null ) . Length > 0 ) ; }	type != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	_parts != null	1	95	0	public void Load ( IEnumerable < Part > parts ) { if ( _parts != null ) ; foreach ( var part in parts ) { Add ( part ) ; } }	_parts != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text.ToString().Equals("Привет, как дела")	0.010752688172043	1	92	public static string DefaultHtmlEncode ( string text ) { if ( text . ToString ( ) . Equals ( "Привет,какдела" ) ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text . ToString ( ) . Equals ( "Привет,какдела" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\JValueIdentifier.cs	Nustache.Core.JValueIdentifier.GetValue(System.Type type, System.Object obj)	ret != null	1	6	0	private static T GetValue < T > ( Type type , object obj ) { if ( ret != null ) ; var value = type . GetProperty ( "Value" ) . GetValue ( obj , null ) ; var valid = value is T ; return valid ? ( T ) value : default ( T ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Count == 4	1	27	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Count == 4 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("node")	0.11864406779661	7	52	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "node" ) ) ; context . Include ( _name , _indent ) ; }	_name . ToString ( ) . Equals ( "node" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret != null	0.989795918367347	97	1	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret != null ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Count == 4	0.826086956521739	76	16	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Count == 4 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	_parts >= 0	0.0210526315789474	2	93	public void Load ( IEnumerable < Part > parts ) { if ( _parts >= 0 ) ; foreach ( var part in parts ) { Add ( part ) ; } }	_parts >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.Scan(System.String template)	template >= 0	0.02	2	98	public IEnumerable < Part > Scan ( string template ) { if ( template >= 0 ) ; var regex = MakeRegex ( StartDelimiter , EndDelimiter ) ; var i = 0 ; var lineEnded = false ; while ( true ) { Match m ; if ( ( m = regex . Match ( template , i ) ) . Success ) { var previousLiteral = template . Substring ( i , m . Index - i ) ; var leadingWhiteSpace = m . Groups [ 1 ] ; var leadingLineEnd = m . Groups [ 2 ] ; var leadingWhiteSpaceOnly = m . Groups [ 3 ] ; var marker = m . Groups [ 4 ] . Value . Trim ( ) ; var trailingWhiteSpace = m . Groups [ 5 ] ; var trailingLineEnd = m . Groups [ 6 ] ; var isStandalone = ( leadingLineEnd . Success || ( lineEnded && m . Index == i ) ) && trailingLineEnd . Success ; Part part = null ; if ( marker [ 0 ] == '=' ) { var delimiters = DelimitersRegex . Match ( marker ) ; if ( delimiters . Success ) { var start = delimiters . Groups [ 1 ] . Value ; var end = delimiters . Groups [ 2 ] . Value ; this . StartDelimiter = start ; this . EndDelimiter = end ; regex = MakeRegex ( start , end ) ; } } else if ( marker [ 0 ] == '#' ) { part = new Block ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '^' ) { part = new InvertedBlock ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '<' ) { part = new TemplateDefinition ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '/' ) { part = new EndSection ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '>' ) { part = new TemplateInclude ( marker . Substring ( 1 ) . Trim ( ) , lineEnded || i == 0 ? leadingWhiteSpaceOnly . Value : null ) ; } else if ( marker [ 0 ] != '!' ) { if ( marker == "else" ) { part = new Block ( marker ) ; } else { part = new VariableReference ( marker ) ; isStandalone = false ; } } if ( ! isStandalone ) { previousLiteral += leadingWhiteSpace ; } else { previousLiteral += leadingLineEnd ; if ( part is TemplateInclude ) { previousLiteral += leadingWhiteSpaceOnly ; } } if ( previousLiteral != "" ) { yield return new LiteralText ( previousLiteral ) ; } if ( part != null ) { yield return part ; } i = m . Index + m . Length ; if ( ! isStandalone ) { i -= trailingWhiteSpace . Length ; } lineEnded = trailingLineEnd . Success ; } else { break ; } } if ( i < template . Length ) { var remainingLiteral = template . Substring ( i ) ; yield return new LiteralText ( remainingLiteral ) ; } }	template >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("with")	0.0224719101123596	2	87	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "with" ) ) ; }	_name . ToString ( ) . Equals ( "with" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals(".")	0.0112359550561798	1	88	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "." ) ) ; }	_name . ToString ( ) . Equals ( "." )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	_templateDefinitions != null	1	95	0	public void Load ( IEnumerable < Part > parts ) { if ( _templateDefinitions != null ) ; foreach ( var part in parts ) { Add ( part ) ; } }	_templateDefinitions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context != null	1	89	0	public override void Render ( RenderContext context ) { if ( context != null ) ; }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _dataStack != null ) ; }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.129032258064516	92	621	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack >= 0	0.0112359550561798	1	88	public override void Render ( RenderContext context ) { if ( context . _dataStack >= 0 ) ; }	context . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("foo")	0.355932203389831	21	38	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "foo" ) ) ; context . Include ( _name , _indent ) ; }	_name . ToString ( ) . Equals ( "foo" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	helper != null	1	38	0	public static void Register ( string name , Helper helper ) { if ( helper != null ) ; CustomHelpers . Add ( name , helper ) ; }	helper != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text.ToString().Equals("42")	0.010752688172043	1	92	public static string DefaultHtmlEncode ( string text ) { if ( text . ToString ( ) . Equals ( "42" ) ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text . ToString ( ) . Equals ( "42" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	_templateDefinitions >= 0	0.0105263157894737	1	94	public void Load ( IEnumerable < Part > parts ) { if ( _templateDefinitions >= 0 ) ; foreach ( var part in parts ) { Add ( part ) ; } }	_templateDefinitions >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	_name.ToString().Equals("a")	0.11864406779661	7	52	public override void Render ( RenderContext context ) { if ( _name . ToString ( ) . Equals ( "a" ) ) ; context . Include ( _name , _indent ) ; }	_name . ToString ( ) . Equals ( "a" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indent)	0.106591865357644	76	637	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Count == 4	0.820224719101124	73	16	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Count == 4 ) ; }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	parts != null	1	95	0	public void Load ( IEnumerable < Part > parts ) { if ( parts != null ) ; foreach ( var part in parts ) { Add ( part ) ; } }	parts != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.ImplementsGenericIDictionary(System.Type type)	ret == false	0.746835443037975	59	20	private static bool ImplementsGenericIDictionary ( Type type ) { if ( ret == false ) ; return ( type . FindInterfaces ( IsGenericIDictionary , null ) . Length > 0 ) ; }	ret == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret >= 0	0.0204081632653061	2	96	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret >= 0 ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context != null	1	59	0	public override void Render ( RenderContext context ) { if ( context != null ) ; context . Include ( _name , _indent ) ; }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.1350531107739	89	570	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Load(System.Collections.Generic.IEnumerable`1<Nustache.Core.Part> parts)	parts >= 0	0.0105263157894737	1	94	public void Load ( IEnumerable < Part > parts ) { if ( parts >= 0 ) ; foreach ( var part in parts ) { Add ( part ) ; } }	parts >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text.ToString().Equals("<bar>")	0.010752688172043	1	92	public static string DefaultHtmlEncode ( string text ) { if ( text . ToString ( ) . Equals ( "<bar>" ) ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text . ToString ( ) . Equals ( "<bar>" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	target != null	1	96	0	public static object GetValue ( object target , string name ) { if ( target != null ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack >= 0	0.0105263157894737	1	94	public object GetValue ( string path ) { if ( _dataStack >= 0 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	helper._methodBase == null	1	38	0	public static void Register ( string name , Helper helper ) { if ( helper . _methodBase == null ) ; CustomHelpers . Add ( name , helper ) ; }	helper . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capnames)	0.1350531107739	89	570	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("OneTwoThree")	0.0204081632653061	2	96	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "OneTwoThree" ) ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	ret . ToString ( ) . Equals ( "OneTwoThree" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _dataStack != null ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text.ToString().Equals("c")	0.010752688172043	1	92	public static string DefaultHtmlEncode ( string text ) { if ( text . ToString ( ) . Equals ( "c" ) ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text . ToString ( ) . Equals ( "c" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.caps)	0.1350531107739	89	570	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _dataStack != null ) ; context . Include ( _name , _indent ) ; }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Section.cs	Nustache.Core.Section.Add(Nustache.Core.Part part)	_name != null	1	100	0	public void Add ( Part part ) { if ( _name != null ) ; if ( part is TemplateDefinition ) { var templateDefinition = ( TemplateDefinition ) part ; _templateDefinitions . Add ( templateDefinition . Name , templateDefinition ) ; } else { _parts . Add ( part ) ; } }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capnames)	0.129032258064516	92	621	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Count == 4	0.728813559322034	43	16	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Count == 4 ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("bar")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "bar" ) ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	ret . ToString ( ) . Equals ( "bar" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.ImplementsGenericIDictionary(System.Type type)	ret == true	0.0759493670886076	6	73	private static bool ImplementsGenericIDictionary ( Type type ) { if ( ret == true ) ; return ( type . FindInterfaces ( IsGenericIDictionary , null ) . Length > 0 ) ; }	ret == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capslist)	0.1350531107739	89	570	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text.ToString().Equals("Connection closed")	0.021505376344086	2	91	public static string DefaultHtmlEncode ( string text ) { if ( text . ToString ( ) . Equals ( "Connectionclosed" ) ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text . ToString ( ) . Equals ( "Connectionclosed" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.126338329764454	59	408	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	helper._methodPtr != null	1	38	0	public static void Register ( string name , Helper helper ) { if ( helper . _methodPtr != null ) ; CustomHelpers . Add ( name , helper ) ; }	helper . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capnames)	0.126338329764454	59	408	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("<a href=\"URL\">TEXT</a>")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "<ahref=\"URL\">TEXT</a>" ) ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	ret . ToString ( ) . Equals ( "<ahref=\"URL\">TEXT</a>" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.Scan(System.String template)	ret != null	1	100	0	public IEnumerable < Part > Scan ( string template ) { if ( ret != null ) ; var regex = MakeRegex ( StartDelimiter , EndDelimiter ) ; var i = 0 ; var lineEnded = false ; while ( true ) { Match m ; if ( ( m = regex . Match ( template , i ) ) . Success ) { var previousLiteral = template . Substring ( i , m . Index - i ) ; var leadingWhiteSpace = m . Groups [ 1 ] ; var leadingLineEnd = m . Groups [ 2 ] ; var leadingWhiteSpaceOnly = m . Groups [ 3 ] ; var marker = m . Groups [ 4 ] . Value . Trim ( ) ; var trailingWhiteSpace = m . Groups [ 5 ] ; var trailingLineEnd = m . Groups [ 6 ] ; var isStandalone = ( leadingLineEnd . Success || ( lineEnded && m . Index == i ) ) && trailingLineEnd . Success ; Part part = null ; if ( marker [ 0 ] == '=' ) { var delimiters = DelimitersRegex . Match ( marker ) ; if ( delimiters . Success ) { var start = delimiters . Groups [ 1 ] . Value ; var end = delimiters . Groups [ 2 ] . Value ; this . StartDelimiter = start ; this . EndDelimiter = end ; regex = MakeRegex ( start , end ) ; } } else if ( marker [ 0 ] == '#' ) { part = new Block ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '^' ) { part = new InvertedBlock ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '<' ) { part = new TemplateDefinition ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '/' ) { part = new EndSection ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '>' ) { part = new TemplateInclude ( marker . Substring ( 1 ) . Trim ( ) , lineEnded || i == 0 ? leadingWhiteSpaceOnly . Value : null ) ; } else if ( marker [ 0 ] != '!' ) { if ( marker == "else" ) { part = new Block ( marker ) ; } else { part = new VariableReference ( marker ) ; isStandalone = false ; } } if ( ! isStandalone ) { previousLiteral += leadingWhiteSpace ; } else { previousLiteral += leadingLineEnd ; if ( part is TemplateInclude ) { previousLiteral += leadingWhiteSpaceOnly ; } } if ( previousLiteral != "" ) { yield return new LiteralText ( previousLiteral ) ; } if ( part != null ) { yield return part ; } i = m . Index + m . Length ; if ( ! isStandalone ) { i -= trailingWhiteSpace . Length ; } lineEnded = trailingLineEnd . Success ; } else { break ; } } if ( i < template . Length ) { var remainingLiteral = template . Substring ( i ) ; yield return new LiteralText ( remainingLiteral ) ; } }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	target == 1	0.0833333333333333	8	88	public static object GetValue ( object target , string name ) { if ( target == 1 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	target == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indent)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.caps)	0.126338329764454	59	408	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack >= 0	0.02	2	98	public override void Render ( RenderContext context ) { if ( context . _dataStack >= 0 ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.factory)	0.1350531107739	89	570	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.caps)	0.129032258064516	92	621	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	helper._methodPtrAux == 0	1	38	0	public static void Register ( string name , Helper helper ) { if ( helper . _methodPtrAux == 0 ) ; CustomHelpers . Add ( name , helper ) ; }	helper . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.1350531107739	89	570	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text.ToString().Equals("Nustache")	0.032258064516129	3	90	public static string DefaultHtmlEncode ( string text ) { if ( text . ToString ( ) . Equals ( "Nustache" ) ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text . ToString ( ) . Equals ( "Nustache" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("&lt;bar&gt;")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "&lt;bar&gt;" ) ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	ret . ToString ( ) . Equals ( "&lt;bar&gt;" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capnames)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator._methodBase)	0.00758725341426404	5	654	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator . _methodBase ) ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.IsGenericIDictionary(System.Type type, System.Object searchCrit)	type != null	1	74	0	private static bool IsGenericIDictionary ( Type type , object searchCrit ) { if ( type != null ) ; return ( type . Name == OpenIDictionaryType . Name ) && type . IsGenericType && type . GetGenericTypeDefinition ( ) == OpenIDictionaryType ; }	type != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indent)	0.0637329286798179	42	617	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Count == 4	0.84	84	16	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Count == 4 ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.IsGenericIDictionary(System.Type type, System.Object searchCrit)	searchCrit == null	1	74	0	private static bool IsGenericIDictionary ( Type type , object searchCrit ) { if ( searchCrit == null ) ; return ( type . Name == OpenIDictionaryType . Name ) && type . IsGenericType && type . GetGenericTypeDefinition ( ) == OpenIDictionaryType ; }	searchCrit == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capslist)	0.126338329764454	59	408	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	exception != null	0.489795918367347	48	50	public static string StringToString ( string template , object data , RenderContextBehaviour renderContextBehaviour = null ) { if ( exception != null ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; return StringToString ( template , data , null , renderBehaviour ) ; }	exception != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	helper._target != null	0.973684210526316	37	1	public static void Register ( string name , Helper helper ) { if ( helper . _target != null ) ; CustomHelpers . Add ( name , helper ) ; }	helper . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.caps)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capslist)	0.129032258064516	92	621	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capslist)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	template != null	1	98	0	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( template != null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	template != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.factory)	0.126338329764454	59	408	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	helper._target >= 0	0.0263157894736842	1	37	public static void Register ( string name , Helper helper ) { if ( helper . _target >= 0 ) ; CustomHelpers . Add ( name , helper ) ; }	helper . _target >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator)	0.127465857359636	84	575	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.133812949640288	93	602	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\GenericDictionaryUtil.cs	Nustache.Core.GenericIDictionaryUtil.IsGenericIDictionary(System.Type type, System.Object searchCrit)	ret == false	0.837837837837838	62	12	private static bool IsGenericIDictionary ( Type type , object searchCrit ) { if ( ret == false ) ; return ( type . Name == OpenIDictionaryType . Name ) && type . IsGenericType && type . GetGenericTypeDefinition ( ) == OpenIDictionaryType ; }	ret == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._syncRoot == null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _syncRoot == null ) ; }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capnames)	0.133812949640288	93	602	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	target >= 0	0.0625	6	90	public static object GetValue ( object target , string name ) { if ( target >= 0 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	target >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.126338329764454	59	408	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._dataStack._version >= context._dataStack._size	1	89	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.factory)	0.129032258064516	92	621	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	template.ToString().Equals("{{<t1}}One{{/t1}}{{<t2}}{{>t1}}Two{{/t2}}{{<t3}}{{>t2}}Three{{/t3}}{{>t3}}")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( template . ToString ( ) . Equals ( "{{<t1}}One{{/t1}}{{<t2}}{{>t1}}Two{{/t2}}{{<t3}}{{>t2}}Three{{/t3}}{{>t3}}" ) ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	template . ToString ( ) . Equals ( "{{<t1}}One{{/t1}}{{<t2}}{{>t1}}Two{{/t2}}{{<t3}}{{>t2}}Three{{/t3}}{{>t3}}" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.factory)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	helper._target >= helper._methodPtrAux	0.0263157894736842	1	37	public static void Register ( string name , Helper helper ) { if ( helper . _target >= helper . _methodPtrAux ) ; CustomHelpers . Add ( name , helper ) ; }	helper . _target >= helper . _methodPtrAux
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator._methodBase)	0.0471092077087794	22	445	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator . _methodBase ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.Scan(System.String template)	ret >= 0	0.01	1	99	public IEnumerable < Part > Scan ( string template ) { if ( ret >= 0 ) ; var regex = MakeRegex ( StartDelimiter , EndDelimiter ) ; var i = 0 ; var lineEnded = false ; while ( true ) { Match m ; if ( ( m = regex . Match ( template , i ) ) . Success ) { var previousLiteral = template . Substring ( i , m . Index - i ) ; var leadingWhiteSpace = m . Groups [ 1 ] ; var leadingLineEnd = m . Groups [ 2 ] ; var leadingWhiteSpaceOnly = m . Groups [ 3 ] ; var marker = m . Groups [ 4 ] . Value . Trim ( ) ; var trailingWhiteSpace = m . Groups [ 5 ] ; var trailingLineEnd = m . Groups [ 6 ] ; var isStandalone = ( leadingLineEnd . Success || ( lineEnded && m . Index == i ) ) && trailingLineEnd . Success ; Part part = null ; if ( marker [ 0 ] == '=' ) { var delimiters = DelimitersRegex . Match ( marker ) ; if ( delimiters . Success ) { var start = delimiters . Groups [ 1 ] . Value ; var end = delimiters . Groups [ 2 ] . Value ; this . StartDelimiter = start ; this . EndDelimiter = end ; regex = MakeRegex ( start , end ) ; } } else if ( marker [ 0 ] == '#' ) { part = new Block ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '^' ) { part = new InvertedBlock ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '<' ) { part = new TemplateDefinition ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '/' ) { part = new EndSection ( marker . Substring ( 1 ) . Trim ( ) ) ; } else if ( marker [ 0 ] == '>' ) { part = new TemplateInclude ( marker . Substring ( 1 ) . Trim ( ) , lineEnded || i == 0 ? leadingWhiteSpaceOnly . Value : null ) ; } else if ( marker [ 0 ] != '!' ) { if ( marker == "else" ) { part = new Block ( marker ) ; } else { part = new VariableReference ( marker ) ; isStandalone = false ; } } if ( ! isStandalone ) { previousLiteral += leadingWhiteSpace ; } else { previousLiteral += leadingLineEnd ; if ( part is TemplateInclude ) { previousLiteral += leadingWhiteSpaceOnly ; } } if ( previousLiteral != "" ) { yield return new LiteralText ( previousLiteral ) ; } if ( part != null ) { yield return part ; } i = m . Index + m . Length ; if ( ! isStandalone ) { i -= trailingWhiteSpace . Length ; } lineEnded = trailingLineEnd . Success ; } else { break ; } } if ( i < template . Length ) { var remainingLiteral = template . Substring ( i ) ; yield return new LiteralText ( remainingLiteral ) ; } }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator)	0.0792291220556745	37	430	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter != null ) ; }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Register(System.String name, Nustache.Core.Helper helper)	exception != null	0.131578947368421	5	33	public static void Register ( string name , Helper helper ) { if ( exception != null ) ; CustomHelpers . Add ( name , helper ) ; }	exception != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(_indent)	0.0663811563169165	31	436	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( _indent ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.capnames == null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capnames == null ) ; }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.129032258064516	92	621	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Count == 4	0.831578947368421	79	16	public object GetValue ( string path ) { if ( _dataStack . _array . Count == 4 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	text.ToString().Equals("bar")	0.010752688172043	1	92	public static string DefaultHtmlEncode ( string text ) { if ( text . ToString ( ) . Equals ( "bar" ) ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	text . ToString ( ) . Equals ( "bar" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._array != null	0.259259259259259	7	20	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	target >= 1	0.09375	9	87	public static object GetValue ( object target , string name ) { if ( target >= 1 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	target >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator)	0.129032258064516	92	621	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	_escaped == true	0.791666666666667	76	20	public override void Render ( RenderContext context ) { if ( _escaped == true ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	_escaped == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indent)	0.0620985010706638	29	438	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._size == 1	1	27	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _size == 1 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name != null	1	74	0	public static bool Contains ( string name ) { if ( name != null ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.caps)	0.133812949640288	93	602	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	template.ToString().Equals("before{{foo.bar}}after")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( template . ToString ( ) . Equals ( "before{{foo.bar}}after" ) ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	template . ToString ( ) . Equals ( "before{{foo.bar}}after" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._syncRoot == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _syncRoot == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array != null	0.559322033898305	33	26	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array != null ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.caps == null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . caps == null ) ; }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capslist)	0.133812949640288	93	602	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name.ToString().Equals("link")	0.0675675675675676	5	69	public static bool Contains ( string name ) { if ( name . ToString ( ) . Equals ( "link" ) ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name . ToString ( ) . Equals ( "link" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == null)	0.508474576271186	30	29	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == null ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._version == 1	1	27	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version == 1 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	target <= 1	0.0833333333333333	8	88	public static object GetValue ( object target , string name ) { if ( target <= 1 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	target <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.factory)	0.133812949640288	93	602	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == 1	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == 1 ) ; }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	ret != null	1	93	0	public static string DefaultHtmlEncode ( string text ) { if ( ret != null ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array != null	0.934782608695652	86	6	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.capslist == null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capslist == null ) ; }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	_escaped == false	0.0208333333333333	2	94	public override void Render ( RenderContext context ) { if ( _escaped == false ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	_escaped == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name.ToString().Equals("foo")	0.189189189189189	14	60	public static bool Contains ( string name ) { if ( name . ToString ( ) . Equals ( "foo" ) ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name . ToString ( ) . Equals ( "foo" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == 1)	0.271186440677966	16	43	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == 1 ) ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.code != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . code != null ) ; }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data != null	0.418367346938776	41	57	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( data != null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	data != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array >= 0	0.0326086956521739	3	89	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array >= 0 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._syncRoot == null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _syncRoot == null ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data == null	0.0204081632653061	2	96	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( data == null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	data == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	name != null	1	96	0	public static object GetValue ( object target , string name ) { if ( name != null ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	_path != null	1	96	0	public override void Render ( RenderContext context ) { if ( _path != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	_path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	start != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( start != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	start != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.factory == null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . factory == null ) ; }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator == null	0.857142857142857	84	14	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator == null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	ret != null	0.791666666666667	76	20	public static object GetValue ( object target , string name ) { if ( ret != null ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.133812949640288	93	602	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == null)	0.0760869565217391	7	85	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == null ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._dataStack._version >= context._dataStack._size	1	59	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; context . Include ( _name , _indent ) ; }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name.ToString().Equals("list")	0.0405405405405405	3	71	public static bool Contains ( string name ) { if ( name . ToString ( ) . Equals ( "list" ) ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name . ToString ( ) . Equals ( "list" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == 1)	0.173913043478261	16	76	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == 1 ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._dataStack._version == context._dataStack._size	1	27	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version == context . _dataStack . _size ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _dataStack . _version == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	ret == 0	0.0625	6	90	public static object GetValue ( object target , string name ) { if ( ret == 0 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	ret == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	_path.ToString().Equals("foo")	0.0416666666666667	4	92	public override void Render ( RenderContext context ) { if ( _path . ToString ( ) . Equals ( "foo" ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	_path . ToString ( ) . Equals ( "foo" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._includeLevel == 0	1	27	0	public override void Render ( RenderContext context ) { if ( context . _includeLevel == 0 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Encoders.cs	Nustache.Core.Encoders.DefaultHtmlEncode(System.String text)	ret >= 0	0.032258064516129	3	90	public static string DefaultHtmlEncode ( string text ) { if ( ret >= 0 ) ; if ( text == null ) { return null ; } var sb = new StringBuilder ( text . Length ) ; var len = text . Length ; for ( var i = 0 ; i < len ; i ++ ) { switch ( text [ i ] ) { case '<' : sb . Append ( "&lt;" ) ; break ; case '>' : sb . Append ( "&gt;" ) ; break ; case '"' : sb . Append ( "&quot;" ) ; break ; case '&' : sb . Append ( "&amp;" ) ; break ; default : var ch = text [ i ] ; if ( ch > 159 ) { sb . Append ( "&#" ) ; if ( char . IsHighSurrogate ( ch ) && ( i + 1 ) < len ) { sb . Append ( char . ConvertToUtf32 ( ch , text [ i + 1 ] ) ) ; i ++ ; } else { sb . Append ( ( ( int ) ch ) . ToString ( CultureInfo . InvariantCulture ) ) ; } sb . Append ( ";" ) ; } else { sb . Append ( text [ i ] ) ; } break ; } } return sb . ToString ( ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= 0	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._includeLevel >= 0	1	59	0	public override void Render ( RenderContext context ) { if ( context . _includeLevel >= 0 ) ; context . Include ( _name , _indent ) ; }	context . _includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodBase == null	0.142857142857143	14	84	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodBase == null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	templateLocator . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	ret == 1	0.0625	6	90	public static object GetValue ( object target , string name ) { if ( ret == 1 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	ret == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name.ToString().Equals("foo.bar")	0.0405405405405405	3	71	public static bool Contains ( string name ) { if ( name . ToString ( ) . Equals ( "foo.bar" ) ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name . ToString ( ) . Equals ( "foo.bar" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indent == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indent == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter != null ) ; context . Include ( _name , _indent ) ; }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtr != null	0.142857142857143	14	84	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtr != null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	templateLocator . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x >= 1)	0.16304347826087	15	77	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x >= 1 ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	start.ToString().Equals("{{")	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( start . ToString ( ) . Equals ( "{{" ) ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	start . ToString ( ) . Equals ( "{{" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator._methodBase)	0.037410071942446	26	669	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator . _methodBase ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	_path.ToString().Equals("value")	0.0104166666666667	1	95	public override void Render ( RenderContext context ) { if ( _path . ToString ( ) . Equals ( "value" ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	_path . ToString ( ) . Equals ( "value" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.capnames == null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capnames == null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.capnames == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capnames == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	ret >= 1	0.34375	33	63	public static object GetValue ( object target , string name ) { if ( ret >= 1 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	ret >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name.ToString().Equals("noop")	0.0405405405405405	3	71	public static bool Contains ( string name ) { if ( name . ToString ( ) . Equals ( "noop" ) ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name . ToString ( ) . Equals ( "noop" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_dataStack._syncRoot)	0.128205128205128	90	612	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._includeLevel	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x >= 0)	0.0978260869565217	9	83	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x >= 0 ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.caps == null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . caps == null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	_path.ToString().Equals("foo.bar")	0.0104166666666667	1	95	public override void Render ( RenderContext context ) { if ( _path . ToString ( ) . Equals ( "foo.bar" ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	_path . ToString ( ) . Equals ( "foo.bar" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.caps == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . caps == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name.ToString().Equals("with")	0.027027027027027	2	72	public static bool Contains ( string name ) { if ( name . ToString ( ) . Equals ( "with" ) ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name . ToString ( ) . Equals ( "with" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indent)	0.0719424460431655	50	645	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.pattern != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . pattern != null ) ; }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux == 0	0.142857142857143	14	84	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtrAux == 0 ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	templateLocator . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	ret >= 0	0.5625	54	42	public static object GetValue ( object target , string name ) { if ( ret >= 0 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.refsInitialized == true	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . refsInitialized == true ) ; }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == 1	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == 1 ) ; context . Include ( _name , _indent ) ; }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator)	0.0964028776978417	67	628	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x <= 1)	0.173913043478261	16	76	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x <= 1 ) ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array != null	0.96	96	4	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array != null ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux >= 0	0.142857142857143	14	84	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtrAux >= 0 ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	templateLocator . _methodPtrAux >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.capslist == null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capslist == null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.replref != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . replref != null ) ; }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux <= 0	0.142857142857143	14	84	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtrAux <= 0 ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	templateLocator . _methodPtrAux <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._indenter.roptions != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _indenter . roptions != null ) ; }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._renderContextBehaviour != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _renderContextBehaviour != null ) ; }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context != null	1	96	0	public override void Render ( RenderContext context ) { if ( context != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.code != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . code != null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array >= 0	0.04	4	96	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array >= 0 ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._size == 1	0.576086956521739	53	39	public override void Render ( RenderContext context ) { if ( context . _dataStack . _size == 1 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._target != null	0.142857142857143	14	84	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _target != null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	templateLocator . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	ret <= 0	0.0625	6	90	public static object GetValue ( object target , string name ) { if ( ret <= 0 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	ret <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == 1	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == 1 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	end != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( end != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	end != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack != null ) ; }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour != null	0.857142857142857	84	14	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( renderContextBehaviour != null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	name.ToString().Equals("each")	0.0540540540540541	4	70	public static bool Contains ( string name ) { if ( name . ToString ( ) . Equals ( "each" ) ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	name . ToString ( ) . Equals ( "each" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.factory == null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . factory == null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ValueGetter.GetValue(System.Object target, System.String name)	ret <= 1	0.135416666666667	13	83	public static object GetValue ( object target , string name ) { if ( ret <= 1 ) ; return ValueGetterFactories . Factories . GetValueGetter ( target , name ) . GetValue ( ) ; }	ret <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack._size >= context._dataStack._size	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size >= context . _dataStack . _size ) ; }	context . _sectionStack . _size >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= 0	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; context . Include ( _name , _indent ) ; }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._size >= 1	1	92	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _size >= 1 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack._syncRoot == null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _syncRoot == null ) ; }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; context . Include ( _name , _indent ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == null)	0.31	31	69	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == null ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour >= 0	0.0102040816326531	1	97	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( renderContextBehaviour >= 0 ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	renderContextBehaviour >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == context._dataStack._size	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == context . _dataStack . _size ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . capsize == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	ret == true	0.256756756756757	19	55	public static bool Contains ( string name ) { if ( ret == true ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	ret == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._size	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; context . Include ( _name , _indent ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == 1)	0.45	45	55	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == 1 ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._size <= 1	0.576086956521739	53	39	public override void Render ( RenderContext context ) { if ( context . _dataStack . _size <= 1 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _size <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == context._dataStack._version	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == context . _dataStack . _version ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . capsize == context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _dataStack != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.HasChildNodeList()	_childNodeList != null	1	19	0	private bool HasChildNodeList ( ) { if ( _childNodeList != null ) ; _childNodeList = _target . SelectNodes ( _name ) ; return _childNodeList != null && _childNodeList . Count > 0 ; }	_childNodeList != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._syncRoot == null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _syncRoot == null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._includeLevel	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; context . Include ( _name , _indent ) ; }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x >= 1)	0.36	36	64	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x >= 1 ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	end.ToString().Equals("}}")	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( end . ToString ( ) . Equals ( "}}" ) ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	end . ToString ( ) . Equals ( "}}" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.capslist == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capslist == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._version	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _version ) ; }	context . _sectionStack . _version >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x >= 0)	0.18	18	82	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x >= 0 ) ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.code != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . code != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret != null	0.989795918367347	97	1	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret != null ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; context . Include ( _name , _indent ) ; }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.factory == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . factory == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= 0	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack >= 0	0.0208333333333333	2	94	public override void Render ( RenderContext context ) { if ( context . _dataStack >= 0 ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret >= 0	0.0204081632653061	2	96	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret >= 0 ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._size >= 1	1	100	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _size >= 1 ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Contains(System.String name)	ret == false	0.27027027027027	20	54	public static bool Contains ( string name ) { if ( ret == false ) ; return CustomHelpers . ContainsKey ( name ) || DefaultHelpers . ContainsKey ( name ) ; }	ret == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._dataStack._version >= context._dataStack._size	1	92	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.pattern != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . pattern != null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.refsInitialized == true	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . refsInitialized == true ) ; context . Include ( _name , _indent ) ; }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._includeLevel	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._sectionStack._size	1	89	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._includeLevel >= 0	1	92	0	public override void Render ( RenderContext context ) { if ( context . _includeLevel >= 0 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._syncRoot == null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _syncRoot == null ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.Render(Nustache.Core.RenderContext context)	context._writer != null	1	89	0	public override void Render ( RenderContext context ) { if ( context . _writer != null ) ; }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Count == 4	0.854166666666667	82	14	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Count == 4 ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.HasChildNodeList()	_name != null	1	19	0	private bool HasChildNodeList ( ) { if ( _name != null ) ; _childNodeList = _target . SelectNodes ( _name ) ; return _childNodeList != null && _childNodeList . Count > 0 ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.pattern != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . pattern != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.replref != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . replref != null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._version >= 1	1	100	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version >= 1 ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name != null	1	54	0	public static Helper Get ( string name ) { if ( name != null ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.roptions != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . roptions != null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("OneTwoThree")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "OneTwoThree" ) ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	ret . ToString ( ) . Equals ( "OneTwoThree" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.refsInitialized == true	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . refsInitialized == true ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.ToString()	_name != null	1	7	0	public override string ToString ( ) { if ( _name != null ) ; return string . Format ( "EndSection(\"{0}\")" , _name ) ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._indenter.runnerref != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _indenter . runnerref != null ) ; context . Include ( _name , _indent ) ; }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.capnames == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . capnames == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._renderContextBehaviour != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _renderContextBehaviour != null ) ; context . Include ( _name , _indent ) ; }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("bar")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "bar" ) ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	ret . ToString ( ) . Equals ( "bar" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.replref != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . replref != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.ToString()	_name.ToString().Equals("a")	1	7	0	public override string ToString ( ) { if ( _name . ToString ( ) . Equals ( "a" ) ) ; return string . Format ( "EndSection(\"{0}\")" , _name ) ; }	_name . ToString ( ) . Equals ( "a" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.capnames == null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capnames == null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._dataStack._version >= context._dataStack._size	1	100	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; context . WriteLiteral ( _text ) ; }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.ToString()	ret != null	1	7	0	public override string ToString ( ) { if ( ret != null ) ; return string . Format ( "EndSection(\"{0}\")" , _name ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.HasChildNodeList()	_name.ToString().Equals("child")	1	19	0	private bool HasChildNodeList ( ) { if ( _name . ToString ( ) . Equals ( "child" ) ) ; _childNodeList = _target . SelectNodes ( _name ) ; return _childNodeList != null && _childNodeList . Count > 0 ; }	_name . ToString ( ) . Equals ( "child" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name.ToString().Equals("link")	0.351851851851852	19	35	public static Helper Get ( string name ) { if ( name . ToString ( ) . Equals ( "link" ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name . ToString ( ) . Equals ( "link" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.roptions != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . roptions != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("<a href=\"URL\">TEXT</a>")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "<ahref=\"URL\">TEXT</a>" ) ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	ret . ToString ( ) . Equals ( "<ahref=\"URL\">TEXT</a>" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_indent)	0.112535612535613	79	623	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _indent ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._indenter.runnerref != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _indenter . runnerref != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._lineEnded == false	0.814814814814815	22	5	public override void Render ( RenderContext context ) { if ( context . _lineEnded == false ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack != null ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name.ToString().Equals("list")	0.0555555555555556	3	51	public static Helper Get ( string name ) { if ( name . ToString ( ) . Equals ( "list" ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name . ToString ( ) . Equals ( "list" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.caps == null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . caps == null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.HasChildNodeList()	_target != null	1	19	0	private bool HasChildNodeList ( ) { if ( _target != null ) ; _childNodeList = _target . SelectNodes ( _name ) ; return _childNodeList != null && _childNodeList . Count > 0 ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\EndSection.cs	Nustache.Core.EndSection.ToString()	ret.ToString().Equals("EndSection(\"a\")")	1	7	0	public override string ToString ( ) { if ( ret . ToString ( ) . Equals ( "EndSection(\"a\")" ) ) ; return string . Format ( "EndSection(\"{0}\")" , _name ) ; }	ret . ToString ( ) . Equals ( "EndSection(\"a\")" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indent)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.StringToString(System.String template, System.Object data, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	ret.ToString().Equals("&lt;bar&gt;")	0.0102040816326531	1	97	public static string StringToString ( string template , object data , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( ret . ToString ( ) . Equals ( "&lt;bar&gt;" ) ) ; var reader = new StringReader ( template ) ; var writer = new StringWriter ( ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; Template ( reader , data , writer , templateLocator , renderBehaviour ) ; return writer . GetStringBuilder ( ) . ToString ( ) ; }	ret . ToString ( ) . Equals ( "&lt;bar&gt;" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._includeLevel >= 0	1	100	0	public override void Render ( RenderContext context ) { if ( context . _includeLevel >= 0 ) ; context . WriteLiteral ( _text ) ; }	context . _includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack._size >= context._dataStack._size	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size >= context . _dataStack . _size ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack . _size >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._lineEnded == true	0.111111111111111	3	24	public override void Render ( RenderContext context ) { if ( context . _lineEnded == true ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _lineEnded == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == 1	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == 1 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.caps == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . caps == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter != null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._renderContextBehaviour != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _renderContextBehaviour != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.HasChildNodeList()	_target.parentNode != null	1	19	0	private bool HasChildNodeList ( ) { if ( _target . parentNode != null ) ; _childNodeList = _target . SelectNodes ( _name ) ; return _childNodeList != null && _childNodeList . Count > 0 ; }	_target . parentNode != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capnames)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.capnames == null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capnames == null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	reader != null	1	98	0	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( reader != null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	reader != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Count == 4	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Count == 4 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.capsize <= context._dataStack._size	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize <= context . _dataStack . _size ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . capsize <= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name.ToString().Equals("noop")	0.0925925925925926	5	49	public static Helper Get ( string name ) { if ( name . ToString ( ) . Equals ( "noop" ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name . ToString ( ) . Equals ( "noop" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.caps == null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . caps == null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._dataStack._syncRoot)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.capslist == null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capslist == null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.caps)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.HasChildNodeList()	_textValueLocated == null	1	19	0	private bool HasChildNodeList ( ) { if ( _textValueLocated == null ) ; _childNodeList = _target . SelectNodes ( _name ) ; return _childNodeList != null && _childNodeList . Count > 0 ; }	_textValueLocated == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.capsize >= 0	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . capsize >= 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . capsize >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == 1	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == 1 ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack._syncRoot == null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _syncRoot == null ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	reader >= 0	0.0204081632653061	2	96	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( reader >= 0 ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	reader >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._indent)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _indent ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data != null	0.418367346938776	41	57	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( data != null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	data != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._size	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.capslist)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._indenter.capnames)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . capnames ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.HasChildNodeList()	ret == true	1	19	0	private bool HasChildNodeList ( ) { if ( ret == true ) ; _childNodeList = _target . SelectNodes ( _name ) ; return _childNodeList != null && _childNodeList . Count > 0 ; }	ret == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._version	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _version ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack . _version >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._indenter.caps)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . caps ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.code != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . code != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.capslist == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . capslist == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.capsize <= context._dataStack._size	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize <= context . _dataStack . _size ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . capsize <= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._indenter.factory)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name.ToString().Equals("unless")	0.111111111111111	6	48	public static Helper Get ( string name ) { if ( name . ToString ( ) . Equals ( "unless" ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name . ToString ( ) . Equals ( "unless" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.factory == null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . factory == null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data == null	0.0204081632653061	2	96	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( data == null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	data == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.capsize <= context._dataStack._version	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize <= context . _dataStack . _version ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . capsize <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._sectionStack._size	1	59	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; context . Include ( _name , _indent ) ; }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._indenter.capslist)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . capslist ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.capslist == null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capslist == null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= 0	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.Render(Nustache.Core.RenderContext context)	context._writer != null	1	59	0	public override void Render ( RenderContext context ) { if ( context . _writer != null ) ; context . Include ( _name , _indent ) ; }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_indenter.capnames)	0.128205128205128	90	612	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_childNodeList != null	1	19	0	private bool TryGetSingleTextNodeValue ( ) { if ( _childNodeList != null ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_childNodeList != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._indenter.factory)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . factory ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name.ToString().Equals("with")	0.0555555555555556	3	51	public static Helper Get ( string name ) { if ( name . ToString ( ) . Equals ( "with" ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name . ToString ( ) . Equals ( "with" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.code != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . code != null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	writer != null	1	98	0	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( writer != null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._sectionStack._syncRoot)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._array.Contains(context._templateLocator)	0.129186602870813	27	182	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _array . Contains ( context . _templateLocator ) ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator == null	0.857142857142857	84	14	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator == null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name.ToString().Equals("if")	0.037037037037037	2	52	public static Helper Get ( string name ) { if ( name . ToString ( ) . Equals ( "if" ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name . ToString ( ) . Equals ( "if" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.ToString()	_indent == null	1	9	0	public override string ToString ( ) { if ( _indent == null ) ; return string . Format ( "TemplateInclude(\"{0}\")" , _name ) ; }	_indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._size == 1	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size == 1 ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_name != null	1	19	0	private bool TryGetSingleTextNodeValue ( ) { if ( _name != null ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.Contains(context._templateLocator)	0.126365054602184	81	560	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.factory == null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . factory == null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._includeLevel	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodBase == null	0.142857142857143	14	84	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodBase == null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	templateLocator . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code >= 0	0.03	3	97	private static Regex MakeRegex ( string start , string end ) { if ( ret . code >= 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._size == context._dataStack._size	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size == context . _dataStack . _size ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _size == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.ToString()	_name != null	1	9	0	public override string ToString ( ) { if ( _name != null ) ; return string . Format ( "TemplateInclude(\"{0}\")" , _name ) ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	name.ToString().Equals("each")	0.0740740740740741	4	50	public static Helper Get ( string name ) { if ( name . ToString ( ) . Equals ( "each" ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	name . ToString ( ) . Equals ( "each" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= 0	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._size == context._dataStack._version	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size == context . _dataStack . _version ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _size == context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.ToString()	_name.ToString().Equals("a")	1	9	0	public override string ToString ( ) { if ( _name . ToString ( ) . Equals ( "a" ) ) ; return string . Format ( "TemplateInclude(\"{0}\")" , _name ) ; }	_name . ToString ( ) . Equals ( "a" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.ToString()	ret != null	1	9	0	public override string ToString ( ) { if ( ret != null ) ; return string . Format ( "TemplateInclude(\"{0}\")" , _name ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\TemplateInclude.cs	Nustache.Core.TemplateInclude.ToString()	ret.ToString().Equals("TemplateInclude(\"a\")")	1	9	0	public override string ToString ( ) { if ( ret . ToString ( ) . Equals ( "TemplateInclude(\"a\")" ) ) ; return string . Format ( "TemplateInclude(\"{0}\")" , _name ) ; }	ret . ToString ( ) . Equals ( "TemplateInclude(\"a\")" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._size == context._indenter.capsize	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size == context . _indenter . capsize ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _size == context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtr != null	0.142857142857143	14	84	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtr != null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	templateLocator . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret != null	1	54	0	public static Helper Get ( string name ) { if ( ret != null ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.pattern != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . pattern != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array != null	0.947916666666667	91	5	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._includeLevel	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code >= ret.capsize	0.03	3	97	private static Regex MakeRegex ( string start , string end ) { if ( ret . code >= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code >= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_name.ToString().Equals("child")	1	19	0	private bool TryGetSingleTextNodeValue ( ) { if ( _name . ToString ( ) . Equals ( "child" ) ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_name . ToString ( ) . Equals ( "child" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._syncRoot == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _syncRoot == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.refsInitialized == true	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . refsInitialized == true ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.replref != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . replref != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux == 0	0.142857142857143	14	84	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtrAux == 0 ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	templateLocator . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._size	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._version	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _version ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _version >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._anchors == 0	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _anchors == 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _anchors == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux >= 0	0.142857142857143	14	84	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtrAux >= 0 ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	templateLocator . _methodPtrAux >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._indenter.capsize	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _indenter . capsize ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _version >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array >= 0	0.0104166666666667	1	95	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array >= 0 ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._methodBase == null	1	54	0	public static Helper Get ( string name ) { if ( ret . _methodBase == null ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.pattern != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . pattern != null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_target != null	1	19	0	private bool TryGetSingleTextNodeValue ( ) { if ( _target != null ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux <= 0	0.142857142857143	14	84	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _methodPtrAux <= 0 ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	templateLocator . _methodPtrAux <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.roptions != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . roptions != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.refsInitialized == true	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . refsInitialized == true ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._target != null	0.142857142857143	14	84	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( templateLocator . _target != null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	templateLocator . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._methodPtr != null	1	54	0	public static Helper Get ( string name ) { if ( ret . _methodPtr != null ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == null)	0.0729166666666667	7	89	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == null ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._anchors <= ret.capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _anchors <= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _anchors <= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_indenter.caps)	0.128205128205128	90	612	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._methodPtrAux == 0	0.703703703703704	38	16	public static Helper Get ( string name ) { if ( ret . _methodPtrAux == 0 ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_target.parentNode != null	1	19	0	private bool TryGetSingleTextNodeValue ( ) { if ( _target . parentNode != null ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_target . parentNode != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._sectionStack._size	1	27	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.replref != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . replref != null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._indenter.runnerref != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _indenter . runnerref != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._array.All(x => x == 1)	0.270833333333333	26	70	public override void Render ( RenderContext context ) { if ( context . _dataStack . _array . All ( x => x == 1 ) ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour != null	1	98	0	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( renderContextBehaviour != null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._methodPtrAux >= 0	0.722222222222222	39	15	public static Helper Get ( string name ) { if ( ret . _methodPtrAux >= 0 ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _methodPtrAux >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._anchors <= ret.code	0.03	3	97	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _anchors <= ret . code ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _anchors <= ret . code
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._templateLocator == null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _templateLocator == null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.roptions != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . roptions != null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._indenter.runnerref != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _indenter . runnerref != null ) ; context . WriteLiteral ( _text ) ; }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_textValueLocated != null	0.263157894736842	5	14	private bool TryGetSingleTextNodeValue ( ) { if ( _textValueLocated != null ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_textValueLocated != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.Render(Nustache.Core.RenderContext context)	context._writer != null	1	27	0	public override void Render ( RenderContext context ) { if ( context . _writer != null ) ; if ( context . IsTruthy ( Name ) ) { return ; } context . Enter ( this ) ; base . Render ( context ) ; context . Exit ( ) ; }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._syncRoot == null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _syncRoot == null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._methodPtrAux <= 0	0.703703703703704	38	16	public static Helper Get ( string name ) { if ( ret . _methodPtrAux <= 0 ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _methodPtrAux <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour >= 0	0.0102040816326531	1	97	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( renderContextBehaviour >= 0 ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	renderContextBehaviour >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._renderContextBehaviour != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _renderContextBehaviour != null ) ; context . WriteLiteral ( _text ) ; }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._renderContextBehaviour != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _renderContextBehaviour != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack != null ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._size >= context._dataStack._size	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size >= context . _dataStack . _size ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _size >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._size >= context._indenter.capsize	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size >= context . _indenter . capsize ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _size >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.ToString()	ret != null	1	12	0	public override string ToString ( ) { if ( ret != null ) ; return string . Format ( "InvertedBlock(\"{0}\")" , Name ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Render.cs	Nustache.Core.Render.Template(System.IO.TextReader reader, System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	exception != null	0.489795918367347	48	50	public static void Template ( TextReader reader , object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour = null ) { if ( exception != null ) ; var template = new Template ( ) ; template . Load ( reader ) ; var renderBehaviour = renderContextBehaviour ?? RenderContextBehaviour . GetDefaultRenderContextBehaviour ( ) ; template . Render ( data , writer , templateLocator , renderBehaviour ) ; }	exception != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._methodPtrAux != null	0.462962962962963	25	29	public static Helper Get ( string name ) { if ( ret . _methodPtrAux != null ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _methodPtrAux != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._dataStack._version >= context._dataStack._size	1	96	0	public override void Render ( RenderContext context ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\InvertedBlock.cs	Nustache.Core.InvertedBlock.ToString()	ret.ToString().Equals("InvertedBlock(\"a\")")	1	12	0	public override string ToString ( ) { if ( ret . ToString ( ) . Equals ( "InvertedBlock(\"a\")" ) ) ; return string . Format ( "InvertedBlock(\"{0}\")" , Name ) ; }	ret . ToString ( ) . Equals ( "InvertedBlock(\"a\")" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._bmPrefix == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _bmPrefix == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _bmPrefix == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Load(System.IO.TextReader reader)	reader != null	1	100	0	public void Load ( TextReader reader ) { if ( reader != null ) ; string template = reader . ReadToEnd ( ) ; var scanner = new Scanner ( StartDelimiter , EndDelimiter ) ; var parser = new Parser ( ) ; parser . Parse ( this , scanner . Scan ( template ) ) ; StartDelimiter = scanner . StartDelimiter ; EndDelimiter = scanner . EndDelimiter ; }	reader != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._size >= 1	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size >= 1 ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_textValueLocated == null	0.684210526315789	13	6	private bool TryGetSingleTextNodeValue ( ) { if ( _textValueLocated == null ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_textValueLocated == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Load(System.IO.TextReader reader)	reader >= 0	0.03	3	97	public void Load ( TextReader reader ) { if ( reader >= 0 ) ; string template = reader . ReadToEnd ( ) ; var scanner = new Scanner ( StartDelimiter , EndDelimiter ) ; var parser = new Parser ( ) ; parser . Parse ( this , scanner . Scan ( template ) ) ; StartDelimiter = scanner . StartDelimiter ; EndDelimiter = scanner . EndDelimiter ; }	reader >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._target != null	0.981481481481482	53	1	public static Helper Get ( string name ) { if ( ret . _target != null ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._syncRoot == null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _syncRoot == null ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._includeLevel >= 0	1	96	0	public override void Render ( RenderContext context ) { if ( context . _includeLevel >= 0 ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._size == context._dataStack._size	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size == context . _dataStack . _size ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _size == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._size	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._version	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _version ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _version >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._target.Equals(ret)	0.296296296296296	16	38	public static Helper Get ( string name ) { if ( ret . _target . Equals ( ret ) ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _target . Equals ( ret )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._caps == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _caps == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data != null	0.418367346938776	41	57	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( data != null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	data != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._target >= 0	0.0185185185185185	1	53	public static Helper Get ( string name ) { if ( ret . _target >= 0 ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _target >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	_textValueLocated.ToString().Equals("text")	0.315789473684211	6	13	private bool TryGetSingleTextNodeValue ( ) { if ( _textValueLocated . ToString ( ) . Equals ( "text" ) ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	_textValueLocated . ToString ( ) . Equals ( "text" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._indenter.capsize	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _indenter . capsize ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _version >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	data == null	0.0204081632653061	2	96	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( data == null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	data == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._size <= context._dataStack._version	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size <= context . _dataStack . _version ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _size <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	writer != null	1	98	0	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( writer != null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._sectionStack._size	1	100	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; context . WriteLiteral ( _text ) ; }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	ret == true	0.263157894736842	5	14	private bool TryGetSingleTextNodeValue ( ) { if ( ret == true ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	ret == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator == null	0.857142857142857	84	14	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( templateLocator == null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Get(System.String name)	ret._target >= ret._methodPtrAux	0.0185185185185185	1	53	public static Helper Get ( string name ) { if ( ret . _target >= ret . _methodPtrAux ) ; return CustomHelpers . ContainsKey ( name ) ? CustomHelpers [ name ] : DefaultHelpers [ name ] ; }	ret . _target >= ret . _methodPtrAux
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._capsize >= 0	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _capsize >= 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _capsize >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.capnames == null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capnames == null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_indenter.capslist)	0.128205128205128	90	612	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Render(Nustache.Core.RenderContext context)	context._writer != null	1	100	0	public override void Render ( RenderContext context ) { if ( context . _writer != null ) ; context . WriteLiteral ( _text ) ; }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._size >= context._indenter.capsize	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size >= context . _indenter . capsize ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _size >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Source()	_text != null	1	21	0	public override string Source ( ) { if ( _text != null ) ; return _text ; }	_text != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetSingleTextNodeValue()	ret == false	0.684210526315789	13	6	private bool TryGetSingleTextNodeValue ( ) { if ( ret == false ) ; if ( _childNodeList . Count != 1 ) return false ; return TryGetNodeValueAsText ( _childNodeList [ 0 ] ) ; }	ret == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Source()	_text.ToString().Equals(" is awesome.")	1	21	0	public override string Source ( ) { if ( _text . ToString ( ) . Equals ( "isawesome." ) ) ; return _text ; }	_text . ToString ( ) . Equals ( "isawesome." )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodBase == null	0.142857142857143	14	84	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( templateLocator . _methodBase == null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	templateLocator . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Source()	ret != null	1	21	0	public override string Source ( ) { if ( ret != null ) ; return _text ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtr != null	0.142857142857143	14	84	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( templateLocator . _methodPtr != null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	templateLocator . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.caps == null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . caps == null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Source()	ret.Equals(_text)	1	21	0	public override string Source ( ) { if ( ret . Equals ( _text ) ) ; return _text ; }	ret . Equals ( _text )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	_childNodeList != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( _childNodeList != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	_childNodeList != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._capsize == ret.capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _capsize == ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _capsize == ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._syncRoot == null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _syncRoot == null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux == 0	0.142857142857143	14	84	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( templateLocator . _methodPtrAux == 0 ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	templateLocator . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.capsize == 1	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capsize == 1 ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.Source()	ret.ToString().Equals(" is awesome.")	1	21	0	public override string Source ( ) { if ( ret . ToString ( ) . Equals ( "isawesome." ) ) ; return _text ; }	ret . ToString ( ) . Equals ( "isawesome." )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.ToString()	_text != null	1	5	0	public override string ToString ( ) { if ( _text != null ) ; return string . Format ( "LiteralText(\"{0}\")" , _text ) ; }	_text != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	_name != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( _name != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._size	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux >= 0	0.142857142857143	14	84	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( templateLocator . _methodPtrAux >= 0 ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	templateLocator . _methodPtrAux >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Count == 4	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Count == 4 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.ToString()	_text.ToString().Equals("a")	1	5	0	public override string ToString ( ) { if ( _text . ToString ( ) . Equals ( "a" ) ) ; return string . Format ( "LiteralText(\"{0}\")" , _text ) ; }	_text . ToString ( ) . Equals ( "a" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._capsize >= ret.code._anchors	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _capsize >= ret . code . _anchors ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _capsize >= ret . code . _anchors
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.ToString()	ret != null	1	5	0	public override string ToString ( ) { if ( ret != null ) ; return string . Format ( "LiteralText(\"{0}\")" , _text ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._methodPtrAux <= 0	0.142857142857143	14	84	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( templateLocator . _methodPtrAux <= 0 ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	templateLocator . _methodPtrAux <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._version	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _version ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _version >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\LiteralText.cs	Nustache.Core.LiteralText.ToString()	ret.ToString().Equals("LiteralText(\"a\")")	1	5	0	public override string ToString ( ) { if ( ret . ToString ( ) . Equals ( "LiteralText(\"a\")" ) ) ; return string . Format ( "LiteralText(\"{0}\")" , _text ) ; }	ret . ToString ( ) . Equals ( "LiteralText(\"a\")" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.capslist == null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . capslist == null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	_name.ToString().Equals("child")	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( _name . ToString ( ) . Equals ( "child" ) ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	_name . ToString ( ) . Equals ( "child" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	templateLocator._target != null	0.142857142857143	14	84	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( templateLocator . _target != null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	templateLocator . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour != null	1	98	0	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( renderContextBehaviour != null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._capsize <= ret.code	0.03	3	97	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _capsize <= ret . code ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _capsize <= ret . code
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.code != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . code != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indent)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	renderContextBehaviour >= 0	0.0102040816326531	1	97	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( renderContextBehaviour >= 0 ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	renderContextBehaviour >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	_target != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( _target != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._sectionStack._size	1	92	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Template.cs	Nustache.Core.Template.Render(System.Object data, System.IO.TextWriter writer, Nustache.Core.TemplateLocator templateLocator, Nustache.Core.RenderContextBehaviour renderContextBehaviour)	exception != null	0.489795918367347	48	50	public void Render ( object data , TextWriter writer , TemplateLocator templateLocator , RenderContextBehaviour renderContextBehaviour ) { if ( exception != null ) ; var context = new RenderContext ( this , data , writer , templateLocator , renderContextBehaviour ) ; context . ActiveStartDelimiter = StartDelimiter ; context . ActiveEndDelimiter = EndDelimiter ; Render ( context ) ; writer . Flush ( ) ; }	exception != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capnames)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._codes.Count == 87	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _codes . Count == 87 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _codes . Count == 87
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.factory == null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . factory == null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._templateLocator == null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _templateLocator == null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	_target.parentNode != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( _target . parentNode != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	_target . parentNode != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_indenter.factory)	0.128205128205128	90	612	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.caps)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.Render(Nustache.Core.RenderContext context)	context._writer != null	1	92	0	public override void Render ( RenderContext context ) { if ( context . _writer != null ) ; var value = context . GetValue ( Name ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( InnerSource ( ) ) . ToString ( ) ; using ( TextReader sr = new StringReader ( lambdaResult ) ) { var template = new Template ( ) ; template . StartDelimiter = context . ActiveStartDelimiter ; template . EndDelimiter = context . ActiveEndDelimiter ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; } return ; } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { context . Enter ( this ) ; context . Push ( data ) ; RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } , data => { if ( Inverse != null ) { context . Enter ( Inverse ) ; context . Push ( data ) ; Inverse . RenderParts ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } } ) ; return ; } foreach ( var item in context . GetValues ( Name ) ) { context . Enter ( this ) ; context . Push ( item ) ; base . Render ( context ) ; context . Pop ( ) ; context . Exit ( ) ; } }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._codes != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _codes != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _codes != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capslist)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= 0	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value != null	0.54945054945055	50	41	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value != null ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.factory)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value == null	0.021978021978022	2	89	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value == null ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	_textValueLocated != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( _textValueLocated != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	_textValueLocated != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value == 1	0.142857142857143	13	78	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value == 1 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value == 0	0.043956043956044	4	87	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value == 0 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value >= 1	0.208791208791209	19	72	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value >= 1 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._codes.All(x => x >= -1)	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _codes . All ( x => x >= - 1 ) ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _codes . All ( x => x >= - 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	_textValueLocated.ToString().Equals("text")	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( _textValueLocated . ToString ( ) . Equals ( "text" ) ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	_textValueLocated . ToString ( ) . Equals ( "text" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._templateLocator)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value >= 0	0.252747252747253	23	68	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value >= 0 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value <= 1	0.32967032967033	30	61	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value <= 1 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(options)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( options ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( options )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._includeLevel	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	value <= 0	0.043956043956044	4	87	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( value <= 0 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	value <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	node != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( node != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	node != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret == null	0.769230769230769	70	21	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret == null ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(fn._methodBase)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( fn . _methodBase ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( fn . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._codes.All(x => x != null)	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _codes . All ( x => x != null ) ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _codes . All ( x => x != null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret.Equals(value)	0.120879120879121	11	80	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . Equals ( value ) ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . Equals ( value )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(inverse._methodBase)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( inverse . _methodBase ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _array . Contains ( inverse . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodBase == null	0.230769230769231	21	70	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodBase == null ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.128205128205128	90	612	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	node.parentNode != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( node . parentNode != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	node . parentNode != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtr != null	0.230769230769231	21	70	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtr != null ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._size == 1	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _size == 1 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.pattern != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . pattern != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtrAux == 0	0.230769230769231	21	70	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtrAux == 0 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._fcPrefix != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _fcPrefix != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _fcPrefix != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtrAux >= 0	0.230769230769231	21	70	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtrAux >= 0 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _methodPtrAux >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._syncRoot == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _syncRoot == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtrAux <= 0	0.230769230769231	21	70	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtrAux <= 0 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _methodPtrAux <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= 0	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= 0 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	node.parentNode.Equals(_target)	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( node . parentNode . Equals ( _target ) ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	node . parentNode . Equals ( _target )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._target != null	0.230769230769231	21	70	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _target != null ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.refsInitialized == true	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . refsInitialized == true ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._fcPrefix >= 0	0.04	4	96	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _fcPrefix >= 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _fcPrefix >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._target >= 0	0.010989010989011	1	90	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _target >= 0 ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _target >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= context._dataStack._size	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.CheckValueIsDelegateOrLambda(System.Object value)	ret._target >= ret._methodPtrAux	0.010989010989011	1	90	public Lambda < string , object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _target >= ret . _methodPtrAux ) ; var lambda = value as Lambda < string , object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < string , object > ) ( ( body ) => ( object ) delegateValue . DynamicInvoke ( body ) ) ; } return null ; }	ret . _target >= ret . _methodPtrAux
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.ToString()	ret != null	1	8	0	public override string ToString ( ) { if ( ret != null ) ; return string . Format ( "Block(\"{0}\")" , Name ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.replref != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . replref != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	node.parentNode.parentNode != null	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( node . parentNode . parentNode != null ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	node . parentNode . parentNode != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel == 0	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel == 0 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Block.cs	Nustache.Core.Block.ToString()	ret.ToString().Equals("Block(\"a\")")	1	8	0	public override string ToString ( ) { if ( ret . ToString ( ) . Equals ( "Block(\"a\")" ) ) ; return string . Format ( "Block(\"{0}\")" , Name ) ; }	ret . ToString ( ) . Equals ( "Block(\"a\")" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._fcPrefix >= ret.capsize	0.04	4	96	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _fcPrefix >= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _fcPrefix >= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel <= context._dataStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel <= context . _dataStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _includeLevel <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.roptions != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . roptions != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	node.parentNode.parentNode.Equals(_target.parentNode)	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( node . parentNode . parentNode . Equals ( _target . parentNode ) ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	node . parentNode . parentNode . Equals ( _target . parentNode )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indent == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indent == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._fcPrefix >= ret.code._anchors	0.04	4	96	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _fcPrefix >= ret . code . _anchors ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _fcPrefix >= ret . code . _anchors
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.Contains(_templateLocator)	0.128205128205128	90	612	public object GetValue ( string path ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._indenter.runnerref != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _indenter . runnerref != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetNodeValueAsText(System.Xml.XmlNode node)	ret == true	1	6	0	private bool TryGetNodeValueAsText ( XmlNode node ) { if ( ret == true ) ; if ( node . ChildNodes . Count == 1 && node . ChildNodes [ 0 ] . NodeType == XmlNodeType . Text ) { _textValueLocated = node . ChildNodes [ 0 ] . Value ; return true ; } return false ; }	ret == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capnames == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capnames == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._lineEnded == false	1	96	0	public override void Render ( RenderContext context ) { if ( context . _lineEnded == false ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._fcPrefix >= ret.code._capsize	0.04	4	96	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _fcPrefix >= ret . code . _capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _fcPrefix >= ret . code . _capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.caps == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . caps == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_childNodeList != null	0.612903225806452	19	12	public override object GetValue ( ) { if ( _childNodeList != null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_childNodeList != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == 1	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == 1 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._renderContextBehaviour != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _renderContextBehaviour != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._rightToLeft == false	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _rightToLeft == false ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _rightToLeft == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == context._dataStack._size	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == context . _dataStack . _size ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . capsize == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_childNodeList == null	0.387096774193548	12	19	public override object GetValue ( ) { if ( _childNodeList == null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_childNodeList == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize <= context._dataStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize <= context . _dataStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . capsize <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capslist == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capslist == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_name != null	1	31	0	public override object GetValue ( ) { if ( _name != null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings.Count == 4	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings . Count == 4 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack._size >= context._dataStack._size	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size >= context . _dataStack . _size ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack . _size >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.code != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . code != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.factory == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . factory == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_name.ToString().Equals("child")	0.612903225806452	19	12	public override object GetValue ( ) { if ( _name . ToString ( ) . Equals ( "child" ) ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_name . ToString ( ) . Equals ( "child" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= 0	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array != null	0.989473684210526	94	1	public object GetValue ( string path ) { if ( _dataStack . _array != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_name.ToString().Equals("@attr")	0.387096774193548	12	19	public override object GetValue ( ) { if ( _name . ToString ( ) . Equals ( "@attr" ) ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_name . ToString ( ) . Equals ( "@attr" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack._syncRoot == null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _syncRoot == null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings >= 0	0.01	1	99	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings >= 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._includeLevel	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_target != null	1	31	0	public override object GetValue ( ) { if ( _target != null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._size	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings >= ret.capsize	0.01	1	99	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings >= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings >= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.pattern != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . pattern != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_target.parentNode != null	1	31	0	public override object GetValue ( ) { if ( _target . parentNode != null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_target . parentNode != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._dataStack._version	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _dataStack . _version ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack . _version >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings >= ret.code._anchors	0.01	1	99	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings >= ret . code . _anchors ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings >= ret . code . _anchors
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.refsInitialized == true	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . refsInitialized == true ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_textValueLocated != null	0.548387096774194	17	14	public override object GetValue ( ) { if ( _textValueLocated != null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_textValueLocated != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.replref != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . replref != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings >= ret.code._capsize	0.01	1	99	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings >= ret . code . _capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings >= ret . code . _capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.roptions != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . roptions != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array >= 0	0.0210526315789474	2	93	public object GetValue ( string path ) { if ( _dataStack . _array >= 0 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._sectionStack._version >= context._sectionStack._size	1	96	0	public override void Render ( RenderContext context ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_textValueLocated == null	0.419354838709677	13	18	public override object GetValue ( ) { if ( _textValueLocated == null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_textValueLocated == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.runnerref != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . runnerref != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._templateLocator == null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _templateLocator == null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._lineEnded == false	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _lineEnded == false ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings.All(x => x != null)	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings . All ( x => x != null ) ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings . All ( x => x != null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_textValueLocated.ToString().Equals("text")	0.193548387096774	6	25	public override object GetValue ( ) { if ( _textValueLocated . ToString ( ) . Equals ( "text" ) ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_textValueLocated . ToString ( ) . Equals ( "text" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._renderContextBehaviour != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _renderContextBehaviour != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Render(Nustache.Core.RenderContext context)	context._writer != null	1	96	0	public override void Render ( RenderContext context ) { if ( context . _writer != null ) ; var value = context . GetValue ( _path ) ; var lambda = CheckValueIsDelegateOrLambda ( value ) ; if ( lambda != null ) { var lambdaResult = lambda ( ) . ToString ( ) ; lambdaResult = _escaped ? Encoders . HtmlEncode ( lambdaResult . ToString ( ) ) : lambdaResult . ToString ( ) ; using ( System . IO . TextReader sr = new System . IO . StringReader ( lambdaResult ) ) { Template template = new Template ( ) ; template . StartDelimiter = "{{" ; template . EndDelimiter = "}}" ; template . Load ( sr ) ; context . Enter ( template ) ; template . Render ( context ) ; context . Exit ( ) ; return ; } } var helper = value as HelperProxy ; if ( helper != null ) { helper ( data => { } , data => { } ) ; } else if ( value != null ) { context . Write ( _escaped ? Encoders . HtmlEncode ( value . ToString ( ) ) : value . ToString ( ) ) ; } }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	_textValueLocated.ToString().Equals("val")	0.387096774193548	12	19	public override object GetValue ( ) { if ( _textValueLocated . ToString ( ) . Equals ( "val" ) ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	_textValueLocated . ToString ( ) . Equals ( "val" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Count == 4	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Count == 4 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	_escaped == true	0.789473684210526	75	20	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( _escaped == true ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	_escaped == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._strings.All(x => x >= 0)	0.08	8	92	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _strings . All ( x => x >= 0 ) ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _strings . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	ret != null	1	31	0	public override object GetValue ( ) { if ( ret != null ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._dataStack._syncRoot)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	_escaped == false	0.0210526315789474	2	93	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( _escaped == false ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	_escaped == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indent)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indent ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._trackcount == 32	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _trackcount == 32 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _trackcount == 32
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	ret.Equals(_textValueLocated)	0.580645161290323	18	13	public override object GetValue ( ) { if ( ret . Equals ( _textValueLocated ) ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	ret . Equals ( _textValueLocated )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.capnames)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . capnames ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	_path != null	1	95	0	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( _path != null ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	_path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.All(x => x == null)	0.0947368421052632	9	86	public object GetValue ( string path ) { if ( _dataStack . _array . All ( x => x == null ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.caps)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . caps ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._trackcount >= ret.capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _trackcount >= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _trackcount >= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	_path.ToString().Equals("foo")	0.0526315789473684	5	90	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( _path . ToString ( ) . Equals ( "foo" ) ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	_path . ToString ( ) . Equals ( "foo" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.GetValue()	ret.Equals(_childNodeList)	0.419354838709677	13	18	public override object GetValue ( ) { if ( ret . Equals ( _childNodeList ) ) ; if ( _name [ 0 ] == '@' && TryGetStringByAttributeName ( _name . Substring ( 1 ) ) ) return _textValueLocated ; if ( HasChildNodeList ( ) ) { if ( TryGetSingleTextNodeValue ( ) ) return _textValueLocated ; return _childNodeList ; } if ( TryGetStringByAttributeName ( _name ) ) { return _textValueLocated ; } return NoValue ; }	ret . Equals ( _childNodeList )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.capslist)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . capslist ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.factory)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . factory ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	_path.ToString().Equals("value")	0.0210526315789474	2	93	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( _path . ToString ( ) . Equals ( "value" ) ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	_path . ToString ( ) . Equals ( "value" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._trackcount >= ret.code._capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _trackcount >= ret . code . _capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _trackcount >= ret . code . _capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._sectionStack._syncRoot)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	_path.ToString().Equals("name")	0.0105263157894737	1	94	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( _path . ToString ( ) . Equals ( "name" ) ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	_path . ToString ( ) . Equals ( "name" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	_childNodeList == null	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( _childNodeList == null ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	_childNodeList == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._templateLocator)	0.104477611940299	7	60	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _templateLocator ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._trackcount <= ret.code._fcPrefix	0.04	4	96	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _trackcount <= ret . code . _fcPrefix ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _trackcount <= ret . code . _fcPrefix
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == 1	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == 1 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	_path.ToString().Equals("error.message")	0.0105263157894737	1	94	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( _path . ToString ( ) . Equals ( "error.message" ) ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	_path . ToString ( ) . Equals ( "error.message" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._dataStack._size	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _dataStack . _size ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _size == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	_name != null	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( _name != null ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._dataStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _dataStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _size <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._trackcount <= ret.code	0.03	3	97	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _trackcount <= ret . code ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _trackcount <= ret . code
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	value != null	0.642105263157895	61	34	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( value != null ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	value != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._indenter.capsize	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _indenter . capsize ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _size == context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	_name.ToString().Equals("@attr")	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( _name . ToString ( ) . Equals ( "@attr" ) ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	_name . ToString ( ) . Equals ( "@attr" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.All(x => x == 1)	0.242105263157895	23	72	public object GetValue ( string path ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	value == null	0.0315789473684211	3	92	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( value == null ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	value == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.code._trackcount <= ret.code._strings	0.01	1	99	private static Regex MakeRegex ( string start , string end ) { if ( ret . code . _trackcount <= ret . code . _strings ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . code . _trackcount <= ret . code . _strings
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._syncRoot == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _syncRoot == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	value >= 1	0.368421052631579	35	60	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( value >= 1 ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	value >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= 0	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= 0 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	_target != null	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( _target != null ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.factory == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . factory == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._dataStack._size	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	value >= 0	0.136842105263158	13	82	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( value >= 0 ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	value >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	ret == null	0.873684210526316	83	12	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret == null ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	ret == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version == context._dataStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version == context . _dataStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _version == context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout >= 0	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout >= 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodBase == null	0.126315789473684	12	83	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodBase == null ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	ret . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	_target.parentNode != null	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( _target . parentNode != null ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	_target . parentNode != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._includeLevel	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _includeLevel ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _version >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtr != null	0.126315789473684	12	83	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtr != null ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	ret . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtrAux == 0	0.126315789473684	12	83	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtrAux == 0 ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	ret . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._indenter.capsize	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _indenter . capsize ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _version >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	_textValueLocated != null	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( _textValueLocated != null ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	_textValueLocated != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout >= ret.capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout >= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout >= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtrAux >= 0	0.126315789473684	12	83	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtrAux >= 0 ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	ret . _methodPtrAux >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	ret._methodPtrAux <= 0	0.126315789473684	12	83	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _methodPtrAux <= 0 ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	ret . _methodPtrAux <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.CheckValueIsDelegateOrLambda(System.Object value)	ret._target != null	0.126315789473684	12	83	public Lambda < object > CheckValueIsDelegateOrLambda ( object value ) { if ( ret . _target != null ) ; var lambda = value as Lambda < object > ; if ( lambda != null ) return lambda ; if ( value is Delegate && ! ( value is HelperProxy ) ) { var delegateValue = ( Delegate ) value ; return ( Lambda < object > ) ( ( ) => ( object ) delegateValue . DynamicInvoke ( ) ) ; } return null ; }	ret . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._sectionStack._size	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.All(x => x >= 1)	0.168421052631579	16	79	public object GetValue ( string path ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout >= ret.code._anchors	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout >= ret . code . _anchors ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout >= ret . code . _anchors
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._templateLocator == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _templateLocator == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	_textValueLocated.ToString().Equals("val")	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( _textValueLocated . ToString ( ) . Equals ( "val" ) ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	_textValueLocated . ToString ( ) . Equals ( "val" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Source()	_escaped == true	1	21	0	public override string Source ( ) { if ( _escaped == true ) ; return "{{" + ( ! Escaped ? "&" : "" ) + _path + "}}" ; }	_escaped == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._writer != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _writer != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	arguments != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( arguments != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	arguments != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Source()	_path != null	1	21	0	public override string Source ( ) { if ( _path != null ) ; return "{{" + ( ! Escaped ? "&" : "" ) + _path + "}}" ; }	_path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout >= ret.code._capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout >= ret . code . _capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout >= ret . code . _capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	attributeName != null	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( attributeName != null ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	attributeName != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	options == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( options == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	options == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Source()	_path.ToString().Equals("name")	1	21	0	public override string Source ( ) { if ( _path . ToString ( ) . Equals ( "name" ) ) ; return "{{" + ( ! Escaped ? "&" : "" ) + _path + "}}" ; }	_path . ToString ( ) . Equals ( "name" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout >= ret.code._trackcount	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout >= ret . code . _trackcount ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout >= ret . code . _trackcount
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	fn != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	attributeName.ToString().Equals("attr")	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( attributeName . ToString ( ) . Equals ( "attr" ) ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	attributeName . ToString ( ) . Equals ( "attr" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Source()	ret != null	1	21	0	public override string Source ( ) { if ( ret != null ) ; return "{{" + ( ! Escaped ? "&" : "" ) + _path + "}}" ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodBase == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodBase == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	fn . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.Source()	ret.ToString().Equals("{{name}}")	1	21	0	public override string Source ( ) { if ( ret . ToString ( ) . Equals ( "{{name}}" ) ) ; return "{{" + ( ! Escaped ? "&" : "" ) + _path + "}}" ; }	ret . ToString ( ) . Equals ( "{{name}}" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux == 0	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux == 0 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	fn . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.XmlNodeValueGetter.TryGetStringByAttributeName(System.String attributeName)	ret == true	1	12	0	private bool TryGetStringByAttributeName ( string attributeName ) { if ( ret == true ) ; if ( _target . Attributes != null ) { XmlNode attribute = _target . Attributes . GetNamedItem ( attributeName ) ; if ( attribute != null ) { _textValueLocated = attribute . Value ; return true ; } } return false ; }	ret == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout <= ret.code._fcPrefix	0.04	4	96	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout <= ret . code . _fcPrefix ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout <= ret . code . _fcPrefix
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.All(x => x >= 0)	0.126315789473684	12	83	public object GetValue ( string path ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._dataStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _dataStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	fn . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	_propertyDescriptor != null	1	14	0	public override object GetValue ( ) { if ( _propertyDescriptor != null ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	_propertyDescriptor != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.ToString()	_escaped == true	1	6	0	public override string ToString ( ) { if ( _escaped == true ) ; return string . Format ( "VariableReference(\"{0}\")" , _path ) ; }	_escaped == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._indenter.internalMatchTimeout	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	fn . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout <= ret.code	0.03	3	97	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout <= ret . code ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout <= ret . code
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	_propertyDescriptor.converter == null	1	14	0	public override object GetValue ( ) { if ( _propertyDescriptor . converter == null ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	_propertyDescriptor . converter == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.ToString()	_path != null	1	6	0	public override string ToString ( ) { if ( _path != null ) ; return string . Format ( "VariableReference(\"{0}\")" , _path ) ; }	_path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._sectionStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _sectionStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	fn . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	_propertyDescriptor.editorCount == 0	1	14	0	public override object GetValue ( ) { if ( _propertyDescriptor . editorCount == 0 ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	_propertyDescriptor . editorCount == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._target != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _target != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	fn . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.ToString()	_path.ToString().Equals("a")	1	6	0	public override string ToString ( ) { if ( _path . ToString ( ) . Equals ( "a" ) ) ; return string . Format ( "VariableReference(\"{0}\")" , _path ) ; }	_path . ToString ( ) . Equals ( "a" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	_propertyDescriptor.editors == null	1	14	0	public override object GetValue ( ) { if ( _propertyDescriptor . editors == null ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	_propertyDescriptor . editors == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.internalMatchTimeout <= ret.code._strings	0.01	1	99	private static Regex MakeRegex ( string start , string end ) { if ( ret . internalMatchTimeout <= ret . code . _strings ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . internalMatchTimeout <= ret . code . _strings
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.ToString()	ret != null	1	6	0	public override string ToString ( ) { if ( ret != null ) ; return string . Format ( "VariableReference(\"{0}\")" , _path ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	_propertyDescriptor.editorTypes == null	1	14	0	public override object GetValue ( ) { if ( _propertyDescriptor . editorTypes == null ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	_propertyDescriptor . editorTypes == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodBase == null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodBase == null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\VariableReference.cs	Nustache.Core.VariableReference.ToString()	ret.ToString().Equals("VariableReference(\"a\")")	1	6	0	public override string ToString ( ) { if ( ret . ToString ( ) . Equals ( "VariableReference(\"a\")" ) ) ; return string . Format ( "VariableReference(\"{0}\")" , _path ) ; }	ret . ToString ( ) . Equals ( "VariableReference(\"a\")" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	_propertyDescriptor.valueChangedHandlers == null	1	14	0	public override object GetValue ( ) { if ( _propertyDescriptor . valueChangedHandlers == null ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	_propertyDescriptor . valueChangedHandlers == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtr != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtr != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.pattern != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . pattern != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux == 0	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux == 0 ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	_target != null	1	14	0	public override object GetValue ( ) { if ( _target != null ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	ret >= 0	0.642857142857143	9	5	public override object GetValue ( ) { if ( ret >= 0 ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._dataStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _dataStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.pattern.ToString().Equals("((^|\\r?\\n)?([\\r\\t\\v ]*))\\{\\{([\\{]?[^}]+?\\}?)}}([\\r\\t\\v ]*(\\r?\\n|$)?)")	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . pattern . ToString ( ) . Equals ( "((^|\\r?\\n)?([\\r\\t\\v]*))\\{\\{([\\{]?[^}]+?\\}?)}}([\\r\\t\\v]*(\\r?\\n|$)?)" ) ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . pattern . ToString ( ) . Equals ( "((^|\\r?\\n)?([\\r\\t\\v]*))\\{\\{([\\{]?[^}]+?\\}?)}}([\\r\\t\\v]*(\\r?\\n|$)?)" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._indenter.internalMatchTimeout	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	ret >= _propertyDescriptor.editorCount	0.642857142857143	9	5	public override object GetValue ( ) { if ( ret >= _propertyDescriptor . editorCount ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	ret >= _propertyDescriptor . editorCount
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._array.All(x => x <= 1)	0.242105263157895	23	72	public object GetValue ( string path ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyDescriptorValueGetter.GetValue()	ret != null	0.428571428571429	6	8	public override object GetValue ( ) { if ( ret != null ) ; var value = _propertyDescriptor . GetValue ( _target ) ; return JValueIdentifier . IsJValue ( value ) ? JValueIdentifier . GetValue ( value ) : value ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._sectionStack._version	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _sectionStack . _version ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.refsInitialized == true	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . refsInitialized == true ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target != null	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target != null ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.MethodInfoValueGetter.GetValue()	_target != null	1	17	0	public override object GetValue ( ) { if ( _target != null ) ; return MethodInfo . Invoke ( _target , null ) ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.EachHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target.Equals(fn._target)	1	7	0	public static void EachHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target . Equals ( fn . _target ) ) ; foreach ( var item in ( IEnumerable ) arguments [ 0 ] ) { fn ( item ) ; } }	inverse . _target . Equals ( fn . _target )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.MethodInfoValueGetter.GetValue()	MethodInfo != null	1	17	0	public override object GetValue ( ) { if ( MethodInfo != null ) ; return MethodInfo . Invoke ( _target , null ) ; }	MethodInfo != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.MethodInfoValueGetter.GetValue()	ret >= 0	1	17	0	public override object GetValue ( ) { if ( ret >= 0 ) ; return MethodInfo . Invoke ( _target , null ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.replref != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . replref != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	_target != null	1	96	0	public override object GetValue ( ) { if ( _target != null ) ; return PropertyInfo . GetValue ( _target , null ) ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	PropertyInfo != null	1	96	0	public override object GetValue ( ) { if ( PropertyInfo != null ) ; return PropertyInfo . GetValue ( _target , null ) ; }	PropertyInfo != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack >= 0	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack >= 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	ret != null	0.78125	75	21	public override object GetValue ( ) { if ( ret != null ) ; return PropertyInfo . GetValue ( _target , null ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Count == 4	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Count == 4 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	ret == 0	0.114583333333333	11	85	public override object GetValue ( ) { if ( ret == 0 ) ; return PropertyInfo . GetValue ( _target , null ) ; }	ret == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.replref._locked == 0	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . replref . _locked == 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . replref . _locked == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	ret == 1	0.104166666666667	10	86	public override object GetValue ( ) { if ( ret == 1 ) ; return PropertyInfo . GetValue ( _target , null ) ; }	ret == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	ret >= 0	0.489583333333333	47	49	public override object GetValue ( ) { if ( ret >= 0 ) ; return PropertyInfo . GetValue ( _target , null ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._size == 1	0.242105263157895	23	72	public object GetValue ( string path ) { if ( _dataStack . _size == 1 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	ret >= 1	0.166666666666667	16	80	public override object GetValue ( ) { if ( ret >= 1 ) ; return PropertyInfo . GetValue ( _target , null ) ; }	ret >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indent)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	ret <= 1	0.28125	27	69	public override object GetValue ( ) { if ( ret <= 1 ) ; return PropertyInfo . GetValue ( _target , null ) ; }	ret <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.replref._locked <= ret.capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . replref . _locked <= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . replref . _locked <= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.PropertyInfoValueGetter.GetValue()	ret <= 0	0.114583333333333	11	85	public override object GetValue ( ) { if ( ret <= 0 ) ; return PropertyInfo . GetValue ( _target , null ) ; }	ret <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capnames)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.FieldInfoValueGetter.GetValue()	_target != null	1	16	0	public override object GetValue ( ) { if ( _target != null ) ; return FieldInfo . GetValue ( _target ) ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.caps)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.replref._locked <= ret.code._capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . replref . _locked <= ret . code . _capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . replref . _locked <= ret . code . _capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capslist)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.FieldInfoValueGetter.GetValue()	FieldInfo != null	1	16	0	public override object GetValue ( ) { if ( FieldInfo != null ) ; return FieldInfo . GetValue ( _target ) ; }	FieldInfo != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.FieldInfoValueGetter.GetValue()	ret >= 0	1	16	0	public override object GetValue ( ) { if ( ret >= 0 ) ; return FieldInfo . GetValue ( _target ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.factory)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.replref._locked <= ret.internalMatchTimeout	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . replref . _locked <= ret . internalMatchTimeout ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . replref . _locked <= ret . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DictionaryValueGetter.GetValue()	_key != null	1	11	0	public override object GetValue ( ) { if ( _key != null ) ; return _target [ _key ] ; }	_key != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._templateLocator)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DictionaryValueGetter.GetValue()	_key.ToString().Equals("IntKey")	1	11	0	public override object GetValue ( ) { if ( _key . ToString ( ) . Equals ( "IntKey" ) ) ; return _target [ _key ] ; }	_key . ToString ( ) . Equals ( "IntKey" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.replref._ref != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . replref . _ref != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . replref . _ref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(options)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( options ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( options )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DictionaryValueGetter.GetValue()	_target != null	1	11	0	public override object GetValue ( ) { if ( _target != null ) ; return _target [ _key ] ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._size >= 1	1	95	0	public object GetValue ( string path ) { if ( _dataStack . _size >= 1 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(fn._methodBase)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( fn . _methodBase ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( fn . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.roptions != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . roptions != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(inverse._methodBase)	0.0972222222222222	14	130	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( inverse . _methodBase ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array . Contains ( inverse . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DictionaryValueGetter.GetValue()	ret >= 0	1	11	0	public override object GetValue ( ) { if ( ret >= 0 ) ; return _target [ _key ] ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	_target != null	1	36	0	public override object GetValue ( ) { if ( _target != null ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._size == 1	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _size == 1 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.runnerref != null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . runnerref != null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	DictionaryType != null	1	36	0	public override object GetValue ( ) { if ( DictionaryType != null ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	DictionaryType != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._size <= context._dataStack	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _size <= context . _dataStack ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _size <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	GetMethod != null	1	36	0	public override object GetValue ( ) { if ( GetMethod != null ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	GetMethod != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._syncRoot == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _syncRoot == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.runnerref._locked == 0	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . runnerref . _locked == 0 ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . runnerref . _locked == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	Key != null	1	36	0	public override object GetValue ( ) { if ( Key != null ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	Key != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= 0	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= context._dataStack._size	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.runnerref._locked <= ret.capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . runnerref . _locked <= ret . capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . runnerref . _locked <= ret . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	Key.ToString().Equals("a.b")	0.25	9	27	public override object GetValue ( ) { if ( Key . ToString ( ) . Equals ( "a.b" ) ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	Key . ToString ( ) . Equals ( "a.b" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version <= context._dataStack	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version <= context . _dataStack ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _dataStack . _version <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	Key.ToString().Equals("IntKey")	0.25	9	27	public override object GetValue ( ) { if ( Key . ToString ( ) . Equals ( "IntKey" ) ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	Key . ToString ( ) . Equals ( "IntKey" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._size <= 1	0.242105263157895	23	72	public object GetValue ( string path ) { if ( _dataStack . _size <= 1 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _size <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel == 0	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel == 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.runnerref._locked <= ret.code._capsize	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . runnerref . _locked <= ret . code . _capsize ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . runnerref . _locked <= ret . code . _capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel <= context._dataStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel <= context . _dataStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _includeLevel <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	Key.ToString().Equals("Key")	0.0833333333333333	3	33	public override object GetValue ( ) { if ( Key . ToString ( ) . Equals ( "Key" ) ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	Key . ToString ( ) . Equals ( "Key" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	ret != null	0.666666666666667	24	12	public override object GetValue ( ) { if ( ret != null ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel <= context._dataStack	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel <= context . _dataStack ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _includeLevel <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.runnerref._locked <= ret.internalMatchTimeout	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . runnerref . _locked <= ret . internalMatchTimeout ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . runnerref . _locked <= ret . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	ret >= 0	0.388888888888889	14	22	public override object GetValue ( ) { if ( ret >= 0 ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	ret >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indent == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indent == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.GenericDictionaryValueGetter.GetValue()	ret >= 1	0.388888888888889	14	22	public override object GetValue ( ) { if ( ret >= 1 ) ; return GetMethod . Invoke ( _target , new object [ ] { Key } ) ; }	ret >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.runnerref._obj == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . runnerref . _obj == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . runnerref . _obj == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ListValueByIndexGetter.GetValue()	_index == 0	1	20	0	public override object GetValue ( ) { if ( _index == 0 ) ; return _target [ _index ] ; }	_index == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capnames == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capnames == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.caps == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . caps == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Scanner.cs	Nustache.Core.Scanner.MakeRegex(System.String start, System.String end)	ret.runnerref._ref == null	1	100	0	private static Regex MakeRegex ( string start , string end ) { if ( ret . runnerref . _ref == null ) ; return new Regex ( @"((^|\r?\n)?([\r\t\v]*))" + Regex . Escape ( start ) + @"([\{]?[^" + Regex . Escape ( end . Substring ( 0 , 1 ) ) + @"]+?\}?)" + Regex . Escape ( end ) + @"([\r\t\v]*(\r?\n|$)?)" ) ; }	ret . runnerref . _ref == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ListValueByIndexGetter.GetValue()	_target >= 0	0.05	1	19	public override object GetValue ( ) { if ( _target >= 0 ) ; return _target [ _index ] ; }	_target >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == 1	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == 1 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == context._dataStack._size	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == context . _dataStack . _size ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . capsize == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._syncRoot == null	1	95	0	public object GetValue ( string path ) { if ( _dataStack . _syncRoot == null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ListValueByIndexGetter.GetValue()	_target >= _index	0.05	1	19	public override object GetValue ( ) { if ( _target >= _index ) ; return _target [ _index ] ; }	_target >= _index
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize <= context._dataStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize <= context . _dataStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . capsize <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ListValueByIndexGetter.GetValue()	_target != null	0.95	19	1	public override object GetValue ( ) { if ( _target != null ) ; return _target [ _index ] ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize <= context._dataStack	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize <= context . _dataStack ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . capsize <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.ListValueByIndexGetter.GetValue()	ret != null	1	20	0	public override object GetValue ( ) { if ( ret != null ) ; return _target [ _index ] ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capslist == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capslist == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_name != null	1	40	0	public override object GetValue ( ) { if ( _name != null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.code != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . code != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.factory == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . factory == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_name.ToString().Equals("intcolumn")	0.425	17	23	public override object GetValue ( ) { if ( _name . ToString ( ) . Equals ( "intcolumn" ) ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_name . ToString ( ) . Equals ( "intcolumn" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= 0	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_name.ToString().Equals("item")	0.175	7	33	public override object GetValue ( ) { if ( _name . ToString ( ) . Equals ( "item" ) ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_name . ToString ( ) . Equals ( "item" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._version >= 1	1	95	0	public object GetValue ( string path ) { if ( _dataStack . _version >= 1 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._includeLevel	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_name.ToString().Equals("IntColumn")	0.275	11	29	public override object GetValue ( ) { if ( _name . ToString ( ) . Equals ( "IntColumn" ) ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_name . ToString ( ) . Equals ( "IntColumn" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target != null	1	40	0	public override object GetValue ( ) { if ( _target != null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout <= context._dataStack	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout <= context . _dataStack ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . internalMatchTimeout <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._action != null	1	40	0	public override object GetValue ( ) { if ( _target . _action != null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _action != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.pattern != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . pattern != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.refsInitialized == true	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . refsInitialized == true ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._columns != null	1	40	0	public override object GetValue ( ) { if ( _target . _columns != null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _columns != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.replref != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . replref != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.roptions != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . roptions != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._columns >= 0	0.025	1	39	public override object GetValue ( ) { if ( _target . _columns >= 0 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _columns >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_dataStack._version >= _dataStack._size	1	95	0	public object GetValue ( string path ) { if ( _dataStack . _version >= _dataStack . _size ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.runnerref != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . runnerref != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._countColumnChange == 0	1	40	0	public override object GetValue ( ) { if ( _target . _countColumnChange == 0 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _countColumnChange == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._lineEnded == false	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _lineEnded == false ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._renderContextBehaviour != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _renderContextBehaviour != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._countColumnChange <= _target._columns	0.025	1	39	public override object GetValue ( ) { if ( _target . _countColumnChange <= _target . _columns ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _countColumnChange <= _target . _columns
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._element == null	1	40	0	public override object GetValue ( ) { if ( _target . _element == null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _element == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack >= 0	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack >= 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack >= context._dataStack._size	0.0714285714285714	1	13	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack >= context . _dataStack . _size ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._lastChangedColumn == null	1	40	0	public override object GetValue ( ) { if ( _target . _lastChangedColumn == null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _lastChangedColumn == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Count == 4	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Count == 4 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rbTreeNodeId == 1	0.575	23	17	public override object GetValue ( ) { if ( _target . _rbTreeNodeId == 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rbTreeNodeId == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == 1	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == 1 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rbTreeNodeId >= 1	1	40	0	public override object GetValue ( ) { if ( _target . _rbTreeNodeId >= 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rbTreeNodeId >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_includeLevel >= 0	1	95	0	public object GetValue ( string path ) { if ( _includeLevel >= 0 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._dataStack._size	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _dataStack . _size ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _size == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rbTreeNodeId <= 1	0.575	23	17	public override object GetValue ( ) { if ( _target . _rbTreeNodeId <= 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rbTreeNodeId <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._dataStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _dataStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _size <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._indenter.capsize	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _indenter . capsize ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _size == context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rbTreeNodeId <= _target._columns	0.025	1	39	public override object GetValue ( ) { if ( _target . _rbTreeNodeId <= _target . _columns ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rbTreeNodeId <= _target . _columns
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rowID == 1	0.575	23	17	public override object GetValue ( ) { if ( _target . _rowID == 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rowID == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._syncRoot == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _syncRoot == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rowID >= 1	1	40	0	public override object GetValue ( ) { if ( _target . _rowID >= 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rowID >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= 0	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._dataStack._size	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rowID <= 1	0.575	23	17	public override object GetValue ( ) { if ( _target . _rowID <= 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rowID <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version == context._dataStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version == context . _dataStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _version == context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rowID == _target._rbTreeNodeId	1	40	0	public override object GetValue ( ) { if ( _target . _rowID == _target . _rbTreeNodeId ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rowID == _target . _rbTreeNodeId
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._includeLevel	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _includeLevel ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _version >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter != null	1	95	0	public object GetValue ( string path ) { if ( _indenter != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._indenter.capsize	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _indenter . capsize ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _version >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._rowID <= _target._columns	0.025	1	39	public override object GetValue ( ) { if ( _target . _rowID <= _target . _columns ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _rowID <= _target . _columns
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._sectionStack._size	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._table != null	0.975	39	1	public override object GetValue ( ) { if ( _target . _table != null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _table != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._templateLocator == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _templateLocator == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._table >= 0	0.025	1	39	public override object GetValue ( ) { if ( _target . _table >= 0 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _table >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._writer != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _writer != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	arguments != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( arguments != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	arguments != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._table >= _target._countColumnChange	0.025	1	39	public override object GetValue ( ) { if ( _target . _table >= _target . _countColumnChange ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _table >= _target . _countColumnChange
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	options == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( options == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	options == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._table >= _target._rbTreeNodeId	0.025	1	39	public override object GetValue ( ) { if ( _target . _table >= _target . _rbTreeNodeId ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _table >= _target . _rbTreeNodeId
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	fn != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.capnames == null	1	95	0	public object GetValue ( string path ) { if ( _indenter . capnames == null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodBase == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodBase == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	fn . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target._table >= _target._rowID	0.025	1	39	public override object GetValue ( ) { if ( _target . _table >= _target . _rowID ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . _table >= _target . _rowID
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux == 0	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux == 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	fn . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.error == null	1	40	0	public override object GetValue ( ) { if ( _target . error == null ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . error == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._dataStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _dataStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	fn . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._indenter.internalMatchTimeout	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	fn . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.inCascade == false	1	40	0	public override object GetValue ( ) { if ( _target . inCascade == false ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . inCascade == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._sectionStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _sectionStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	fn . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.inChangingEvent == false	1	40	0	public override object GetValue ( ) { if ( _target . inChangingEvent == false ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . inChangingEvent == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._target != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _target != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	fn . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.inDeletingEvent == false	1	40	0	public override object GetValue ( ) { if ( _target . inDeletingEvent == false ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . inDeletingEvent == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodBase == null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodBase == null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.newRecord == 0	0.575	23	17	public override object GetValue ( ) { if ( _target . newRecord == 0 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . newRecord == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.caps == null	1	95	0	public object GetValue ( string path ) { if ( _indenter . caps == null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtr != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtr != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux == 0	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux == 0 ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.newRecord >= 0	1	40	0	public override object GetValue ( ) { if ( _target . newRecord >= 0 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . newRecord >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._dataStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _dataStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.newRecord <= 0	0.575	23	17	public override object GetValue ( ) { if ( _target . newRecord <= 0 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . newRecord <= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._indenter.internalMatchTimeout	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._sectionStack._version	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _sectionStack . _version ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.newRecord <= _target._table	0.025	1	39	public override object GetValue ( ) { if ( _target . newRecord <= _target . _table ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . newRecord <= _target . _table
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target != null	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target != null ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.IfHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target.Equals(fn._target)	1	14	0	public static void IfHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target . Equals ( fn . _target ) ) ; var value = arguments [ 0 ] ; if ( context . IsTruthy ( value ) ) { fn ( null ) ; } else { inverse ( null ) ; } }	inverse . _target . Equals ( fn . _target )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.oldRecord == -1	1	40	0	public override object GetValue ( ) { if ( _target . oldRecord == - 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . oldRecord == - 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.oldRecord <= _target._rbTreeNodeId	1	40	0	public override object GetValue ( ) { if ( _target . oldRecord <= _target . _rbTreeNodeId ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . oldRecord <= _target . _rbTreeNodeId
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.capsize == 1	1	95	0	public object GetValue ( string path ) { if ( _indenter . capsize == 1 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.oldRecord <= _target._rowID	1	40	0	public override object GetValue ( ) { if ( _target . oldRecord <= _target . _rowID ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . oldRecord <= _target . _rowID
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack >= 0	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack >= 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Count == 4	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Count == 4 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.oldRecord <= _target.ObjectID	1	40	0	public override object GetValue ( ) { if ( _target . oldRecord <= _target . ObjectID ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . oldRecord <= _target . ObjectID
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.tempRecord == -1	1	40	0	public override object GetValue ( ) { if ( _target . tempRecord == - 1 ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . tempRecord == - 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indent)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capnames)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.tempRecord <= _target._rbTreeNodeId	1	40	0	public override object GetValue ( ) { if ( _target . tempRecord <= _target . _rbTreeNodeId ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . tempRecord <= _target . _rbTreeNodeId
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.caps)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.tempRecord <= _target._rowID	1	40	0	public override object GetValue ( ) { if ( _target . tempRecord <= _target . _rowID ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . tempRecord <= _target . _rowID
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capslist)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.factory)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.tempRecord <= _target.ObjectID	1	40	0	public override object GetValue ( ) { if ( _target . tempRecord <= _target . ObjectID ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . tempRecord <= _target . ObjectID
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.capsize <= _dataStack._size	1	95	0	public object GetValue ( string path ) { if ( _indenter . capsize <= _dataStack . _size ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . capsize <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	_target.tempRecord == _target.oldRecord	1	40	0	public override object GetValue ( ) { if ( _target . tempRecord == _target . oldRecord ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	_target . tempRecord == _target . oldRecord
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._templateLocator)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	ret >= _target._rbTreeNodeId	1	40	0	public override object GetValue ( ) { if ( ret >= _target . _rbTreeNodeId ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	ret >= _target . _rbTreeNodeId
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(options)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( options ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( options )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(fn._methodBase)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( fn . _methodBase ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( fn . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	ret >= _target._rowID	1	40	0	public override object GetValue ( ) { if ( ret >= _target . _rowID ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	ret >= _target . _rowID
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(inverse._methodBase)	0.102564102564103	8	70	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( inverse . _methodBase ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array . Contains ( inverse . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	ret >= _target.oldRecord	1	40	0	public override object GetValue ( ) { if ( ret >= _target . oldRecord ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	ret >= _target . oldRecord
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._size == 1	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _size == 1 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.DataRowValueGetter.GetValue()	ret >= _target.tempRecord	1	40	0	public override object GetValue ( ) { if ( ret >= _target . tempRecord ) ; if ( _target . Table . Columns . Contains ( _name ) ) { return _target [ _name ] ; } return null ; }	ret >= _target . tempRecord
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._size <= context._dataStack	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _size <= context . _dataStack ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _size <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.capsize <= _dataStack._version	1	95	0	public object GetValue ( string path ) { if ( _indenter . capsize <= _dataStack . _version ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . capsize <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.NameValueCollectionValueGetter.GetValue()	_key != null	1	11	0	public override object GetValue ( ) { if ( _key != null ) ; return _target [ _key ] ; }	_key != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._syncRoot == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _syncRoot == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.NameValueCollectionValueGetter.GetValue()	_key.ToString().Equals("IntKey")	1	11	0	public override object GetValue ( ) { if ( _key . ToString ( ) . Equals ( "IntKey" ) ) ; return _target [ _key ] ; }	_key . ToString ( ) . Equals ( "IntKey" )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= 0	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= context._dataStack._size	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.NameValueCollectionValueGetter.GetValue()	_target != null	1	11	0	public override object GetValue ( ) { if ( _target != null ) ; return _target [ _key ] ; }	_target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version <= context._dataStack	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version <= context . _dataStack ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _dataStack . _version <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.NameValueCollectionValueGetter.GetValue()	_target._all == null	1	11	0	public override object GetValue ( ) { if ( _target . _all == null ) ; return _target [ _key ] ; }	_target . _all == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel == 0	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel == 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.NameValueCollectionValueGetter.GetValue()	_target._allKeys == null	1	11	0	public override object GetValue ( ) { if ( _target . _allKeys == null ) ; return _target [ _key ] ; }	_target . _allKeys == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel <= context._dataStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel <= context . _dataStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _includeLevel <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel <= context._dataStack	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel <= context . _dataStack ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _includeLevel <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.NameValueCollectionValueGetter.GetValue()	ret != null	1	11	0	public override object GetValue ( ) { if ( ret != null ) ; return _target [ _key ] ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\ValueGetter.cs	Nustache.Core.NoValueGetter.GetValue()	ret != null	1	82	0	public override object GetValue ( ) { if ( ret != null ) ; return NoValue ; }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indent == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indent == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.capslist == null	1	95	0	public object GetValue ( string path ) { if ( _indenter . capslist == null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capnames == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capnames == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.caps == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . caps == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == 1	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == 1 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == context._dataStack._size	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == context . _dataStack . _size ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . capsize == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize <= context._dataStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize <= context . _dataStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . capsize <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize <= context._dataStack	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize <= context . _dataStack ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . capsize <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capslist == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capslist == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.code != null	1	95	0	public object GetValue ( string path ) { if ( _indenter . code != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.code != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . code != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.factory == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . factory == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= 0	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._includeLevel	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout <= context._dataStack	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout <= context . _dataStack ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . internalMatchTimeout <= context . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.pattern != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . pattern != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.factory == null	1	95	0	public object GetValue ( string path ) { if ( _indenter . factory == null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.refsInitialized == true	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . refsInitialized == true ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.replref != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . replref != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.roptions != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . roptions != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.runnerref != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . runnerref != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._lineEnded == false	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _lineEnded == false ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._renderContextBehaviour != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _renderContextBehaviour != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack >= 0	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack >= 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack >= context._dataStack._size	0.125	1	7	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack >= context . _dataStack . _size ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Count == 4	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Count == 4 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.internalMatchTimeout >= 0	1	95	0	public object GetValue ( string path ) { if ( _indenter . internalMatchTimeout >= 0 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == 1	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == 1 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._dataStack._size	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _dataStack . _size ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _size == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._dataStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _dataStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _size <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._indenter.capsize	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _indenter . capsize ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _size == context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._syncRoot == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _syncRoot == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= 0	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._dataStack._size	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.internalMatchTimeout >= _dataStack._size	1	95	0	public object GetValue ( string path ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version == context._dataStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version == context . _dataStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _version == context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._includeLevel	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _includeLevel ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _version >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._indenter.capsize	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _indenter . capsize ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _version >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._sectionStack._size	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._templateLocator == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _templateLocator == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._writer != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _writer != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	arguments != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( arguments != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	arguments != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.internalMatchTimeout >= _dataStack._version	1	95	0	public object GetValue ( string path ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	options == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( options == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	options == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodBase == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodBase == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtr != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtr != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux == 0	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux == 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._dataStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _dataStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._indenter.internalMatchTimeout	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._sectionStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _sectionStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._target != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _target != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	fn . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.internalMatchTimeout >= _includeLevel	1	95	0	public object GetValue ( string path ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodBase == null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodBase == null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtr != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtr != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux == 0	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux == 0 ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._dataStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _dataStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._indenter.internalMatchTimeout	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._sectionStack._version	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _sectionStack . _version ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target != null	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target != null ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.internalMatchTimeout >= _indenter.capsize	1	95	0	public object GetValue ( string path ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.UnlessHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target.Equals(fn._target)	1	8	0	public static void UnlessHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target . Equals ( fn . _target ) ) ; IfHelper ( context , arguments , options , inverse , fn ) ; }	inverse . _target . Equals ( fn . _target )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context != null ) ; fn ( arguments [ 0 ] ) ; }	context != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack != null ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Count == 4	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Count == 4 ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._dataStack._syncRoot)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indent)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indent ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capnames)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capnames ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.caps)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . caps ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.pattern != null	1	95	0	public object GetValue ( string path ) { if ( _indenter . pattern != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.capslist)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . capslist ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._indenter.factory)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _indenter . factory ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._sectionStack._syncRoot)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(context._templateLocator)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( context . _templateLocator ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(options)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( options ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( options )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(fn._methodBase)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( fn . _methodBase ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( fn . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._array.Contains(inverse._methodBase)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _array . Contains ( inverse . _methodBase ) ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _array . Contains ( inverse . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._size == 1	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _size == 1 ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._syncRoot == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _syncRoot == null ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.refsInitialized == true	1	95	0	public object GetValue ( string path ) { if ( _indenter . refsInitialized == true ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= 0	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= 0 ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._dataStack._version >= context._dataStack._size	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _dataStack . _version >= context . _dataStack . _size ) ; fn ( arguments [ 0 ] ) ; }	context . _dataStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel == 0	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel == 0 ) ; fn ( arguments [ 0 ] ) ; }	context . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._includeLevel <= context._dataStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _includeLevel <= context . _dataStack . _version ) ; fn ( arguments [ 0 ] ) ; }	context . _includeLevel <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indent == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indent == null ) ; fn ( arguments [ 0 ] ) ; }	context . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter != null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capnames == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capnames == null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.caps == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . caps == null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == 1	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == 1 ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.replref != null	1	95	0	public object GetValue ( string path ) { if ( _indenter . replref != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize == context._dataStack._size	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize == context . _dataStack . _size ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . capsize == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capsize <= context._dataStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capsize <= context . _dataStack . _version ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . capsize <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.capslist == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . capslist == null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.code != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . code != null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.factory == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . factory == null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= 0	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= 0 ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._size	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _size ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._dataStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _dataStack . _version ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . internalMatchTimeout >= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.roptions != null	1	95	0	public object GetValue ( string path ) { if ( _indenter . roptions != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._includeLevel	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _includeLevel ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . internalMatchTimeout >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.internalMatchTimeout >= context._indenter.capsize	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . internalMatchTimeout >= context . _indenter . capsize ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . internalMatchTimeout >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.pattern != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . pattern != null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.refsInitialized == true	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . refsInitialized == true ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.replref != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . replref != null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.roptions != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . roptions != null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._indenter.runnerref != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _indenter . runnerref != null ) ; fn ( arguments [ 0 ] ) ; }	context . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._lineEnded == false	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _lineEnded == false ) ; fn ( arguments [ 0 ] ) ; }	context . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_indenter.runnerref != null	1	95	0	public object GetValue ( string path ) { if ( _indenter . runnerref != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._renderContextBehaviour != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _renderContextBehaviour != null ) ; fn ( arguments [ 0 ] ) ; }	context . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack != null ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Count == 4	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Count == 4 ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._dataStack._syncRoot)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _dataStack . _syncRoot ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indent)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indent ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.capnames)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . capnames ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.caps)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . caps ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.capslist)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . capslist ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._indenter.factory)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _indenter . factory ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_renderContextBehaviour != null	1	95	0	public object GetValue ( string path ) { if ( _renderContextBehaviour != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._sectionStack._syncRoot)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _sectionStack . _syncRoot ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._array.Contains(context._templateLocator)	0.102564102564103	8	70	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _array . Contains ( context . _templateLocator ) ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _array . Contains ( context . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == 1	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == 1 ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._dataStack._size	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _dataStack . _size ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _size == context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._dataStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _dataStack . _version ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _size <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size == context._indenter.capsize	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size == context . _indenter . capsize ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _size == context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._size <= context._indenter.internalMatchTimeout	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _size <= context . _indenter . internalMatchTimeout ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _size <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._syncRoot == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _syncRoot == null ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= 0	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= 0 ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack != null	1	95	0	public object GetValue ( string path ) { if ( _sectionStack != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._dataStack._size	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _dataStack . _size ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _version >= context . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version == context._dataStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version == context . _dataStack . _version ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _version == context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._includeLevel	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _includeLevel ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _version >= context . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._indenter.capsize	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _indenter . capsize ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _version >= context . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version <= context._indenter.internalMatchTimeout	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version <= context . _indenter . internalMatchTimeout ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _version <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._sectionStack._version >= context._sectionStack._size	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _sectionStack . _version >= context . _sectionStack . _size ) ; fn ( arguments [ 0 ] ) ; }	context . _sectionStack . _version >= context . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._templateLocator == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _templateLocator == null ) ; fn ( arguments [ 0 ] ) ; }	context . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	context._writer != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( context . _writer != null ) ; fn ( arguments [ 0 ] ) ; }	context . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._size >= 1	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _size >= 1 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	arguments != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( arguments != null ) ; fn ( arguments [ 0 ] ) ; }	arguments != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	options == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( options == null ) ; fn ( arguments [ 0 ] ) ; }	options == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn != null ) ; fn ( arguments [ 0 ] ) ; }	fn != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodBase == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodBase == null ) ; fn ( arguments [ 0 ] ) ; }	fn . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtr != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtr != null ) ; fn ( arguments [ 0 ] ) ; }	fn . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux == 0	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux == 0 ) ; fn ( arguments [ 0 ] ) ; }	fn . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._dataStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _dataStack . _version ) ; fn ( arguments [ 0 ] ) ; }	fn . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._indenter.internalMatchTimeout	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; fn ( arguments [ 0 ] ) ; }	fn . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._methodPtrAux <= context._sectionStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _methodPtrAux <= context . _sectionStack . _version ) ; fn ( arguments [ 0 ] ) ; }	fn . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._size >= _dataStack._size	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _size >= _dataStack . _size ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _size >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	fn._target != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( fn . _target != null ) ; fn ( arguments [ 0 ] ) ; }	fn . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse != null ) ; fn ( arguments [ 0 ] ) ; }	inverse != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodBase == null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodBase == null ) ; fn ( arguments [ 0 ] ) ; }	inverse . _methodBase == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtr != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtr != null ) ; fn ( arguments [ 0 ] ) ; }	inverse . _methodPtr != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux == 0	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux == 0 ) ; fn ( arguments [ 0 ] ) ; }	inverse . _methodPtrAux == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._dataStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _dataStack . _version ) ; fn ( arguments [ 0 ] ) ; }	inverse . _methodPtrAux <= context . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._indenter.internalMatchTimeout	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout ) ; fn ( arguments [ 0 ] ) ; }	inverse . _methodPtrAux <= context . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._size >= _indenter.capsize	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _size >= _indenter . capsize ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _size >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._methodPtrAux <= context._sectionStack._version	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _methodPtrAux <= context . _sectionStack . _version ) ; fn ( arguments [ 0 ] ) ; }	inverse . _methodPtrAux <= context . _sectionStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target != null	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target != null ) ; fn ( arguments [ 0 ] ) ; }	inverse . _target != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.WithHelper(Nustache.Core.RenderContext context, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options, Nustache.Core.RenderBlock fn, Nustache.Core.RenderBlock inverse)	inverse._target.Equals(fn._target)	1	8	0	public static void WithHelper ( RenderContext context , IList < object > arguments , IDictionary < string , object > options , RenderBlock fn , RenderBlock inverse ) { if ( inverse . _target . Equals ( fn . _target ) ) ; fn ( arguments [ 0 ] ) ; }	inverse . _target . Equals ( fn . _target )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack != null	0.986486486486487	73	1	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack >= 0	0.027027027027027	2	72	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack >= 0 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._size <= _indenter.internalMatchTimeout	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Count == 4	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Count == 4 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._dataStack._syncRoot)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _dataStack . _syncRoot ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indent)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indent ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.capnames)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . capnames ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.caps)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . caps ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._syncRoot == null	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _syncRoot == null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.capslist)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . capslist ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.factory)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . factory ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._sectionStack._syncRoot)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _sectionStack . _syncRoot ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._templateLocator)	0.111278195488722	74	591	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _templateLocator ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( ctx . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._version >= 1	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _version >= 1 ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(options)	0.0842105263157895	56	609	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( options ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( options )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(arguments)	0.037593984962406	25	640	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( arguments ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . Contains ( arguments )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array != null	0.567567567567568	42	32	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array >= 0	0.0135135135135135	1	73	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array >= 0 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.All(x => x == null)	0.216216216216216	16	58	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . All ( x => x == null ) ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._version >= _dataStack._size	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _version >= _dataStack . _size ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._size == 1	0.810810810810811	60	14	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _size == 1 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._size >= 1	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _size >= 1 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._size <= 1	0.810810810810811	60	14	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _size <= 1 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _size <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._size <= ctx._dataStack._array	0.0135135135135135	1	73	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _size <= ctx . _dataStack . _array ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _size <= ctx . _dataStack . _array
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._version >= _dataStack._version	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _version >= _dataStack . _version ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _version >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._size <= ctx._dataStack	0.027027027027027	2	72	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _size <= ctx . _dataStack ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _size <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._syncRoot == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _syncRoot == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._version >= 1	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _version >= 1 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._version == ctx._dataStack._size	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _version == ctx . _dataStack . _size ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _dataStack . _version == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._includeLevel == 0	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _includeLevel == 0 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._version >= _indenter.capsize	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _version >= _indenter . capsize ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _version >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indent == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indent == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capnames == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . capnames == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.caps == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . caps == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capsize == 1	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . capsize == 1 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._version <= _indenter.internalMatchTimeout	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capsize <= ctx._dataStack._size	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . capsize <= ctx . _dataStack . _size ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . capsize <= ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capsize <= ctx._dataStack._version	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . capsize <= ctx . _dataStack . _version ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . capsize <= ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capslist == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . capslist == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.code != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . code != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.factory == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . factory == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_sectionStack._version >= _sectionStack._size	1	95	0	public object GetValue ( string path ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= 0	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= 0 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._dataStack._size	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _size ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._dataStack._version	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _version ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._includeLevel	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _includeLevel ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . internalMatchTimeout >= ctx . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_templateLocator == null	1	95	0	public object GetValue ( string path ) { if ( _templateLocator == null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._indenter.capsize	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _indenter . capsize ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . internalMatchTimeout >= ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.pattern != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . pattern != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.refsInitialized == true	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . refsInitialized == true ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.replref != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . replref != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	_writer != null	1	95	0	public object GetValue ( string path ) { if ( _writer != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.roptions != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . roptions != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.runnerref != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _indenter . runnerref != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._lineEnded == false	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _lineEnded == false ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._renderContextBehaviour != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _renderContextBehaviour != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValue(System.String path)	path != null	1	95	0	public object GetValue ( string path ) { if ( path != null ) ; if ( path == "." ) { object peekedObject = _dataStack . Peek ( ) ; if ( peekedObject as XmlElement != null ) { return ( ( XmlElement ) peekedObject ) . InnerText ; } return peekedObject ; } foreach ( var data in _dataStack ) { if ( data != null ) { bool partialMatch ; var value = GetValueFromPath ( data , path , out partialMatch ) ; if ( partialMatch ) break ; if ( ! ReferenceEquals ( value , ValueGetter . NoValue ) ) { if ( value is string ) { var valueAsString = ( string ) value ; if ( string . IsNullOrEmpty ( valueAsString ) && _renderContextBehaviour . RaiseExceptionOnEmptyStringValue ) { throw new NustacheEmptyStringException ( string . Format ( "Path:{0}isanemptystring,RaiseExceptionOnEmptyStringValue:true." , path ) ) ; } } return value ; } } } string name ; IList < object > arguments ; IDictionary < string , object > options ; Helpers . Parse ( this , path , out name , out arguments , out options ) ; if ( Helpers . Contains ( name ) ) { var helper = Helpers . Get ( name ) ; return ( HelperProxy ) ( ( fn , inverse ) => helper ( this , arguments , options , fn , inverse ) ) ; } if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } return null ; }	path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._array.Count == 4	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _array . Count == 4 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size >= 1	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size >= 1 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size == ctx._dataStack._size	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size == ctx . _dataStack . _size ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _size == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size == ctx._dataStack._version	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size == ctx . _dataStack . _version ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _size == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size >= ctx._indenter.capsize	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size >= ctx . _indenter . capsize ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _size >= ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size <= ctx._indenter.internalMatchTimeout	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size <= ctx . _indenter . internalMatchTimeout ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _size <= ctx . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._syncRoot == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _syncRoot == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version >= 1	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version >= 1 ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Count == 4	0.820224719101124	73	16	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Count == 4 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == ctx._dataStack._size	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == ctx . _dataStack . _size ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _version == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == ctx._dataStack._version	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == ctx . _dataStack . _version ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _version == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version >= ctx._indenter.capsize	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version >= ctx . _indenter . capsize ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _version >= ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version <= ctx._indenter.internalMatchTimeout	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version <= ctx . _indenter . internalMatchTimeout ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _version <= ctx . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_dataStack._syncRoot)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == ctx._sectionStack._size	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == ctx . _sectionStack . _size ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _sectionStack . _version == ctx . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._templateLocator == null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _templateLocator == null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._writer != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( ctx . _writer != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	ctx . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	path != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( path != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_indent)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _indent ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.Parse(Nustache.Core.RenderContext ctx, System.String path, System.String name, System.Collections.Generic.IList`1<System.Object> arguments, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	name != null	1	74	0	public static void Parse ( RenderContext ctx , string path , out string name , out IList < object > arguments , out IDictionary < string , object > options ) { if ( name != null ) ; name = path ; arguments = null ; options = null ; if ( path . Contains ( "" ) ) { var splits = path . Split ( ) ; name = splits [ 0 ] ; ParseArguments ( ctx , splits , out arguments ) ; ParseOptions ( ctx , splits , out options ) ; } }	name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack >= 0	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack >= 0 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Count == 4	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Count == 4 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._dataStack._syncRoot)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _dataStack . _syncRoot ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_indenter.capnames)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._indent)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indent ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._indenter.capnames)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . capnames ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._indenter.caps)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . caps ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._indenter.capslist)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . capslist ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._indenter.factory)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . factory ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_indenter.caps)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._sectionStack._syncRoot)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _sectionStack . _syncRoot ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array.Contains(ctx._templateLocator)	0.127272727272727	49	336	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array . Contains ( ctx . _templateLocator ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._array != null	0.36734693877551	18	31	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _array != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._size == 1	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _size == 1 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._size <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _size <= ctx . _dataStack ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _size <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._syncRoot == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _syncRoot == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_indenter.capslist)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._version == 1	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _version == 1 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._version == ctx._dataStack._size	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _version == ctx . _dataStack . _size ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _version == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._dataStack._version <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _dataStack . _version <= ctx . _dataStack ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _dataStack . _version <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._includeLevel == 0	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _includeLevel == 0 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._includeLevel <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _includeLevel <= ctx . _dataStack ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _includeLevel <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indent == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indent == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_indenter.factory)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.capnames == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . capnames == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.caps == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . caps == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.capsize == 1	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . capsize == 1 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.capsize == ctx._dataStack._size	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . capsize == ctx . _dataStack . _size ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . capsize == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.capsize == ctx._dataStack._version	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . capsize == ctx . _dataStack . _version ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . capsize == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.capsize <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . capsize <= ctx . _dataStack ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . capsize <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.capslist == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . capslist == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.code != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . code != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.factory == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . factory == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.internalMatchTimeout >= 0	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . internalMatchTimeout >= 0 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.Contains(_templateLocator)	0.126516464471404	73	504	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.internalMatchTimeout >= ctx._dataStack._size	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _size ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.internalMatchTimeout >= ctx._dataStack._version	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _version ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.internalMatchTimeout >= ctx._includeLevel	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _includeLevel ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.internalMatchTimeout >= ctx._indenter.capsize	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _indenter . capsize ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.internalMatchTimeout <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . internalMatchTimeout <= ctx . _dataStack ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . internalMatchTimeout <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array != null	0.898876404494382	80	9	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.pattern != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . pattern != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.refsInitialized == true	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . refsInitialized == true ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.replref != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . replref != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.roptions != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . roptions != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._indenter.runnerref != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _indenter . runnerref != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._lineEnded == false	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _lineEnded == false ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array >= 0	0.0337078651685393	3	86	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array >= 0 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._renderContextBehaviour != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _renderContextBehaviour != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack >= 0	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack >= 0 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack >= ctx._dataStack._size	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack >= ctx . _dataStack . _size ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack >= ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack >= ctx._dataStack._version	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack >= ctx . _dataStack . _version ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack >= ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.All(x => x == null)	0.0674157303370787	6	83	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . All ( x => x == null ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack >= ctx._includeLevel	0.0204081632653061	1	48	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack >= ctx . _includeLevel ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack >= ctx . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._array.Count == 4	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _array . Count == 4 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._size == 1	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _size == 1 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._size == ctx._dataStack._size	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _size == ctx . _dataStack . _size ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _size == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._size == ctx._dataStack._version	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _size == ctx . _dataStack . _version ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _size == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.All(x => x == 1)	0.179775280898876	16	73	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._size == ctx._indenter.capsize	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _size == ctx . _indenter . capsize ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _size == ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._size <= ctx._indenter.internalMatchTimeout	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _size <= ctx . _indenter . internalMatchTimeout ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _size <= ctx . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._syncRoot == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _syncRoot == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._version == 1	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _version == 1 ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._version == ctx._dataStack._size	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _version == ctx . _dataStack . _size ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _version == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._version == ctx._dataStack._version	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _version == ctx . _dataStack . _version ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _version == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.All(x => x >= 1)	0.157303370786517	14	75	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._version == ctx._indenter.capsize	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _version == ctx . _indenter . capsize ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _version == ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._version <= ctx._indenter.internalMatchTimeout	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _version <= ctx . _indenter . internalMatchTimeout ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _version <= ctx . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._sectionStack._version == ctx._sectionStack._size	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _sectionStack . _version == ctx . _sectionStack . _size ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _sectionStack . _version == ctx . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._templateLocator == null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _templateLocator == null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	ctx._writer != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( ctx . _writer != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	ctx . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	splits.All(x => x != null)	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( splits . All ( x => x != null ) ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	splits . All ( x => x != null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.All(x => x >= 0)	0.101123595505618	9	80	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseArguments(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IList`1<System.Object> arguments)	arguments != null	1	49	0	private static void ParseArguments ( RenderContext ctx , string [ ] splits , out IList < object > arguments ) { if ( arguments != null ) ; arguments = null ; if ( splits . Length > 1 ) { arguments = new List < object > ( splits ) . GetRange ( 1 , splits . Length - 1 ) ; for ( var i = 0 ; i < arguments . Count ; i ++ ) { var arg = ( string ) arguments [ i ] ; if ( arg [ 0 ] == '"' ) { arguments [ i ] = arg . Substring ( 1 , arg . Length - 2 ) ; } else { arguments [ i ] = ctx . GetValue ( arg ) ; } } } }	arguments != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack >= 0	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack >= 0 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._array.All(x => x <= 1)	0.179775280898876	16	73	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Count == 4	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Count == 4 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._dataStack._syncRoot)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _dataStack . _syncRoot ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indent)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indent ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.capnames)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . capnames ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.caps)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . caps ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._size == 1	0.561797752808989	50	39	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _size == 1 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.capslist)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . capslist ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._indenter.factory)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _indenter . factory ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._sectionStack._syncRoot)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _sectionStack . _syncRoot ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(ctx._templateLocator)	0.118072289156627	49	366	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( ctx . _templateLocator ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( ctx . _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array.Contains(options)	0.0746987951807229	31	384	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array . Contains ( options ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array . Contains ( options )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._array != null	0.36734693877551	18	31	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _array != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._size >= 1	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _size >= 1 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._size == 1	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _size == 1 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._size <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _size <= ctx . _dataStack ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _size <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._syncRoot == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _syncRoot == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._version == 1	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _version == 1 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._version == ctx._dataStack._size	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _version == ctx . _dataStack . _size ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _version == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._size <= 1	0.561797752808989	50	39	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _size <= 1 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _size <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._dataStack._version <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _dataStack . _version <= ctx . _dataStack ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _dataStack . _version <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._includeLevel == 0	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _includeLevel == 0 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._includeLevel <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _includeLevel <= ctx . _dataStack ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _includeLevel <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indent == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indent == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._size <= _dataStack._array	0.0337078651685393	3	86	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _size <= _dataStack . _array ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _size <= _dataStack . _array
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capnames == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . capnames == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.caps == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . caps == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capsize == 1	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . capsize == 1 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capsize == ctx._dataStack._size	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . capsize == ctx . _dataStack . _size ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . capsize == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capsize == ctx._dataStack._version	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . capsize == ctx . _dataStack . _version ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . capsize == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._syncRoot == null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _syncRoot == null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capsize <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . capsize <= ctx . _dataStack ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . capsize <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.capslist == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . capslist == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.code != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . code != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.factory == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . factory == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= 0	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= 0 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._version >= 1	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _version >= 1 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._dataStack._size	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _size ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._dataStack._version	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _version ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._includeLevel	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _includeLevel ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout >= ctx._indenter.capsize	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout >= ctx . _indenter . capsize ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . internalMatchTimeout >= ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.internalMatchTimeout <= ctx._dataStack	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . internalMatchTimeout <= ctx . _dataStack ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . internalMatchTimeout <= ctx . _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_dataStack._version >= _dataStack._size	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _dataStack . _version >= _dataStack . _size ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.pattern != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . pattern != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.refsInitialized == true	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . refsInitialized == true ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.replref != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . replref != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.roptions != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . roptions != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._indenter.runnerref != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _indenter . runnerref != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_includeLevel >= 0	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _includeLevel >= 0 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._lineEnded == false	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _lineEnded == false ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._renderContextBehaviour != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _renderContextBehaviour != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack >= 0	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack >= 0 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack >= ctx._dataStack._size	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack >= ctx . _dataStack . _size ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack >= ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack >= ctx._dataStack._version	0.0204081632653061	1	48	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack >= ctx . _dataStack . _version ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack >= ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._array.Count == 4	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _array . Count == 4 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size == 1	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size == 1 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size == ctx._dataStack._size	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size == ctx . _dataStack . _size ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _size == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size == ctx._dataStack._version	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size == ctx . _dataStack . _version ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _size == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.capnames == null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . capnames == null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size == ctx._indenter.capsize	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size == ctx . _indenter . capsize ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _size == ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._size <= ctx._indenter.internalMatchTimeout	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _size <= ctx . _indenter . internalMatchTimeout ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _size <= ctx . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._syncRoot == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _syncRoot == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == 1	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == 1 ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == ctx._dataStack._size	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == ctx . _dataStack . _size ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _version == ctx . _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.caps == null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . caps == null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == ctx._dataStack._version	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == ctx . _dataStack . _version ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _version == ctx . _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == ctx._indenter.capsize	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == ctx . _indenter . capsize ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _version == ctx . _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version <= ctx._indenter.internalMatchTimeout	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version <= ctx . _indenter . internalMatchTimeout ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _version <= ctx . _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._sectionStack._version == ctx._sectionStack._size	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _sectionStack . _version == ctx . _sectionStack . _size ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _sectionStack . _version == ctx . _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._templateLocator == null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _templateLocator == null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.capsize == 1	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . capsize == 1 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	ctx._writer != null	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( ctx . _writer != null ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	ctx . _writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\Helpers.cs	Nustache.Core.Helpers.ParseOptions(Nustache.Core.RenderContext ctx, System.String[] splits, System.Collections.Generic.IDictionary`2<System.String, System.Object> options)	splits.All(x => x != null)	1	49	0	private static void ParseOptions ( RenderContext ctx , string [ ] splits , out IDictionary < string , object > options ) { if ( splits . All ( x => x != null ) ) ; options = null ; for ( var i = 0 ; i < splits . Length ; i ++ ) { var arg = splits [ i ] ; if ( arg . Contains ( "=" ) ) { if ( options == null ) { options = new Dictionary < string , object > ( ) ; } var splits2 = arg . Split ( new [ ] { '=' } , 2 ) ; var key = splits2 [ 0 ] ; var val = splits2 [ 1 ] ; if ( val [ 0 ] == '"' ) { options [ key ] = val . Substring ( 1 , val . Length - 2 ) ; } else { options [ key ] = ctx . GetValue ( val ) ; } } } }	splits . All ( x => x != null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.capsize <= _dataStack._size	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . capsize <= _dataStack . _size ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . capsize <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.capsize <= _dataStack._version	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . capsize <= _dataStack . _version ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . capsize <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.capslist == null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . capslist == null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.code != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . code != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.factory == null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . factory == null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.internalMatchTimeout >= 0	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . internalMatchTimeout >= 0 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.internalMatchTimeout >= _dataStack._size	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.internalMatchTimeout >= _dataStack._version	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.internalMatchTimeout >= _includeLevel	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.internalMatchTimeout >= _indenter.capsize	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.pattern != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . pattern != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.refsInitialized == true	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . refsInitialized == true ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.replref != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . replref != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.roptions != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . roptions != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_indenter.runnerref != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _indenter . runnerref != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_renderContextBehaviour != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _renderContextBehaviour != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._size >= 1	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _size >= 1 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._size == _dataStack._size	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _size == _dataStack . _size ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _size == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._size <= _dataStack._version	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _size <= _dataStack . _version ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _size <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._size >= _indenter.capsize	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _size >= _indenter . capsize ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _size >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._size <= _indenter.internalMatchTimeout	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._syncRoot == null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _syncRoot == null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._version >= 1	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _version >= 1 ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._version >= _dataStack._size	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _version >= _dataStack . _size ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._version == _dataStack._version	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _version == _dataStack . _version ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _version == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._version >= _indenter.capsize	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _version >= _indenter . capsize ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _version >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._version <= _indenter.internalMatchTimeout	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_sectionStack._version >= _sectionStack._size	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_templateLocator == null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _templateLocator == null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	_writer != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( _writer != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	path != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( path != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetValues(System.String path)	ret != null	1	89	0	public IEnumerable < object > GetValues ( string path ) { if ( ret != null ) ; object value = GetValue ( path ) ; if ( value == null ) { if ( _renderContextBehaviour . RaiseExceptionOnDataContextMiss ) { throw new NustacheDataContextMissException ( string . Format ( "Path:{0}isundefined,RaiseExceptionOnDataContextMiss:true." , path ) ) ; } yield break ; } else if ( value is bool ) { if ( ( bool ) value ) { yield return value ; } } else if ( value is string ) { if ( ! string . IsNullOrEmpty ( ( string ) value ) ) { yield return value ; } } else if ( value . GetType ( ) . ToString ( ) . Equals ( "Newtonsoft.Json.Linq.JValue" ) ) { yield return value ; } else if ( GenericIDictionaryUtil . IsInstanceOfGenericIDictionary ( value ) ) { if ( ( value as IEnumerable ) . GetEnumerator ( ) . MoveNext ( ) ) { yield return value ; } } else if ( value is IDictionary ) { if ( ( ( IDictionary ) value ) . Count > 0 ) { yield return value ; } } else if ( value is IEnumerable ) { foreach ( var item in ( ( IEnumerable ) value ) ) { yield return item ; } } else if ( value is DataTable ) { foreach ( var item in ( ( DataTable ) value ) . Rows ) { yield return item ; } } else { yield return value ; } }	ret != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack != null	1	27	0	public bool IsTruthy ( string path ) { if ( _dataStack != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Count == 4	1	27	0	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Count == 4 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_dataStack._syncRoot)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_indent)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _indent ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_indenter.capnames)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_indenter.caps)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_indenter.capslist)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_indenter.factory)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array.Contains(_templateLocator)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._array != null	0.259259259259259	7	20	public bool IsTruthy ( string path ) { if ( _dataStack . _array != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._size == 1	1	27	0	public bool IsTruthy ( string path ) { if ( _dataStack . _size == 1 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._syncRoot == null	1	27	0	public bool IsTruthy ( string path ) { if ( _dataStack . _syncRoot == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._version == 1	1	27	0	public bool IsTruthy ( string path ) { if ( _dataStack . _version == 1 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_dataStack._version == _dataStack._size	1	27	0	public bool IsTruthy ( string path ) { if ( _dataStack . _version == _dataStack . _size ) ; return IsTruthy ( GetValue ( path ) ) ; }	_dataStack . _version == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_includeLevel == 0	1	27	0	public bool IsTruthy ( string path ) { if ( _includeLevel == 0 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indent == null	1	27	0	public bool IsTruthy ( string path ) { if ( _indent == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter != null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.capnames == null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . capnames == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.caps == null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . caps == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.capsize == 1	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . capsize == 1 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.capsize == _dataStack._size	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . capsize == _dataStack . _size ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . capsize == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.capsize == _dataStack._version	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . capsize == _dataStack . _version ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . capsize == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.capslist == null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . capslist == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.code != null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . code != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.factory == null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . factory == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.internalMatchTimeout >= 0	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . internalMatchTimeout >= 0 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.internalMatchTimeout >= _dataStack._size	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.internalMatchTimeout >= _dataStack._version	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.internalMatchTimeout >= _includeLevel	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.internalMatchTimeout >= _indenter.capsize	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.pattern != null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . pattern != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.refsInitialized == true	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . refsInitialized == true ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.replref != null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . replref != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.roptions != null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . roptions != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_indenter.runnerref != null	1	27	0	public bool IsTruthy ( string path ) { if ( _indenter . runnerref != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_lineEnded == false	0.814814814814815	22	5	public bool IsTruthy ( string path ) { if ( _lineEnded == false ) ; return IsTruthy ( GetValue ( path ) ) ; }	_lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_lineEnded == true	0.111111111111111	3	24	public bool IsTruthy ( string path ) { if ( _lineEnded == true ) ; return IsTruthy ( GetValue ( path ) ) ; }	_lineEnded == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_renderContextBehaviour != null	1	27	0	public bool IsTruthy ( string path ) { if ( _renderContextBehaviour != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack != null	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Count == 4	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Count == 4 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_dataStack._syncRoot)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _dataStack . _syncRoot ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_indent)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _indent ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_indenter.capnames)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _indenter . capnames ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_indenter.caps)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _indenter . caps ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_indenter.capslist)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _indenter . capslist ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_indenter.factory)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _indenter . factory ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_sectionStack._syncRoot)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._array.Contains(_templateLocator)	0.129186602870813	27	182	public bool IsTruthy ( string path ) { if ( _sectionStack . _array . Contains ( _templateLocator ) ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._size == 1	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _size == 1 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._size == _dataStack._size	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _size == _dataStack . _size ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _size == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._size == _dataStack._version	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _size == _dataStack . _version ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _size == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._size == _indenter.capsize	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _size == _indenter . capsize ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _size == _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._size <= _indenter.internalMatchTimeout	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._syncRoot == null	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _syncRoot == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._version == 1	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _version == 1 ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._version == _dataStack._size	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _version == _dataStack . _size ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _version == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._version == _dataStack._version	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _version == _dataStack . _version ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _version == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._version == _indenter.capsize	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _version == _indenter . capsize ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _version == _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._version <= _indenter.internalMatchTimeout	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_sectionStack._version == _sectionStack._size	1	27	0	public bool IsTruthy ( string path ) { if ( _sectionStack . _version == _sectionStack . _size ) ; return IsTruthy ( GetValue ( path ) ) ; }	_sectionStack . _version == _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_templateLocator == null	1	27	0	public bool IsTruthy ( string path ) { if ( _templateLocator == null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	_writer != null	1	27	0	public bool IsTruthy ( string path ) { if ( _writer != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.String path)	path != null	1	27	0	public bool IsTruthy ( string path ) { if ( path != null ) ; return IsTruthy ( GetValue ( path ) ) ; }	path != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack != null	1	37	0	public bool IsTruthy ( object value ) { if ( _dataStack != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack >= 0	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _dataStack >= 0 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Count == 4	1	37	0	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Count == 4 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_dataStack._syncRoot)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_indent)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _indent ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_indenter.capnames)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_indenter.caps)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_indenter.capslist)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_indenter.factory)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array.Contains(_templateLocator)	0.1280276816609	37	252	public bool IsTruthy ( object value ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._array != null	0.567567567567568	21	16	public bool IsTruthy ( object value ) { if ( _dataStack . _array != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._size == 1	1	37	0	public bool IsTruthy ( object value ) { if ( _dataStack . _size == 1 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._size <= _dataStack	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _dataStack . _size <= _dataStack ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _size <= _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._syncRoot == null	1	37	0	public bool IsTruthy ( object value ) { if ( _dataStack . _syncRoot == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._version == 1	1	37	0	public bool IsTruthy ( object value ) { if ( _dataStack . _version == 1 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._version == _dataStack._size	1	37	0	public bool IsTruthy ( object value ) { if ( _dataStack . _version == _dataStack . _size ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _version == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_dataStack._version <= _dataStack	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _dataStack . _version <= _dataStack ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_dataStack . _version <= _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_includeLevel == 0	1	37	0	public bool IsTruthy ( object value ) { if ( _includeLevel == 0 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_includeLevel == 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_includeLevel <= _dataStack	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _includeLevel <= _dataStack ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_includeLevel <= _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indent == null	1	37	0	public bool IsTruthy ( object value ) { if ( _indent == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indent == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter != null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.capnames == null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . capnames == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.caps == null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . caps == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.capsize == 1	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . capsize == 1 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.capsize == _dataStack._size	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . capsize == _dataStack . _size ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . capsize == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.capsize == _dataStack._version	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . capsize == _dataStack . _version ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . capsize == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.capsize <= _dataStack	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _indenter . capsize <= _dataStack ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . capsize <= _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.capslist == null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . capslist == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.code != null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . code != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.factory == null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . factory == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.internalMatchTimeout >= 0	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . internalMatchTimeout >= 0 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.internalMatchTimeout >= _dataStack._size	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.internalMatchTimeout >= _dataStack._version	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.internalMatchTimeout >= _includeLevel	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.internalMatchTimeout >= _indenter.capsize	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.internalMatchTimeout <= _dataStack	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _indenter . internalMatchTimeout <= _dataStack ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . internalMatchTimeout <= _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.pattern != null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . pattern != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.refsInitialized == true	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . refsInitialized == true ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.replref != null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . replref != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.roptions != null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . roptions != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_indenter.runnerref != null	1	37	0	public bool IsTruthy ( object value ) { if ( _indenter . runnerref != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_lineEnded == false	0.864864864864865	32	5	public bool IsTruthy ( object value ) { if ( _lineEnded == false ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_lineEnded == true	0.0540540540540541	2	35	public bool IsTruthy ( object value ) { if ( _lineEnded == true ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_lineEnded == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_renderContextBehaviour != null	1	37	0	public bool IsTruthy ( object value ) { if ( _renderContextBehaviour != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack != null	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack >= 0	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _sectionStack >= 0 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack >= _dataStack._size	0.027027027027027	1	36	public bool IsTruthy ( object value ) { if ( _sectionStack >= _dataStack . _size ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._array.Count == 4	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _array . Count == 4 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._size == 1	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _size == 1 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._size == _dataStack._size	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _size == _dataStack . _size ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _size == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._size == _dataStack._version	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _size == _dataStack . _version ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _size == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._size == _indenter.capsize	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _size == _indenter . capsize ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _size == _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._size <= _indenter.internalMatchTimeout	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._syncRoot == null	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _syncRoot == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._version == 1	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _version == 1 ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _version == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._version == _dataStack._size	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _version == _dataStack . _size ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _version == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._version == _dataStack._version	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _version == _dataStack . _version ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _version == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._version == _indenter.capsize	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _version == _indenter . capsize ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _version == _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._version <= _indenter.internalMatchTimeout	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_sectionStack._version == _sectionStack._size	1	37	0	public bool IsTruthy ( object value ) { if ( _sectionStack . _version == _sectionStack . _size ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_sectionStack . _version == _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_templateLocator == null	1	37	0	public bool IsTruthy ( object value ) { if ( _templateLocator == null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.IsTruthy(System.Object value)	_writer != null	1	37	0	public bool IsTruthy ( object value ) { if ( _writer != null ) ; if ( value == null ) { return false ; } if ( value is bool ) { return ( bool ) value ; } if ( value is string ) { return ! string . IsNullOrEmpty ( ( string ) value ) ; } if ( value is IEnumerable ) { return ( ( IEnumerable ) value ) . GetEnumerator ( ) . MoveNext ( ) ; } if ( value is DataTable ) { return ( ( DataTable ) value ) . Rows . Count > 0 ; } return true ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack != null	1	100	0	public void WriteLiteral ( string text ) { if ( _dataStack != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack >= 0	0.02	2	98	public void WriteLiteral ( string text ) { if ( _dataStack >= 0 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Count == 4	0.84	84	16	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Count == 4 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_dataStack._syncRoot)	0.133812949640288	93	602	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_indenter.capnames)	0.133812949640288	93	602	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_indenter.caps)	0.133812949640288	93	602	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_indenter.capslist)	0.133812949640288	93	602	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_indenter.factory)	0.133812949640288	93	602	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.133812949640288	93	602	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_templateLocator._methodBase)	0.037410071942446	26	669	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _templateLocator . _methodBase ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_indent)	0.0719424460431655	50	645	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _indent ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.Contains(_templateLocator)	0.0964028776978417	67	628	public void WriteLiteral ( string text ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array != null	0.96	96	4	public void WriteLiteral ( string text ) { if ( _dataStack . _array != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array >= 0	0.04	4	96	public void WriteLiteral ( string text ) { if ( _dataStack . _array >= 0 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.All(x => x == null)	0.31	31	69	public void WriteLiteral ( string text ) { if ( _dataStack . _array . All ( x => x == null ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.All(x => x == 1)	0.45	45	55	public void WriteLiteral ( string text ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.All(x => x >= 1)	0.36	36	64	public void WriteLiteral ( string text ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.All(x => x >= 0)	0.18	18	82	public void WriteLiteral ( string text ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._array.All(x => x <= 1)	0.45	45	55	public void WriteLiteral ( string text ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._size == 1	0.22	22	78	public void WriteLiteral ( string text ) { if ( _dataStack . _size == 1 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._size >= 1	1	100	0	public void WriteLiteral ( string text ) { if ( _dataStack . _size >= 1 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._syncRoot == null	1	100	0	public void WriteLiteral ( string text ) { if ( _dataStack . _syncRoot == null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._version >= 1	1	100	0	public void WriteLiteral ( string text ) { if ( _dataStack . _version >= 1 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_dataStack._version >= _dataStack._size	1	100	0	public void WriteLiteral ( string text ) { if ( _dataStack . _version >= _dataStack . _size ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_includeLevel >= 0	1	100	0	public void WriteLiteral ( string text ) { if ( _includeLevel >= 0 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter != null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.capnames == null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . capnames == null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.caps == null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . caps == null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.capsize == 1	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . capsize == 1 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.capsize <= _dataStack._size	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . capsize <= _dataStack . _size ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . capsize <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.capsize <= _dataStack._version	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . capsize <= _dataStack . _version ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . capsize <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.capslist == null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . capslist == null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.code != null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . code != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.factory == null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . factory == null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.internalMatchTimeout >= 0	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . internalMatchTimeout >= 0 ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.internalMatchTimeout >= _dataStack._size	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.internalMatchTimeout >= _dataStack._version	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.internalMatchTimeout >= _includeLevel	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.internalMatchTimeout >= _indenter.capsize	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.pattern != null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . pattern != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.refsInitialized == true	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . refsInitialized == true ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.replref != null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . replref != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.roptions != null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . roptions != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_indenter.runnerref != null	1	100	0	public void WriteLiteral ( string text ) { if ( _indenter . runnerref != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_renderContextBehaviour != null	1	100	0	public void WriteLiteral ( string text ) { if ( _renderContextBehaviour != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack != null	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._size >= _dataStack._size	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _size >= _dataStack . _size ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _size >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._size >= _indenter.capsize	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _size >= _indenter . capsize ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _size >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._size <= _indenter.internalMatchTimeout	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._syncRoot == null	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _syncRoot == null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._version >= _dataStack._size	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _version >= _dataStack . _size ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._version >= _dataStack._version	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _version >= _dataStack . _version ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _version >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._version >= _indenter.capsize	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _version >= _indenter . capsize ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _version >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._version <= _indenter.internalMatchTimeout	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_sectionStack._version >= _sectionStack._size	1	100	0	public void WriteLiteral ( string text ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	_writer != null	1	100	0	public void WriteLiteral ( string text ) { if ( _writer != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.WriteLiteral(System.String text)	text != null	1	100	0	public void WriteLiteral ( string text ) { if ( text != null ) ; if ( _indent != null ) { text = _indenter . Replace ( text , m => "\n" + _indent ) ; } Write ( text ) ; _lineEnded = text . Length > 0 && text [ text . Length - 1 ] == '\n' ; }	text != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack != null	1	100	0	public void Write ( string text ) { if ( _dataStack != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack >= 0	0.02	2	98	public void Write ( string text ) { if ( _dataStack >= 0 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Count == 4	0.84	84	16	public void Write ( string text ) { if ( _dataStack . _array . Count == 4 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_dataStack._syncRoot)	0.133426966292135	95	617	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_indenter.capnames)	0.133426966292135	95	617	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_indenter.caps)	0.133426966292135	95	617	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_indenter.capslist)	0.133426966292135	95	617	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_indenter.factory)	0.133426966292135	95	617	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.133426966292135	95	617	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_templateLocator._methodBase)	0.0308988764044944	22	690	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _templateLocator . _methodBase ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_indent)	0.0730337078651685	52	660	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _indent ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.Contains(_templateLocator)	0.103932584269663	74	638	public void Write ( string text ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array != null	0.98	98	2	public void Write ( string text ) { if ( _dataStack . _array != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array >= 0	0.04	4	96	public void Write ( string text ) { if ( _dataStack . _array >= 0 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.All(x => x == null)	0.17	17	83	public void Write ( string text ) { if ( _dataStack . _array . All ( x => x == null ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.All(x => x == 1)	0.48	48	52	public void Write ( string text ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.All(x => x >= 1)	0.32	32	68	public void Write ( string text ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.All(x => x >= 0)	0.2	20	80	public void Write ( string text ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._array.All(x => x <= 1)	0.48	48	52	public void Write ( string text ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._size == 1	0.13	13	87	public void Write ( string text ) { if ( _dataStack . _size == 1 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._size >= 1	1	100	0	public void Write ( string text ) { if ( _dataStack . _size >= 1 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._syncRoot == null	1	100	0	public void Write ( string text ) { if ( _dataStack . _syncRoot == null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._version >= 1	1	100	0	public void Write ( string text ) { if ( _dataStack . _version >= 1 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_dataStack._version >= _dataStack._size	1	100	0	public void Write ( string text ) { if ( _dataStack . _version >= _dataStack . _size ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_includeLevel >= 0	1	100	0	public void Write ( string text ) { if ( _includeLevel >= 0 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter != null	1	100	0	public void Write ( string text ) { if ( _indenter != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.capnames == null	1	100	0	public void Write ( string text ) { if ( _indenter . capnames == null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.caps == null	1	100	0	public void Write ( string text ) { if ( _indenter . caps == null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.capsize == 1	1	100	0	public void Write ( string text ) { if ( _indenter . capsize == 1 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.capsize <= _dataStack._size	1	100	0	public void Write ( string text ) { if ( _indenter . capsize <= _dataStack . _size ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . capsize <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.capsize <= _dataStack._version	1	100	0	public void Write ( string text ) { if ( _indenter . capsize <= _dataStack . _version ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . capsize <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.capslist == null	1	100	0	public void Write ( string text ) { if ( _indenter . capslist == null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.code != null	1	100	0	public void Write ( string text ) { if ( _indenter . code != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.factory == null	1	100	0	public void Write ( string text ) { if ( _indenter . factory == null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.internalMatchTimeout >= 0	1	100	0	public void Write ( string text ) { if ( _indenter . internalMatchTimeout >= 0 ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.internalMatchTimeout >= _dataStack._size	1	100	0	public void Write ( string text ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.internalMatchTimeout >= _dataStack._version	1	100	0	public void Write ( string text ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.internalMatchTimeout >= _includeLevel	1	100	0	public void Write ( string text ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.internalMatchTimeout >= _indenter.capsize	1	100	0	public void Write ( string text ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.pattern != null	1	100	0	public void Write ( string text ) { if ( _indenter . pattern != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.refsInitialized == true	1	100	0	public void Write ( string text ) { if ( _indenter . refsInitialized == true ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.replref != null	1	100	0	public void Write ( string text ) { if ( _indenter . replref != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.roptions != null	1	100	0	public void Write ( string text ) { if ( _indenter . roptions != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_indenter.runnerref != null	1	100	0	public void Write ( string text ) { if ( _indenter . runnerref != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_renderContextBehaviour != null	1	100	0	public void Write ( string text ) { if ( _renderContextBehaviour != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack != null	1	100	0	public void Write ( string text ) { if ( _sectionStack != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._size >= _dataStack._size	1	100	0	public void Write ( string text ) { if ( _sectionStack . _size >= _dataStack . _size ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _size >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._size >= _indenter.capsize	1	100	0	public void Write ( string text ) { if ( _sectionStack . _size >= _indenter . capsize ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _size >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._size <= _indenter.internalMatchTimeout	1	100	0	public void Write ( string text ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._syncRoot == null	1	100	0	public void Write ( string text ) { if ( _sectionStack . _syncRoot == null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._version >= _dataStack._size	1	100	0	public void Write ( string text ) { if ( _sectionStack . _version >= _dataStack . _size ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._version >= _dataStack._version	1	100	0	public void Write ( string text ) { if ( _sectionStack . _version >= _dataStack . _version ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _version >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._version >= _indenter.capsize	1	100	0	public void Write ( string text ) { if ( _sectionStack . _version >= _indenter . capsize ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _version >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._version <= _indenter.internalMatchTimeout	1	100	0	public void Write ( string text ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_sectionStack._version >= _sectionStack._size	1	100	0	public void Write ( string text ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	_writer != null	1	100	0	public void Write ( string text ) { if ( _writer != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Write(System.String text)	text != null	1	100	0	public void Write ( string text ) { if ( text != null ) ; if ( _indent != null && _lineEnded ) { text = _indent + text ; _lineEnded = false ; } _writer . Write ( text ) ; }	text != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _dataStack != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Count == 4	0.728813559322034	43	16	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Count == 4 ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_dataStack._syncRoot)	0.126338329764454	59	408	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_indenter.capnames)	0.126338329764454	59	408	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_indenter.caps)	0.126338329764454	59	408	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_indenter.capslist)	0.126338329764454	59	408	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_indenter.factory)	0.126338329764454	59	408	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.126338329764454	59	408	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_templateLocator._methodBase)	0.0471092077087794	22	445	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _templateLocator . _methodBase ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_templateLocator)	0.0792291220556745	37	430	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(_indent)	0.0620985010706638	29	438	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( _indent ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.Contains(indent)	0.0663811563169165	31	436	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . Contains ( indent ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . Contains ( indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array != null	0.559322033898305	33	26	public void Include ( string templateName , string indent ) { if ( _dataStack . _array != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.All(x => x == null)	0.508474576271186	30	29	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . All ( x => x == null ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.All(x => x == 1)	0.271186440677966	16	43	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.All(x => x >= 1)	0.271186440677966	16	43	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._array.All(x => x <= 1)	0.271186440677966	16	43	public void Include ( string templateName , string indent ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._size == 1	0.423728813559322	25	34	public void Include ( string templateName , string indent ) { if ( _dataStack . _size == 1 ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._size >= 1	0.610169491525424	36	23	public void Include ( string templateName , string indent ) { if ( _dataStack . _size >= 1 ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._size >= 0	0.406779661016949	24	35	public void Include ( string templateName , string indent ) { if ( _dataStack . _size >= 0 ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _size >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._syncRoot == null	1	59	0	public void Include ( string templateName , string indent ) { if ( _dataStack . _syncRoot == null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_dataStack._version >= _dataStack._size	1	59	0	public void Include ( string templateName , string indent ) { if ( _dataStack . _version >= _dataStack . _size ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_includeLevel >= 0	1	59	0	public void Include ( string templateName , string indent ) { if ( _includeLevel >= 0 ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.capnames == null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . capnames == null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.caps == null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . caps == null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.capsize == 1	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . capsize == 1 ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.capslist == null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . capslist == null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.code != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . code != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.factory == null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . factory == null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.internalMatchTimeout >= 0	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . internalMatchTimeout >= 0 ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.internalMatchTimeout >= _dataStack._size	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.internalMatchTimeout >= _dataStack._version	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.internalMatchTimeout >= _includeLevel	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.internalMatchTimeout >= _indenter.capsize	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.pattern != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . pattern != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.refsInitialized == true	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . refsInitialized == true ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.replref != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . replref != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.roptions != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . roptions != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_indenter.runnerref != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _indenter . runnerref != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_renderContextBehaviour != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _renderContextBehaviour != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack._size >= _dataStack._size	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack . _size >= _dataStack . _size ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack . _size >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack._size <= _indenter.internalMatchTimeout	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack._syncRoot == null	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack . _syncRoot == null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack._version >= _dataStack._size	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack . _version >= _dataStack . _size ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack._version >= _dataStack._version	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack . _version >= _dataStack . _version ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack . _version >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack._version <= _indenter.internalMatchTimeout	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_sectionStack._version >= _sectionStack._size	1	59	0	public void Include ( string templateName , string indent ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	_writer != null	1	59	0	public void Include ( string templateName , string indent ) { if ( _writer != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Include(System.String templateName, System.String indent)	templateName != null	1	59	0	public void Include ( string templateName , string indent ) { if ( templateName != null ) ; if ( _includeLevel >= IncludeLimit ) { throw new NustacheException ( string . Format ( "Youhavereachedtheincludelimitof{0}.Areyoutryingtorenderinfinitelyrecursivetemplatesordata?" , IncludeLimit ) ) ; } _includeLevel ++ ; var oldIndent = _indent ; _indent = ( _indent ?? "" ) + ( indent ?? "" ) ; TemplateDefinition templateDefinition = GetTemplateDefinition ( templateName ) ; if ( templateDefinition != null ) { templateDefinition . Render ( this ) ; } else if ( _templateLocator != null ) { var template = _templateLocator ( templateName ) ; if ( template != null ) { this . Enter ( template ) ; template . Render ( this ) ; this . Exit ( ) ; } } _indent = oldIndent ; _includeLevel -- ; }	templateName != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Count == 4	0.753846153846154	49	16	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Count == 4 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_dataStack._syncRoot)	0.136111111111111	49	311	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_indenter.capnames)	0.136111111111111	49	311	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_indenter.caps)	0.136111111111111	49	311	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_indenter.capslist)	0.136111111111111	49	311	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_indenter.factory)	0.136111111111111	49	311	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.136111111111111	49	311	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_templateLocator._methodBase)	0.0861111111111111	31	329	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _templateLocator . _methodBase ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(ret)	0.05	18	342	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( ret ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( ret )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.Contains(_templateLocator)	0.0583333333333333	21	339	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array != null	0.615384615384615	40	25	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.All(x => x == null)	0.538461538461538	35	30	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . All ( x => x == null ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.All(x => x == 1)	0.246153846153846	16	49	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.All(x => x >= 1)	0.246153846153846	16	49	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._array.All(x => x <= 1)	0.246153846153846	16	49	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._size == 1	0.476923076923077	31	34	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _size == 1 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._size >= 1	0.661538461538462	43	22	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _size >= 1 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._size >= 0	0.353846153846154	23	42	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _size >= 0 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _size >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._size <= 1	0.476923076923077	31	34	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _size <= 1 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _size <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._syncRoot == null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _syncRoot == null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_dataStack._version >= _dataStack._size	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _dataStack . _version >= _dataStack . _size ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_includeLevel >= 1	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _includeLevel >= 1 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_includeLevel >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indent != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indent != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indent != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.capnames == null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . capnames == null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.caps == null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . caps == null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.capsize == 1	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . capsize == 1 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.capsize <= _includeLevel	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . capsize <= _includeLevel ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . capsize <= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.capslist == null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . capslist == null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.code != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . code != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.factory == null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . factory == null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.internalMatchTimeout >= 0	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . internalMatchTimeout >= 0 ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.internalMatchTimeout >= _dataStack._size	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.internalMatchTimeout >= _dataStack._version	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.internalMatchTimeout >= _includeLevel	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.internalMatchTimeout >= _indenter.capsize	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.pattern != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . pattern != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.refsInitialized == true	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . refsInitialized == true ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.replref != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . replref != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.roptions != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . roptions != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_indenter.runnerref != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _indenter . runnerref != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_lineEnded == false	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _lineEnded == false ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_lineEnded == false
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_renderContextBehaviour != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _renderContextBehaviour != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack._size >= _dataStack._size	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack . _size >= _dataStack . _size ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack . _size >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack._size <= _indenter.internalMatchTimeout	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack._syncRoot == null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack . _syncRoot == null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack._version >= _dataStack._size	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack . _version >= _dataStack . _size ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack._version >= _dataStack._version	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack . _version >= _dataStack . _version ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack . _version >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack._version <= _indenter.internalMatchTimeout	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_sectionStack._version >= _sectionStack._size	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	_writer != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( _writer != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.GetTemplateDefinition(System.String name)	name != null	1	65	0	private TemplateDefinition GetTemplateDefinition ( string name ) { if ( name != null ) ; foreach ( var section in _sectionStack ) { var templateDefinition = section . GetTemplateDefinition ( name ) ; if ( templateDefinition != null ) { return templateDefinition ; } } return null ; }	name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack != null	1	98	0	public void Enter ( Section section ) { if ( _dataStack != null ) ; _sectionStack . Push ( section ) ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack >= 0	0.0102040816326531	1	97	public void Enter ( Section section ) { if ( _dataStack >= 0 ) ; _sectionStack . Push ( section ) ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Count == 4	0.86734693877551	85	13	public void Enter ( Section section ) { if ( _dataStack . _array . Count == 4 ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_dataStack._syncRoot)	0.131121642969984	83	550	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_indenter.capnames)	0.131121642969984	83	550	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_indenter.caps)	0.131121642969984	83	550	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_indenter.capslist)	0.131121642969984	83	550	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_indenter.factory)	0.131121642969984	83	550	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.131121642969984	83	550	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_templateLocator._methodBase)	0.0473933649289099	30	603	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _templateLocator . _methodBase ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_indent)	0.0868878357030016	55	578	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _indent ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.Contains(_templateLocator)	0.0884676145339652	56	577	public void Enter ( Section section ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array != null	0.928571428571429	91	7	public void Enter ( Section section ) { if ( _dataStack . _array != null ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array >= 0	0.0306122448979592	3	95	public void Enter ( Section section ) { if ( _dataStack . _array >= 0 ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.All(x => x == null)	0.13265306122449	13	85	public void Enter ( Section section ) { if ( _dataStack . _array . All ( x => x == null ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.All(x => x == 1)	0.153061224489796	15	83	public void Enter ( Section section ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.All(x => x >= 1)	0.142857142857143	14	84	public void Enter ( Section section ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.All(x => x >= 0)	0.0918367346938776	9	89	public void Enter ( Section section ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._array.All(x => x <= 1)	0.153061224489796	15	83	public void Enter ( Section section ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; _sectionStack . Push ( section ) ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._size == 1	0.683673469387755	67	31	public void Enter ( Section section ) { if ( _dataStack . _size == 1 ) ; _sectionStack . Push ( section ) ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._size >= 1	1	98	0	public void Enter ( Section section ) { if ( _dataStack . _size >= 1 ) ; _sectionStack . Push ( section ) ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._syncRoot == null	1	98	0	public void Enter ( Section section ) { if ( _dataStack . _syncRoot == null ) ; _sectionStack . Push ( section ) ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._version >= 1	1	98	0	public void Enter ( Section section ) { if ( _dataStack . _version >= 1 ) ; _sectionStack . Push ( section ) ; }	_dataStack . _version >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_dataStack._version >= _dataStack._size	1	98	0	public void Enter ( Section section ) { if ( _dataStack . _version >= _dataStack . _size ) ; _sectionStack . Push ( section ) ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter != null	1	98	0	public void Enter ( Section section ) { if ( _indenter != null ) ; _sectionStack . Push ( section ) ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.capnames == null	1	98	0	public void Enter ( Section section ) { if ( _indenter . capnames == null ) ; _sectionStack . Push ( section ) ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.caps == null	1	98	0	public void Enter ( Section section ) { if ( _indenter . caps == null ) ; _sectionStack . Push ( section ) ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.capsize == 1	1	98	0	public void Enter ( Section section ) { if ( _indenter . capsize == 1 ) ; _sectionStack . Push ( section ) ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.capsize <= _dataStack._size	1	98	0	public void Enter ( Section section ) { if ( _indenter . capsize <= _dataStack . _size ) ; _sectionStack . Push ( section ) ; }	_indenter . capsize <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.capsize <= _dataStack._version	1	98	0	public void Enter ( Section section ) { if ( _indenter . capsize <= _dataStack . _version ) ; _sectionStack . Push ( section ) ; }	_indenter . capsize <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.capslist == null	1	98	0	public void Enter ( Section section ) { if ( _indenter . capslist == null ) ; _sectionStack . Push ( section ) ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.code != null	1	98	0	public void Enter ( Section section ) { if ( _indenter . code != null ) ; _sectionStack . Push ( section ) ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.factory == null	1	98	0	public void Enter ( Section section ) { if ( _indenter . factory == null ) ; _sectionStack . Push ( section ) ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.internalMatchTimeout >= 0	1	98	0	public void Enter ( Section section ) { if ( _indenter . internalMatchTimeout >= 0 ) ; _sectionStack . Push ( section ) ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.internalMatchTimeout >= _dataStack._size	1	98	0	public void Enter ( Section section ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; _sectionStack . Push ( section ) ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.internalMatchTimeout >= _dataStack._version	1	98	0	public void Enter ( Section section ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; _sectionStack . Push ( section ) ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.internalMatchTimeout >= _includeLevel	1	98	0	public void Enter ( Section section ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; _sectionStack . Push ( section ) ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.internalMatchTimeout >= _indenter.capsize	1	98	0	public void Enter ( Section section ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; _sectionStack . Push ( section ) ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.pattern != null	1	98	0	public void Enter ( Section section ) { if ( _indenter . pattern != null ) ; _sectionStack . Push ( section ) ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.refsInitialized == true	1	98	0	public void Enter ( Section section ) { if ( _indenter . refsInitialized == true ) ; _sectionStack . Push ( section ) ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.replref != null	1	98	0	public void Enter ( Section section ) { if ( _indenter . replref != null ) ; _sectionStack . Push ( section ) ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.roptions != null	1	98	0	public void Enter ( Section section ) { if ( _indenter . roptions != null ) ; _sectionStack . Push ( section ) ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_indenter.runnerref != null	1	98	0	public void Enter ( Section section ) { if ( _indenter . runnerref != null ) ; _sectionStack . Push ( section ) ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_renderContextBehaviour != null	1	98	0	public void Enter ( Section section ) { if ( _renderContextBehaviour != null ) ; _sectionStack . Push ( section ) ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_sectionStack != null	1	98	0	public void Enter ( Section section ) { if ( _sectionStack != null ) ; _sectionStack . Push ( section ) ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_sectionStack._size >= 0	1	98	0	public void Enter ( Section section ) { if ( _sectionStack . _size >= 0 ) ; _sectionStack . Push ( section ) ; }	_sectionStack . _size >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_sectionStack._size <= _indenter.internalMatchTimeout	1	98	0	public void Enter ( Section section ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; _sectionStack . Push ( section ) ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_sectionStack._syncRoot == null	1	98	0	public void Enter ( Section section ) { if ( _sectionStack . _syncRoot == null ) ; _sectionStack . Push ( section ) ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_sectionStack._version >= 0	1	98	0	public void Enter ( Section section ) { if ( _sectionStack . _version >= 0 ) ; _sectionStack . Push ( section ) ; }	_sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_sectionStack._version <= _indenter.internalMatchTimeout	1	98	0	public void Enter ( Section section ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; _sectionStack . Push ( section ) ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_sectionStack._version >= _sectionStack._size	1	98	0	public void Enter ( Section section ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; _sectionStack . Push ( section ) ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	_writer != null	1	98	0	public void Enter ( Section section ) { if ( _writer != null ) ; _sectionStack . Push ( section ) ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	section != null	1	98	0	public void Enter ( Section section ) { if ( section != null ) ; _sectionStack . Push ( section ) ; }	section != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	section._name != null	1	98	0	public void Enter ( Section section ) { if ( section . _name != null ) ; _sectionStack . Push ( section ) ; }	section . _name != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	section._parts != null	1	98	0	public void Enter ( Section section ) { if ( section . _parts != null ) ; _sectionStack . Push ( section ) ; }	section . _parts != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Enter(Nustache.Core.Section section)	section._templateDefinitions != null	1	98	0	public void Enter ( Section section ) { if ( section . _templateDefinitions != null ) ; _sectionStack . Push ( section ) ; }	section . _templateDefinitions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack != null	1	94	0	public void Exit ( ) { if ( _dataStack != null ) ; _sectionStack . Pop ( ) ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack >= 0	0.0106382978723404	1	93	public void Exit ( ) { if ( _dataStack >= 0 ) ; _sectionStack . Pop ( ) ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Count == 4	0.829787234042553	78	16	public void Exit ( ) { if ( _dataStack . _array . Count == 4 ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_dataStack._syncRoot)	0.132208157524613	94	617	public void Exit ( ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_indenter.capnames)	0.132208157524613	94	617	public void Exit ( ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_indenter.caps)	0.132208157524613	94	617	public void Exit ( ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_indenter.capslist)	0.132208157524613	94	617	public void Exit ( ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_indenter.factory)	0.132208157524613	94	617	public void Exit ( ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_sectionStack._syncRoot)	0.132208157524613	94	617	public void Exit ( ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_templateLocator._methodBase)	0.029535864978903	21	690	public void Exit ( ) { if ( _dataStack . _array . Contains ( _templateLocator . _methodBase ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _templateLocator . _methodBase )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_indent)	0.0829817158931083	59	652	public void Exit ( ) { if ( _dataStack . _array . Contains ( _indent ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.Contains(_templateLocator)	0.10267229254571	73	638	public void Exit ( ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array != null	0.904255319148936	85	9	public void Exit ( ) { if ( _dataStack . _array != null ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array >= 0	0.0319148936170213	3	91	public void Exit ( ) { if ( _dataStack . _array >= 0 ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.All(x => x == null)	0.106382978723404	10	84	public void Exit ( ) { if ( _dataStack . _array . All ( x => x == null ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . All ( x => x == null )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.All(x => x == 1)	0.170212765957447	16	78	public void Exit ( ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.All(x => x >= 1)	0.148936170212766	14	80	public void Exit ( ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.All(x => x >= 0)	0.0957446808510638	9	85	public void Exit ( ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._array.All(x => x <= 1)	0.170212765957447	16	78	public void Exit ( ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; _sectionStack . Pop ( ) ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._size == 1	0.670212765957447	63	31	public void Exit ( ) { if ( _dataStack . _size == 1 ) ; _sectionStack . Pop ( ) ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._size >= 1	1	94	0	public void Exit ( ) { if ( _dataStack . _size >= 1 ) ; _sectionStack . Pop ( ) ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._syncRoot == null	1	94	0	public void Exit ( ) { if ( _dataStack . _syncRoot == null ) ; _sectionStack . Pop ( ) ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_dataStack._version >= _dataStack._size	1	94	0	public void Exit ( ) { if ( _dataStack . _version >= _dataStack . _size ) ; _sectionStack . Pop ( ) ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter != null	1	94	0	public void Exit ( ) { if ( _indenter != null ) ; _sectionStack . Pop ( ) ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.capnames == null	1	94	0	public void Exit ( ) { if ( _indenter . capnames == null ) ; _sectionStack . Pop ( ) ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.caps == null	1	94	0	public void Exit ( ) { if ( _indenter . caps == null ) ; _sectionStack . Pop ( ) ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.capsize == 1	1	94	0	public void Exit ( ) { if ( _indenter . capsize == 1 ) ; _sectionStack . Pop ( ) ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.capsize <= _dataStack._size	1	94	0	public void Exit ( ) { if ( _indenter . capsize <= _dataStack . _size ) ; _sectionStack . Pop ( ) ; }	_indenter . capsize <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.capsize <= _dataStack._version	1	94	0	public void Exit ( ) { if ( _indenter . capsize <= _dataStack . _version ) ; _sectionStack . Pop ( ) ; }	_indenter . capsize <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.capslist == null	1	94	0	public void Exit ( ) { if ( _indenter . capslist == null ) ; _sectionStack . Pop ( ) ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.code != null	1	94	0	public void Exit ( ) { if ( _indenter . code != null ) ; _sectionStack . Pop ( ) ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.factory == null	1	94	0	public void Exit ( ) { if ( _indenter . factory == null ) ; _sectionStack . Pop ( ) ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.internalMatchTimeout >= 0	1	94	0	public void Exit ( ) { if ( _indenter . internalMatchTimeout >= 0 ) ; _sectionStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.internalMatchTimeout >= _dataStack._size	1	94	0	public void Exit ( ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; _sectionStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.internalMatchTimeout >= _dataStack._version	1	94	0	public void Exit ( ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; _sectionStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.internalMatchTimeout >= _includeLevel	1	94	0	public void Exit ( ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; _sectionStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.internalMatchTimeout >= _indenter.capsize	1	94	0	public void Exit ( ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; _sectionStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.pattern != null	1	94	0	public void Exit ( ) { if ( _indenter . pattern != null ) ; _sectionStack . Pop ( ) ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.refsInitialized == true	1	94	0	public void Exit ( ) { if ( _indenter . refsInitialized == true ) ; _sectionStack . Pop ( ) ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.replref != null	1	94	0	public void Exit ( ) { if ( _indenter . replref != null ) ; _sectionStack . Pop ( ) ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.roptions != null	1	94	0	public void Exit ( ) { if ( _indenter . roptions != null ) ; _sectionStack . Pop ( ) ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_indenter.runnerref != null	1	94	0	public void Exit ( ) { if ( _indenter . runnerref != null ) ; _sectionStack . Pop ( ) ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_renderContextBehaviour != null	1	94	0	public void Exit ( ) { if ( _renderContextBehaviour != null ) ; _sectionStack . Pop ( ) ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack != null	1	94	0	public void Exit ( ) { if ( _sectionStack != null ) ; _sectionStack . Pop ( ) ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._size >= 1	1	94	0	public void Exit ( ) { if ( _sectionStack . _size >= 1 ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._size >= _dataStack._size	1	94	0	public void Exit ( ) { if ( _sectionStack . _size >= _dataStack . _size ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _size >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._size >= _indenter.capsize	1	94	0	public void Exit ( ) { if ( _sectionStack . _size >= _indenter . capsize ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _size >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._size <= _indenter.internalMatchTimeout	1	94	0	public void Exit ( ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._syncRoot == null	1	94	0	public void Exit ( ) { if ( _sectionStack . _syncRoot == null ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._version >= 0	1	94	0	public void Exit ( ) { if ( _sectionStack . _version >= 0 ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._version >= _dataStack._size	1	94	0	public void Exit ( ) { if ( _sectionStack . _version >= _dataStack . _size ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._version >= _dataStack._version	1	94	0	public void Exit ( ) { if ( _sectionStack . _version >= _dataStack . _version ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _version >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._version >= _includeLevel	1	94	0	public void Exit ( ) { if ( _sectionStack . _version >= _includeLevel ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _version >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._version >= _indenter.capsize	1	94	0	public void Exit ( ) { if ( _sectionStack . _version >= _indenter . capsize ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _version >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._version <= _indenter.internalMatchTimeout	1	94	0	public void Exit ( ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_sectionStack._version >= _sectionStack._size	1	94	0	public void Exit ( ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; _sectionStack . Pop ( ) ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Exit()	_writer != null	1	94	0	public void Exit ( ) { if ( _writer != null ) ; _sectionStack . Pop ( ) ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack != null	1	89	0	public void Push ( object data ) { if ( _dataStack != null ) ; _dataStack . Push ( data ) ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack >= 0	0.0112359550561798	1	88	public void Push ( object data ) { if ( _dataStack >= 0 ) ; _dataStack . Push ( data ) ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Count == 4	0.831460674157303	74	15	public void Push ( object data ) { if ( _dataStack . _array . Count == 4 ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_dataStack._syncRoot)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_indent)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _indent ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_indenter.capnames)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_indenter.caps)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_indenter.capslist)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_indenter.factory)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_sectionStack._syncRoot)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(_templateLocator)	0.111791730474732	73	580	public void Push ( object data ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.Contains(data)	0.11791730474732	77	576	public void Push ( object data ) { if ( _dataStack . _array . Contains ( data ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . Contains ( data )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array != null	0.887640449438202	79	10	public void Push ( object data ) { if ( _dataStack . _array != null ) ; _dataStack . Push ( data ) ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array >= 0	0.0337078651685393	3	86	public void Push ( object data ) { if ( _dataStack . _array >= 0 ) ; _dataStack . Push ( data ) ; }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.All(x => x == 1)	0.584269662921348	52	37	public void Push ( object data ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.All(x => x >= 1)	0.280898876404494	25	64	public void Push ( object data ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.All(x => x >= 0)	0.359550561797753	32	57	public void Push ( object data ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._array.All(x => x <= 1)	0.584269662921348	52	37	public void Push ( object data ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; _dataStack . Push ( data ) ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._size >= 0	1	89	0	public void Push ( object data ) { if ( _dataStack . _size >= 0 ) ; _dataStack . Push ( data ) ; }	_dataStack . _size >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._size <= _dataStack._array	0.0337078651685393	3	86	public void Push ( object data ) { if ( _dataStack . _size <= _dataStack . _array ) ; _dataStack . Push ( data ) ; }	_dataStack . _size <= _dataStack . _array
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._size <= _dataStack	0.0112359550561798	1	88	public void Push ( object data ) { if ( _dataStack . _size <= _dataStack ) ; _dataStack . Push ( data ) ; }	_dataStack . _size <= _dataStack
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._syncRoot == null	1	89	0	public void Push ( object data ) { if ( _dataStack . _syncRoot == null ) ; _dataStack . Push ( data ) ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._version >= 0	1	89	0	public void Push ( object data ) { if ( _dataStack . _version >= 0 ) ; _dataStack . Push ( data ) ; }	_dataStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_dataStack._version >= _dataStack._size	1	89	0	public void Push ( object data ) { if ( _dataStack . _version >= _dataStack . _size ) ; _dataStack . Push ( data ) ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_includeLevel >= 0	1	89	0	public void Push ( object data ) { if ( _includeLevel >= 0 ) ; _dataStack . Push ( data ) ; }	_includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_includeLevel <= _dataStack._size	1	89	0	public void Push ( object data ) { if ( _includeLevel <= _dataStack . _size ) ; _dataStack . Push ( data ) ; }	_includeLevel <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_includeLevel <= _dataStack._version	1	89	0	public void Push ( object data ) { if ( _includeLevel <= _dataStack . _version ) ; _dataStack . Push ( data ) ; }	_includeLevel <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter != null	1	89	0	public void Push ( object data ) { if ( _indenter != null ) ; _dataStack . Push ( data ) ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.capnames == null	1	89	0	public void Push ( object data ) { if ( _indenter . capnames == null ) ; _dataStack . Push ( data ) ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.caps == null	1	89	0	public void Push ( object data ) { if ( _indenter . caps == null ) ; _dataStack . Push ( data ) ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.capsize == 1	1	89	0	public void Push ( object data ) { if ( _indenter . capsize == 1 ) ; _dataStack . Push ( data ) ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.capslist == null	1	89	0	public void Push ( object data ) { if ( _indenter . capslist == null ) ; _dataStack . Push ( data ) ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.code != null	1	89	0	public void Push ( object data ) { if ( _indenter . code != null ) ; _dataStack . Push ( data ) ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.factory == null	1	89	0	public void Push ( object data ) { if ( _indenter . factory == null ) ; _dataStack . Push ( data ) ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.internalMatchTimeout >= 0	1	89	0	public void Push ( object data ) { if ( _indenter . internalMatchTimeout >= 0 ) ; _dataStack . Push ( data ) ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.internalMatchTimeout >= _dataStack._size	1	89	0	public void Push ( object data ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; _dataStack . Push ( data ) ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.internalMatchTimeout >= _dataStack._version	1	89	0	public void Push ( object data ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; _dataStack . Push ( data ) ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.internalMatchTimeout >= _includeLevel	1	89	0	public void Push ( object data ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; _dataStack . Push ( data ) ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.internalMatchTimeout >= _indenter.capsize	1	89	0	public void Push ( object data ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; _dataStack . Push ( data ) ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.pattern != null	1	89	0	public void Push ( object data ) { if ( _indenter . pattern != null ) ; _dataStack . Push ( data ) ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.refsInitialized == true	1	89	0	public void Push ( object data ) { if ( _indenter . refsInitialized == true ) ; _dataStack . Push ( data ) ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.replref != null	1	89	0	public void Push ( object data ) { if ( _indenter . replref != null ) ; _dataStack . Push ( data ) ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.roptions != null	1	89	0	public void Push ( object data ) { if ( _indenter . roptions != null ) ; _dataStack . Push ( data ) ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_indenter.runnerref != null	1	89	0	public void Push ( object data ) { if ( _indenter . runnerref != null ) ; _dataStack . Push ( data ) ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_renderContextBehaviour != null	1	89	0	public void Push ( object data ) { if ( _renderContextBehaviour != null ) ; _dataStack . Push ( data ) ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack != null	1	89	0	public void Push ( object data ) { if ( _sectionStack != null ) ; _dataStack . Push ( data ) ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._size >= 0	1	89	0	public void Push ( object data ) { if ( _sectionStack . _size >= 0 ) ; _dataStack . Push ( data ) ; }	_sectionStack . _size >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._size == _dataStack._size	1	89	0	public void Push ( object data ) { if ( _sectionStack . _size == _dataStack . _size ) ; _dataStack . Push ( data ) ; }	_sectionStack . _size == _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._size <= _dataStack._version	1	89	0	public void Push ( object data ) { if ( _sectionStack . _size <= _dataStack . _version ) ; _dataStack . Push ( data ) ; }	_sectionStack . _size <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._size >= _includeLevel	1	89	0	public void Push ( object data ) { if ( _sectionStack . _size >= _includeLevel ) ; _dataStack . Push ( data ) ; }	_sectionStack . _size >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._size <= _indenter.internalMatchTimeout	1	89	0	public void Push ( object data ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; _dataStack . Push ( data ) ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._syncRoot == null	1	89	0	public void Push ( object data ) { if ( _sectionStack . _syncRoot == null ) ; _dataStack . Push ( data ) ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._version >= 0	1	89	0	public void Push ( object data ) { if ( _sectionStack . _version >= 0 ) ; _dataStack . Push ( data ) ; }	_sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._version >= _dataStack._size	1	89	0	public void Push ( object data ) { if ( _sectionStack . _version >= _dataStack . _size ) ; _dataStack . Push ( data ) ; }	_sectionStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._version == _dataStack._version	1	89	0	public void Push ( object data ) { if ( _sectionStack . _version == _dataStack . _version ) ; _dataStack . Push ( data ) ; }	_sectionStack . _version == _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._version >= _includeLevel	1	89	0	public void Push ( object data ) { if ( _sectionStack . _version >= _includeLevel ) ; _dataStack . Push ( data ) ; }	_sectionStack . _version >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._version <= _indenter.internalMatchTimeout	1	89	0	public void Push ( object data ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; _dataStack . Push ( data ) ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_sectionStack._version >= _sectionStack._size	1	89	0	public void Push ( object data ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; _dataStack . Push ( data ) ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_templateLocator == null	1	89	0	public void Push ( object data ) { if ( _templateLocator == null ) ; _dataStack . Push ( data ) ; }	_templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Push(System.Object data)	_writer != null	1	89	0	public void Push ( object data ) { if ( _writer != null ) ; _dataStack . Push ( data ) ; }	_writer != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack != null	1	89	0	public void Pop ( ) { if ( _dataStack != null ) ; _dataStack . Pop ( ) ; }	_dataStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack >= 0	0.0112359550561798	1	88	public void Pop ( ) { if ( _dataStack >= 0 ) ; _dataStack . Pop ( ) ; }	_dataStack >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Count == 4	0.820224719101124	73	16	public void Pop ( ) { if ( _dataStack . _array . Count == 4 ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Count == 4
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_dataStack._syncRoot)	0.129172714078374	89	600	public void Pop ( ) { if ( _dataStack . _array . Contains ( _dataStack . _syncRoot ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _dataStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_indent)	0.105950653120464	73	616	public void Pop ( ) { if ( _dataStack . _array . Contains ( _indent ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indent )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_indenter.capnames)	0.129172714078374	89	600	public void Pop ( ) { if ( _dataStack . _array . Contains ( _indenter . capnames ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . capnames )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_indenter.caps)	0.129172714078374	89	600	public void Pop ( ) { if ( _dataStack . _array . Contains ( _indenter . caps ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . caps )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_indenter.capslist)	0.129172714078374	89	600	public void Pop ( ) { if ( _dataStack . _array . Contains ( _indenter . capslist ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . capslist )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_indenter.factory)	0.129172714078374	89	600	public void Pop ( ) { if ( _dataStack . _array . Contains ( _indenter . factory ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _indenter . factory )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_sectionStack._syncRoot)	0.129172714078374	89	600	public void Pop ( ) { if ( _dataStack . _array . Contains ( _sectionStack . _syncRoot ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _sectionStack . _syncRoot )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.Contains(_templateLocator)	0.129172714078374	89	600	public void Pop ( ) { if ( _dataStack . _array . Contains ( _templateLocator ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . Contains ( _templateLocator )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array != null	0.887640449438202	79	10	public void Pop ( ) { if ( _dataStack . _array != null ) ; _dataStack . Pop ( ) ; }	_dataStack . _array != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array >= 0	0.0337078651685393	3	86	public void Pop ( ) { if ( _dataStack . _array >= 0 ) ; _dataStack . Pop ( ) ; }	_dataStack . _array >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.All(x => x == 1)	0.179775280898876	16	73	public void Pop ( ) { if ( _dataStack . _array . All ( x => x == 1 ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . All ( x => x == 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.All(x => x >= 1)	0.157303370786517	14	75	public void Pop ( ) { if ( _dataStack . _array . All ( x => x >= 1 ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . All ( x => x >= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.All(x => x >= 0)	0.101123595505618	9	80	public void Pop ( ) { if ( _dataStack . _array . All ( x => x >= 0 ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . All ( x => x >= 0 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._array.All(x => x <= 1)	0.179775280898876	16	73	public void Pop ( ) { if ( _dataStack . _array . All ( x => x <= 1 ) ) ; _dataStack . Pop ( ) ; }	_dataStack . _array . All ( x => x <= 1 )
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._size == 1	0.651685393258427	58	31	public void Pop ( ) { if ( _dataStack . _size == 1 ) ; _dataStack . Pop ( ) ; }	_dataStack . _size == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._size >= 1	1	89	0	public void Pop ( ) { if ( _dataStack . _size >= 1 ) ; _dataStack . Pop ( ) ; }	_dataStack . _size >= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._size <= 1	0.651685393258427	58	31	public void Pop ( ) { if ( _dataStack . _size <= 1 ) ; _dataStack . Pop ( ) ; }	_dataStack . _size <= 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._size <= _dataStack._array	0.0337078651685393	3	86	public void Pop ( ) { if ( _dataStack . _size <= _dataStack . _array ) ; _dataStack . Pop ( ) ; }	_dataStack . _size <= _dataStack . _array
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._syncRoot == null	1	89	0	public void Pop ( ) { if ( _dataStack . _syncRoot == null ) ; _dataStack . Pop ( ) ; }	_dataStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._version >= 0	1	89	0	public void Pop ( ) { if ( _dataStack . _version >= 0 ) ; _dataStack . Pop ( ) ; }	_dataStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_dataStack._version >= _dataStack._size	1	89	0	public void Pop ( ) { if ( _dataStack . _version >= _dataStack . _size ) ; _dataStack . Pop ( ) ; }	_dataStack . _version >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_includeLevel >= 0	1	89	0	public void Pop ( ) { if ( _includeLevel >= 0 ) ; _dataStack . Pop ( ) ; }	_includeLevel >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_includeLevel <= _dataStack._version	1	89	0	public void Pop ( ) { if ( _includeLevel <= _dataStack . _version ) ; _dataStack . Pop ( ) ; }	_includeLevel <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter != null	1	89	0	public void Pop ( ) { if ( _indenter != null ) ; _dataStack . Pop ( ) ; }	_indenter != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.capnames == null	1	89	0	public void Pop ( ) { if ( _indenter . capnames == null ) ; _dataStack . Pop ( ) ; }	_indenter . capnames == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.caps == null	1	89	0	public void Pop ( ) { if ( _indenter . caps == null ) ; _dataStack . Pop ( ) ; }	_indenter . caps == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.capsize == 1	1	89	0	public void Pop ( ) { if ( _indenter . capsize == 1 ) ; _dataStack . Pop ( ) ; }	_indenter . capsize == 1
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.capsize <= _dataStack._size	1	89	0	public void Pop ( ) { if ( _indenter . capsize <= _dataStack . _size ) ; _dataStack . Pop ( ) ; }	_indenter . capsize <= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.capsize <= _dataStack._version	1	89	0	public void Pop ( ) { if ( _indenter . capsize <= _dataStack . _version ) ; _dataStack . Pop ( ) ; }	_indenter . capsize <= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.capslist == null	1	89	0	public void Pop ( ) { if ( _indenter . capslist == null ) ; _dataStack . Pop ( ) ; }	_indenter . capslist == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.code != null	1	89	0	public void Pop ( ) { if ( _indenter . code != null ) ; _dataStack . Pop ( ) ; }	_indenter . code != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.factory == null	1	89	0	public void Pop ( ) { if ( _indenter . factory == null ) ; _dataStack . Pop ( ) ; }	_indenter . factory == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.internalMatchTimeout >= 0	1	89	0	public void Pop ( ) { if ( _indenter . internalMatchTimeout >= 0 ) ; _dataStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.internalMatchTimeout >= _dataStack._size	1	89	0	public void Pop ( ) { if ( _indenter . internalMatchTimeout >= _dataStack . _size ) ; _dataStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _dataStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.internalMatchTimeout >= _dataStack._version	1	89	0	public void Pop ( ) { if ( _indenter . internalMatchTimeout >= _dataStack . _version ) ; _dataStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _dataStack . _version
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.internalMatchTimeout >= _includeLevel	1	89	0	public void Pop ( ) { if ( _indenter . internalMatchTimeout >= _includeLevel ) ; _dataStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.internalMatchTimeout >= _indenter.capsize	1	89	0	public void Pop ( ) { if ( _indenter . internalMatchTimeout >= _indenter . capsize ) ; _dataStack . Pop ( ) ; }	_indenter . internalMatchTimeout >= _indenter . capsize
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.pattern != null	1	89	0	public void Pop ( ) { if ( _indenter . pattern != null ) ; _dataStack . Pop ( ) ; }	_indenter . pattern != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.refsInitialized == true	1	89	0	public void Pop ( ) { if ( _indenter . refsInitialized == true ) ; _dataStack . Pop ( ) ; }	_indenter . refsInitialized == true
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.replref != null	1	89	0	public void Pop ( ) { if ( _indenter . replref != null ) ; _dataStack . Pop ( ) ; }	_indenter . replref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.roptions != null	1	89	0	public void Pop ( ) { if ( _indenter . roptions != null ) ; _dataStack . Pop ( ) ; }	_indenter . roptions != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_indenter.runnerref != null	1	89	0	public void Pop ( ) { if ( _indenter . runnerref != null ) ; _dataStack . Pop ( ) ; }	_indenter . runnerref != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_renderContextBehaviour != null	1	89	0	public void Pop ( ) { if ( _renderContextBehaviour != null ) ; _dataStack . Pop ( ) ; }	_renderContextBehaviour != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack != null	1	89	0	public void Pop ( ) { if ( _sectionStack != null ) ; _dataStack . Pop ( ) ; }	_sectionStack != null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._size >= 0	1	89	0	public void Pop ( ) { if ( _sectionStack . _size >= 0 ) ; _dataStack . Pop ( ) ; }	_sectionStack . _size >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._size >= _includeLevel	1	89	0	public void Pop ( ) { if ( _sectionStack . _size >= _includeLevel ) ; _dataStack . Pop ( ) ; }	_sectionStack . _size >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._size <= _indenter.internalMatchTimeout	1	89	0	public void Pop ( ) { if ( _sectionStack . _size <= _indenter . internalMatchTimeout ) ; _dataStack . Pop ( ) ; }	_sectionStack . _size <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._syncRoot == null	1	89	0	public void Pop ( ) { if ( _sectionStack . _syncRoot == null ) ; _dataStack . Pop ( ) ; }	_sectionStack . _syncRoot == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._version >= 0	1	89	0	public void Pop ( ) { if ( _sectionStack . _version >= 0 ) ; _dataStack . Pop ( ) ; }	_sectionStack . _version >= 0
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._version >= _includeLevel	1	89	0	public void Pop ( ) { if ( _sectionStack . _version >= _includeLevel ) ; _dataStack . Pop ( ) ; }	_sectionStack . _version >= _includeLevel
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._version <= _indenter.internalMatchTimeout	1	89	0	public void Pop ( ) { if ( _sectionStack . _version <= _indenter . internalMatchTimeout ) ; _dataStack . Pop ( ) ; }	_sectionStack . _version <= _indenter . internalMatchTimeout
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_sectionStack._version >= _sectionStack._size	1	89	0	public void Pop ( ) { if ( _sectionStack . _version >= _sectionStack . _size ) ; _dataStack . Pop ( ) ; }	_sectionStack . _version >= _sectionStack . _size
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_templateLocator == null	1	89	0	public void Pop ( ) { if ( _templateLocator == null ) ; _dataStack . Pop ( ) ; }	_templateLocator == null
D:\Data\Code\Invariants\Repos\nustache\Nustache.Core\RenderContext.cs	Nustache.Core.RenderContext.Pop()	_writer != null	1	89	0	public void Pop ( ) { if ( _writer != null ) ; _dataStack . Pop ( ) ; }	_writer != null
